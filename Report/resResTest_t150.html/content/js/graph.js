/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "maxY": 16112.0, "series": [{"data": [[0.0, 386.0], [0.1, 386.0], [0.2, 386.0], [0.3, 386.0], [0.4, 386.0], [0.5, 386.0], [0.6, 386.0], [0.7, 387.0], [0.8, 387.0], [0.9, 387.0], [1.0, 387.0], [1.1, 387.0], [1.2, 387.0], [1.3, 387.0], [1.4, 388.0], [1.5, 388.0], [1.6, 388.0], [1.7, 388.0], [1.8, 388.0], [1.9, 388.0], [2.0, 389.0], [2.1, 389.0], [2.2, 389.0], [2.3, 389.0], [2.4, 389.0], [2.5, 389.0], [2.6, 389.0], [2.7, 390.0], [2.8, 390.0], [2.9, 390.0], [3.0, 390.0], [3.1, 390.0], [3.2, 390.0], [3.3, 390.0], [3.4, 390.0], [3.5, 390.0], [3.6, 390.0], [3.7, 390.0], [3.8, 390.0], [3.9, 390.0], [4.0, 390.0], [4.1, 390.0], [4.2, 390.0], [4.3, 390.0], [4.4, 390.0], [4.5, 390.0], [4.6, 390.0], [4.7, 391.0], [4.8, 391.0], [4.9, 391.0], [5.0, 391.0], [5.1, 391.0], [5.2, 391.0], [5.3, 391.0], [5.4, 391.0], [5.5, 391.0], [5.6, 391.0], [5.7, 391.0], [5.8, 391.0], [5.9, 391.0], [6.0, 391.0], [6.1, 391.0], [6.2, 391.0], [6.3, 391.0], [6.4, 391.0], [6.5, 391.0], [6.6, 391.0], [6.7, 391.0], [6.8, 391.0], [6.9, 391.0], [7.0, 391.0], [7.1, 391.0], [7.2, 391.0], [7.3, 391.0], [7.4, 392.0], [7.5, 392.0], [7.6, 392.0], [7.7, 392.0], [7.8, 392.0], [7.9, 392.0], [8.0, 393.0], [8.1, 393.0], [8.2, 393.0], [8.3, 393.0], [8.4, 393.0], [8.5, 393.0], [8.6, 393.0], [8.7, 394.0], [8.8, 394.0], [8.9, 394.0], [9.0, 394.0], [9.1, 394.0], [9.2, 394.0], [9.3, 394.0], [9.4, 395.0], [9.5, 395.0], [9.6, 395.0], [9.7, 395.0], [9.8, 395.0], [9.9, 395.0], [10.0, 395.0], [10.1, 395.0], [10.2, 395.0], [10.3, 395.0], [10.4, 395.0], [10.5, 395.0], [10.6, 395.0], [10.7, 395.0], [10.8, 395.0], [10.9, 395.0], [11.0, 395.0], [11.1, 395.0], [11.2, 395.0], [11.3, 395.0], [11.4, 395.0], [11.5, 395.0], [11.6, 395.0], [11.7, 395.0], [11.8, 395.0], [11.9, 395.0], [12.0, 395.0], [12.1, 395.0], [12.2, 395.0], [12.3, 395.0], [12.4, 395.0], [12.5, 395.0], [12.6, 395.0], [12.7, 396.0], [12.8, 396.0], [12.9, 396.0], [13.0, 396.0], [13.1, 396.0], [13.2, 396.0], [13.3, 396.0], [13.4, 396.0], [13.5, 396.0], [13.6, 396.0], [13.7, 396.0], [13.8, 396.0], [13.9, 396.0], [14.0, 397.0], [14.1, 397.0], [14.2, 397.0], [14.3, 397.0], [14.4, 397.0], [14.5, 397.0], [14.6, 397.0], [14.7, 397.0], [14.8, 397.0], [14.9, 397.0], [15.0, 397.0], [15.1, 397.0], [15.2, 397.0], [15.3, 397.0], [15.4, 397.0], [15.5, 397.0], [15.6, 397.0], [15.7, 397.0], [15.8, 397.0], [15.9, 397.0], [16.0, 397.0], [16.1, 397.0], [16.2, 397.0], [16.3, 397.0], [16.4, 397.0], [16.5, 397.0], [16.6, 397.0], [16.7, 398.0], [16.8, 398.0], [16.9, 398.0], [17.0, 398.0], [17.1, 398.0], [17.2, 398.0], [17.3, 398.0], [17.4, 398.0], [17.5, 398.0], [17.6, 398.0], [17.7, 398.0], [17.8, 398.0], [17.9, 398.0], [18.0, 398.0], [18.1, 398.0], [18.2, 398.0], [18.3, 398.0], [18.4, 398.0], [18.5, 398.0], [18.6, 398.0], [18.7, 398.0], [18.8, 398.0], [18.9, 398.0], [19.0, 398.0], [19.1, 398.0], [19.2, 398.0], [19.3, 398.0], [19.4, 399.0], [19.5, 399.0], [19.6, 399.0], [19.7, 399.0], [19.8, 399.0], [19.9, 399.0], [20.0, 399.0], [20.1, 399.0], [20.2, 399.0], [20.3, 399.0], [20.4, 399.0], [20.5, 399.0], [20.6, 399.0], [20.7, 399.0], [20.8, 399.0], [20.9, 399.0], [21.0, 399.0], [21.1, 399.0], [21.2, 399.0], [21.3, 399.0], [21.4, 400.0], [21.5, 400.0], [21.6, 400.0], [21.7, 400.0], [21.8, 400.0], [21.9, 400.0], [22.0, 400.0], [22.1, 400.0], [22.2, 400.0], [22.3, 400.0], [22.4, 400.0], [22.5, 400.0], [22.6, 400.0], [22.7, 400.0], [22.8, 400.0], [22.9, 400.0], [23.0, 400.0], [23.1, 400.0], [23.2, 400.0], [23.3, 400.0], [23.4, 400.0], [23.5, 400.0], [23.6, 400.0], [23.7, 400.0], [23.8, 400.0], [23.9, 400.0], [24.0, 400.0], [24.1, 400.0], [24.2, 400.0], [24.3, 400.0], [24.4, 400.0], [24.5, 400.0], [24.6, 400.0], [24.7, 400.0], [24.8, 400.0], [24.9, 400.0], [25.0, 400.0], [25.1, 400.0], [25.2, 400.0], [25.3, 400.0], [25.4, 401.0], [25.5, 401.0], [25.6, 401.0], [25.7, 401.0], [25.8, 401.0], [25.9, 401.0], [26.0, 401.0], [26.1, 401.0], [26.2, 401.0], [26.3, 401.0], [26.4, 401.0], [26.5, 401.0], [26.6, 401.0], [26.7, 401.0], [26.8, 401.0], [26.9, 401.0], [27.0, 401.0], [27.1, 401.0], [27.2, 401.0], [27.3, 401.0], [27.4, 401.0], [27.5, 401.0], [27.6, 401.0], [27.7, 401.0], [27.8, 401.0], [27.9, 401.0], [28.0, 401.0], [28.1, 401.0], [28.2, 401.0], [28.3, 401.0], [28.4, 401.0], [28.5, 401.0], [28.6, 401.0], [28.7, 401.0], [28.8, 401.0], [28.9, 401.0], [29.0, 401.0], [29.1, 401.0], [29.2, 401.0], [29.3, 401.0], [29.4, 402.0], [29.5, 402.0], [29.6, 402.0], [29.7, 402.0], [29.8, 402.0], [29.9, 402.0], [30.0, 402.0], [30.1, 402.0], [30.2, 402.0], [30.3, 402.0], [30.4, 402.0], [30.5, 402.0], [30.6, 402.0], [30.7, 402.0], [30.8, 402.0], [30.9, 402.0], [31.0, 402.0], [31.1, 402.0], [31.2, 402.0], [31.3, 402.0], [31.4, 403.0], [31.5, 403.0], [31.6, 403.0], [31.7, 403.0], [31.8, 403.0], [31.9, 403.0], [32.0, 403.0], [32.1, 403.0], [32.2, 403.0], [32.3, 403.0], [32.4, 403.0], [32.5, 403.0], [32.6, 403.0], [32.7, 403.0], [32.8, 403.0], [32.9, 403.0], [33.0, 403.0], [33.1, 403.0], [33.2, 403.0], [33.3, 403.0], [33.4, 404.0], [33.5, 404.0], [33.6, 404.0], [33.7, 404.0], [33.8, 404.0], [33.9, 404.0], [34.0, 404.0], [34.1, 404.0], [34.2, 404.0], [34.3, 404.0], [34.4, 404.0], [34.5, 404.0], [34.6, 404.0], [34.7, 404.0], [34.8, 404.0], [34.9, 404.0], [35.0, 404.0], [35.1, 404.0], [35.2, 404.0], [35.3, 404.0], [35.4, 404.0], [35.5, 404.0], [35.6, 404.0], [35.7, 404.0], [35.8, 404.0], [35.9, 404.0], [36.0, 404.0], [36.1, 404.0], [36.2, 404.0], [36.3, 404.0], [36.4, 404.0], [36.5, 404.0], [36.6, 404.0], [36.7, 404.0], [36.8, 404.0], [36.9, 404.0], [37.0, 404.0], [37.1, 404.0], [37.2, 404.0], [37.3, 404.0], [37.4, 405.0], [37.5, 405.0], [37.6, 405.0], [37.7, 405.0], [37.8, 405.0], [37.9, 405.0], [38.0, 405.0], [38.1, 405.0], [38.2, 405.0], [38.3, 405.0], [38.4, 405.0], [38.5, 405.0], [38.6, 405.0], [38.7, 405.0], [38.8, 405.0], [38.9, 405.0], [39.0, 405.0], [39.1, 405.0], [39.2, 405.0], [39.3, 405.0], [39.4, 406.0], [39.5, 406.0], [39.6, 406.0], [39.7, 406.0], [39.8, 406.0], [39.9, 406.0], [40.0, 406.0], [40.1, 406.0], [40.2, 406.0], [40.3, 406.0], [40.4, 406.0], [40.5, 406.0], [40.6, 406.0], [40.7, 407.0], [40.8, 407.0], [40.9, 407.0], [41.0, 407.0], [41.1, 407.0], [41.2, 407.0], [41.3, 407.0], [41.4, 408.0], [41.5, 408.0], [41.6, 408.0], [41.7, 408.0], [41.8, 408.0], [41.9, 408.0], [42.0, 408.0], [42.1, 408.0], [42.2, 408.0], [42.3, 408.0], [42.4, 408.0], [42.5, 408.0], [42.6, 408.0], [42.7, 409.0], [42.8, 409.0], [42.9, 409.0], [43.0, 409.0], [43.1, 409.0], [43.2, 409.0], [43.3, 409.0], [43.4, 409.0], [43.5, 409.0], [43.6, 409.0], [43.7, 409.0], [43.8, 409.0], [43.9, 409.0], [44.0, 409.0], [44.1, 410.0], [44.2, 410.0], [44.3, 410.0], [44.4, 410.0], [44.5, 410.0], [44.6, 410.0], [44.7, 410.0], [44.8, 410.0], [44.9, 410.0], [45.0, 410.0], [45.1, 410.0], [45.2, 410.0], [45.3, 410.0], [45.4, 410.0], [45.5, 410.0], [45.6, 410.0], [45.7, 410.0], [45.8, 410.0], [45.9, 410.0], [46.0, 410.0], [46.1, 411.0], [46.2, 411.0], [46.3, 411.0], [46.4, 411.0], [46.5, 411.0], [46.6, 411.0], [46.7, 411.0], [46.8, 411.0], [46.9, 411.0], [47.0, 411.0], [47.1, 411.0], [47.2, 411.0], [47.3, 411.0], [47.4, 412.0], [47.5, 412.0], [47.6, 412.0], [47.7, 412.0], [47.8, 412.0], [47.9, 412.0], [48.0, 412.0], [48.1, 413.0], [48.2, 413.0], [48.3, 413.0], [48.4, 413.0], [48.5, 413.0], [48.6, 413.0], [48.7, 413.0], [48.8, 413.0], [48.9, 413.0], [49.0, 413.0], [49.1, 413.0], [49.2, 413.0], [49.3, 413.0], [49.4, 414.0], [49.5, 414.0], [49.6, 414.0], [49.7, 414.0], [49.8, 414.0], [49.9, 414.0], [50.0, 414.0], [50.1, 415.0], [50.2, 415.0], [50.3, 415.0], [50.4, 415.0], [50.5, 415.0], [50.6, 415.0], [50.7, 415.0], [50.8, 415.0], [50.9, 415.0], [51.0, 415.0], [51.1, 415.0], [51.2, 415.0], [51.3, 415.0], [51.4, 417.0], [51.5, 417.0], [51.6, 417.0], [51.7, 417.0], [51.8, 417.0], [51.9, 417.0], [52.0, 417.0], [52.1, 418.0], [52.2, 418.0], [52.3, 418.0], [52.4, 418.0], [52.5, 418.0], [52.6, 418.0], [52.7, 418.0], [52.8, 418.0], [52.9, 418.0], [53.0, 418.0], [53.1, 418.0], [53.2, 418.0], [53.3, 418.0], [53.4, 418.0], [53.5, 418.0], [53.6, 418.0], [53.7, 418.0], [53.8, 418.0], [53.9, 418.0], [54.0, 418.0], [54.1, 420.0], [54.2, 420.0], [54.3, 420.0], [54.4, 420.0], [54.5, 420.0], [54.6, 420.0], [54.7, 420.0], [54.8, 420.0], [54.9, 420.0], [55.0, 420.0], [55.1, 420.0], [55.2, 420.0], [55.3, 420.0], [55.4, 421.0], [55.5, 421.0], [55.6, 421.0], [55.7, 421.0], [55.8, 421.0], [55.9, 421.0], [56.0, 421.0], [56.1, 421.0], [56.2, 421.0], [56.3, 421.0], [56.4, 421.0], [56.5, 421.0], [56.6, 421.0], [56.7, 421.0], [56.8, 421.0], [56.9, 421.0], [57.0, 421.0], [57.1, 421.0], [57.2, 421.0], [57.3, 421.0], [57.4, 423.0], [57.5, 423.0], [57.6, 423.0], [57.7, 423.0], [57.8, 423.0], [57.9, 423.0], [58.0, 423.0], [58.1, 426.0], [58.2, 426.0], [58.3, 426.0], [58.4, 426.0], [58.5, 426.0], [58.6, 426.0], [58.7, 427.0], [58.8, 427.0], [58.9, 427.0], [59.0, 427.0], [59.1, 427.0], [59.2, 427.0], [59.3, 427.0], [59.4, 437.0], [59.5, 437.0], [59.6, 437.0], [59.7, 437.0], [59.8, 437.0], [59.9, 437.0], [60.0, 438.0], [60.1, 438.0], [60.2, 438.0], [60.3, 438.0], [60.4, 438.0], [60.5, 438.0], [60.6, 438.0], [60.7, 440.0], [60.8, 440.0], [60.9, 440.0], [61.0, 440.0], [61.1, 440.0], [61.2, 440.0], [61.3, 440.0], [61.4, 442.0], [61.5, 442.0], [61.6, 442.0], [61.7, 442.0], [61.8, 442.0], [61.9, 442.0], [62.0, 443.0], [62.1, 443.0], [62.2, 443.0], [62.3, 443.0], [62.4, 443.0], [62.5, 443.0], [62.6, 443.0], [62.7, 445.0], [62.8, 445.0], [62.9, 445.0], [63.0, 445.0], [63.1, 445.0], [63.2, 445.0], [63.3, 445.0], [63.4, 448.0], [63.5, 448.0], [63.6, 448.0], [63.7, 448.0], [63.8, 448.0], [63.9, 448.0], [64.0, 449.0], [64.1, 449.0], [64.2, 449.0], [64.3, 449.0], [64.4, 449.0], [64.5, 449.0], [64.6, 449.0], [64.7, 449.0], [64.8, 449.0], [64.9, 449.0], [65.0, 449.0], [65.1, 449.0], [65.2, 449.0], [65.3, 449.0], [65.4, 452.0], [65.5, 452.0], [65.6, 452.0], [65.7, 452.0], [65.8, 452.0], [65.9, 452.0], [66.0, 456.0], [66.1, 456.0], [66.2, 456.0], [66.3, 456.0], [66.4, 456.0], [66.5, 456.0], [66.6, 456.0], [66.7, 472.0], [66.8, 472.0], [66.9, 472.0], [67.0, 472.0], [67.1, 472.0], [67.2, 472.0], [67.3, 472.0], [67.4, 472.0], [67.5, 472.0], [67.6, 472.0], [67.7, 472.0], [67.8, 472.0], [67.9, 472.0], [68.0, 474.0], [68.1, 474.0], [68.2, 474.0], [68.3, 474.0], [68.4, 474.0], [68.5, 474.0], [68.6, 474.0], [68.7, 475.0], [68.8, 475.0], [68.9, 475.0], [69.0, 475.0], [69.1, 475.0], [69.2, 475.0], [69.3, 475.0], [69.4, 475.0], [69.5, 475.0], [69.6, 475.0], [69.7, 475.0], [69.8, 475.0], [69.9, 475.0], [70.0, 476.0], [70.1, 476.0], [70.2, 476.0], [70.3, 476.0], [70.4, 476.0], [70.5, 476.0], [70.6, 476.0], [70.7, 476.0], [70.8, 476.0], [70.9, 476.0], [71.0, 476.0], [71.1, 476.0], [71.2, 476.0], [71.3, 476.0], [71.4, 477.0], [71.5, 477.0], [71.6, 477.0], [71.7, 477.0], [71.8, 477.0], [71.9, 477.0], [72.0, 477.0], [72.1, 477.0], [72.2, 477.0], [72.3, 477.0], [72.4, 477.0], [72.5, 477.0], [72.6, 477.0], [72.7, 478.0], [72.8, 478.0], [72.9, 478.0], [73.0, 478.0], [73.1, 478.0], [73.2, 478.0], [73.3, 478.0], [73.4, 479.0], [73.5, 479.0], [73.6, 479.0], [73.7, 479.0], [73.8, 479.0], [73.9, 479.0], [74.0, 480.0], [74.1, 480.0], [74.2, 480.0], [74.3, 480.0], [74.4, 480.0], [74.5, 480.0], [74.6, 480.0], [74.7, 481.0], [74.8, 481.0], [74.9, 481.0], [75.0, 481.0], [75.1, 481.0], [75.2, 481.0], [75.3, 481.0], [75.4, 482.0], [75.5, 482.0], [75.6, 482.0], [75.7, 482.0], [75.8, 482.0], [75.9, 482.0], [76.0, 482.0], [76.1, 482.0], [76.2, 482.0], [76.3, 482.0], [76.4, 482.0], [76.5, 482.0], [76.6, 482.0], [76.7, 482.0], [76.8, 482.0], [76.9, 482.0], [77.0, 482.0], [77.1, 482.0], [77.2, 482.0], [77.3, 482.0], [77.4, 484.0], [77.5, 484.0], [77.6, 484.0], [77.7, 484.0], [77.8, 484.0], [77.9, 484.0], [78.0, 484.0], [78.1, 484.0], [78.2, 484.0], [78.3, 484.0], [78.4, 484.0], [78.5, 484.0], [78.6, 484.0], [78.7, 484.0], [78.8, 484.0], [78.9, 484.0], [79.0, 484.0], [79.1, 484.0], [79.2, 484.0], [79.3, 484.0], [79.4, 486.0], [79.5, 486.0], [79.6, 486.0], [79.7, 486.0], [79.8, 486.0], [79.9, 486.0], [80.0, 486.0], [80.1, 486.0], [80.2, 486.0], [80.3, 486.0], [80.4, 486.0], [80.5, 486.0], [80.6, 486.0], [80.7, 487.0], [80.8, 487.0], [80.9, 487.0], [81.0, 487.0], [81.1, 487.0], [81.2, 487.0], [81.3, 487.0], [81.4, 494.0], [81.5, 494.0], [81.6, 494.0], [81.7, 494.0], [81.8, 494.0], [81.9, 494.0], [82.0, 497.0], [82.1, 497.0], [82.2, 497.0], [82.3, 497.0], [82.4, 497.0], [82.5, 497.0], [82.6, 497.0], [82.7, 498.0], [82.8, 498.0], [82.9, 498.0], [83.0, 498.0], [83.1, 498.0], [83.2, 498.0], [83.3, 498.0], [83.4, 504.0], [83.5, 504.0], [83.6, 504.0], [83.7, 504.0], [83.8, 504.0], [83.9, 504.0], [84.0, 504.0], [84.1, 507.0], [84.2, 507.0], [84.3, 507.0], [84.4, 507.0], [84.5, 507.0], [84.6, 507.0], [84.7, 510.0], [84.8, 510.0], [84.9, 510.0], [85.0, 510.0], [85.1, 510.0], [85.2, 510.0], [85.3, 510.0], [85.4, 514.0], [85.5, 514.0], [85.6, 514.0], [85.7, 514.0], [85.8, 514.0], [85.9, 514.0], [86.0, 514.0], [86.1, 515.0], [86.2, 515.0], [86.3, 515.0], [86.4, 515.0], [86.5, 515.0], [86.6, 515.0], [86.7, 522.0], [86.8, 522.0], [86.9, 522.0], [87.0, 522.0], [87.1, 522.0], [87.2, 522.0], [87.3, 522.0], [87.4, 522.0], [87.5, 522.0], [87.6, 522.0], [87.7, 522.0], [87.8, 522.0], [87.9, 522.0], [88.0, 522.0], [88.1, 523.0], [88.2, 523.0], [88.3, 523.0], [88.4, 523.0], [88.5, 523.0], [88.6, 523.0], [88.7, 525.0], [88.8, 525.0], [88.9, 525.0], [89.0, 525.0], [89.1, 525.0], [89.2, 525.0], [89.3, 525.0], [89.4, 527.0], [89.5, 527.0], [89.6, 527.0], [89.7, 527.0], [89.8, 527.0], [89.9, 527.0], [90.0, 527.0], [90.1, 603.0], [90.2, 603.0], [90.3, 603.0], [90.4, 603.0], [90.5, 603.0], [90.6, 603.0], [90.7, 605.0], [90.8, 605.0], [90.9, 605.0], [91.0, 605.0], [91.1, 605.0], [91.2, 605.0], [91.3, 605.0], [91.4, 616.0], [91.5, 616.0], [91.6, 616.0], [91.7, 616.0], [91.8, 616.0], [91.9, 616.0], [92.0, 616.0], [92.1, 618.0], [92.2, 618.0], [92.3, 618.0], [92.4, 618.0], [92.5, 618.0], [92.6, 618.0], [92.7, 619.0], [92.8, 619.0], [92.9, 619.0], [93.0, 619.0], [93.1, 619.0], [93.2, 619.0], [93.3, 619.0], [93.4, 625.0], [93.5, 625.0], [93.6, 625.0], [93.7, 625.0], [93.8, 625.0], [93.9, 625.0], [94.0, 625.0], [94.1, 633.0], [94.2, 633.0], [94.3, 633.0], [94.4, 633.0], [94.5, 633.0], [94.6, 633.0], [94.7, 653.0], [94.8, 653.0], [94.9, 653.0], [95.0, 653.0], [95.1, 653.0], [95.2, 653.0], [95.3, 653.0], [95.4, 689.0], [95.5, 689.0], [95.6, 689.0], [95.7, 689.0], [95.8, 689.0], [95.9, 689.0], [96.0, 689.0], [96.1, 754.0], [96.2, 754.0], [96.3, 754.0], [96.4, 754.0], [96.5, 754.0], [96.6, 754.0], [96.7, 1015.0], [96.8, 1015.0], [96.9, 1015.0], [97.0, 1015.0], [97.1, 1015.0], [97.2, 1015.0], [97.3, 1015.0], [97.4, 1410.0], [97.5, 1410.0], [97.6, 1410.0], [97.7, 1410.0], [97.8, 1410.0], [97.9, 1410.0], [98.0, 1410.0], [98.1, 1415.0], [98.2, 1415.0], [98.3, 1415.0], [98.4, 1415.0], [98.5, 1415.0], [98.6, 1415.0], [98.7, 1423.0], [98.8, 1423.0], [98.9, 1423.0], [99.0, 1423.0], [99.1, 1423.0], [99.2, 1423.0], [99.3, 1423.0], [99.4, 1479.0], [99.5, 1479.0], [99.6, 1479.0], [99.7, 1479.0], [99.8, 1479.0], [99.9, 1479.0], [100.0, 1479.0]], "isOverall": false, "label": "Delete Request", "isController": false}, {"data": [[0.0, 14.0], [0.1, 14.0], [0.2, 14.0], [0.3, 14.0], [0.4, 14.0], [0.5, 14.0], [0.6, 14.0], [0.7, 15.0], [0.8, 15.0], [0.9, 15.0], [1.0, 15.0], [1.1, 15.0], [1.2, 15.0], [1.3, 15.0], [1.4, 15.0], [1.5, 15.0], [1.6, 15.0], [1.7, 15.0], [1.8, 15.0], [1.9, 15.0], [2.0, 15.0], [2.1, 15.0], [2.2, 15.0], [2.3, 15.0], [2.4, 15.0], [2.5, 15.0], [2.6, 15.0], [2.7, 15.0], [2.8, 15.0], [2.9, 15.0], [3.0, 15.0], [3.1, 15.0], [3.2, 15.0], [3.3, 15.0], [3.4, 16.0], [3.5, 16.0], [3.6, 16.0], [3.7, 16.0], [3.8, 16.0], [3.9, 16.0], [4.0, 16.0], [4.1, 16.0], [4.2, 16.0], [4.3, 16.0], [4.4, 16.0], [4.5, 16.0], [4.6, 16.0], [4.7, 16.0], [4.8, 16.0], [4.9, 16.0], [5.0, 16.0], [5.1, 16.0], [5.2, 16.0], [5.3, 16.0], [5.4, 16.0], [5.5, 16.0], [5.6, 16.0], [5.7, 16.0], [5.8, 16.0], [5.9, 16.0], [6.0, 17.0], [6.1, 17.0], [6.2, 17.0], [6.3, 17.0], [6.4, 17.0], [6.5, 17.0], [6.6, 17.0], [6.7, 17.0], [6.8, 17.0], [6.9, 17.0], [7.0, 17.0], [7.1, 17.0], [7.2, 17.0], [7.3, 17.0], [7.4, 17.0], [7.5, 17.0], [7.6, 17.0], [7.7, 17.0], [7.8, 17.0], [7.9, 17.0], [8.0, 17.0], [8.1, 17.0], [8.2, 17.0], [8.3, 17.0], [8.4, 17.0], [8.5, 17.0], [8.6, 17.0], [8.7, 17.0], [8.8, 17.0], [8.9, 17.0], [9.0, 17.0], [9.1, 17.0], [9.2, 17.0], [9.3, 17.0], [9.4, 17.0], [9.5, 17.0], [9.6, 17.0], [9.7, 17.0], [9.8, 17.0], [9.9, 17.0], [10.0, 17.0], [10.1, 17.0], [10.2, 17.0], [10.3, 17.0], [10.4, 17.0], [10.5, 17.0], [10.6, 17.0], [10.7, 17.0], [10.8, 17.0], [10.9, 17.0], [11.0, 17.0], [11.1, 17.0], [11.2, 17.0], [11.3, 17.0], [11.4, 17.0], [11.5, 17.0], [11.6, 17.0], [11.7, 17.0], [11.8, 17.0], [11.9, 17.0], [12.0, 18.0], [12.1, 18.0], [12.2, 18.0], [12.3, 18.0], [12.4, 18.0], [12.5, 18.0], [12.6, 18.0], [12.7, 18.0], [12.8, 18.0], [12.9, 18.0], [13.0, 18.0], [13.1, 18.0], [13.2, 18.0], [13.3, 18.0], [13.4, 18.0], [13.5, 18.0], [13.6, 18.0], [13.7, 18.0], [13.8, 18.0], [13.9, 18.0], [14.0, 18.0], [14.1, 18.0], [14.2, 18.0], [14.3, 18.0], [14.4, 18.0], [14.5, 18.0], [14.6, 18.0], [14.7, 18.0], [14.8, 18.0], [14.9, 18.0], [15.0, 18.0], [15.1, 18.0], [15.2, 18.0], [15.3, 18.0], [15.4, 18.0], [15.5, 18.0], [15.6, 18.0], [15.7, 18.0], [15.8, 18.0], [15.9, 18.0], [16.0, 18.0], [16.1, 18.0], [16.2, 18.0], [16.3, 18.0], [16.4, 18.0], [16.5, 18.0], [16.6, 18.0], [16.7, 18.0], [16.8, 18.0], [16.9, 18.0], [17.0, 18.0], [17.1, 18.0], [17.2, 18.0], [17.3, 18.0], [17.4, 18.0], [17.5, 18.0], [17.6, 18.0], [17.7, 18.0], [17.8, 18.0], [17.9, 18.0], [18.0, 18.0], [18.1, 18.0], [18.2, 18.0], [18.3, 18.0], [18.4, 18.0], [18.5, 18.0], [18.6, 18.0], [18.7, 18.0], [18.8, 18.0], [18.9, 18.0], [19.0, 18.0], [19.1, 18.0], [19.2, 18.0], [19.3, 18.0], [19.4, 19.0], [19.5, 19.0], [19.6, 19.0], [19.7, 19.0], [19.8, 19.0], [19.9, 19.0], [20.0, 19.0], [20.1, 19.0], [20.2, 19.0], [20.3, 19.0], [20.4, 19.0], [20.5, 19.0], [20.6, 19.0], [20.7, 19.0], [20.8, 19.0], [20.9, 19.0], [21.0, 19.0], [21.1, 19.0], [21.2, 19.0], [21.3, 19.0], [21.4, 19.0], [21.5, 19.0], [21.6, 19.0], [21.7, 19.0], [21.8, 19.0], [21.9, 19.0], [22.0, 19.0], [22.1, 19.0], [22.2, 19.0], [22.3, 19.0], [22.4, 19.0], [22.5, 19.0], [22.6, 19.0], [22.7, 19.0], [22.8, 19.0], [22.9, 19.0], [23.0, 19.0], [23.1, 19.0], [23.2, 19.0], [23.3, 19.0], [23.4, 19.0], [23.5, 19.0], [23.6, 19.0], [23.7, 19.0], [23.8, 19.0], [23.9, 19.0], [24.0, 19.0], [24.1, 19.0], [24.2, 19.0], [24.3, 19.0], [24.4, 19.0], [24.5, 19.0], [24.6, 19.0], [24.7, 19.0], [24.8, 19.0], [24.9, 19.0], [25.0, 19.0], [25.1, 19.0], [25.2, 19.0], [25.3, 19.0], [25.4, 19.0], [25.5, 19.0], [25.6, 19.0], [25.7, 19.0], [25.8, 19.0], [25.9, 19.0], [26.0, 20.0], [26.1, 20.0], [26.2, 20.0], [26.3, 20.0], [26.4, 20.0], [26.5, 20.0], [26.6, 20.0], [26.7, 20.0], [26.8, 20.0], [26.9, 20.0], [27.0, 20.0], [27.1, 20.0], [27.2, 20.0], [27.3, 20.0], [27.4, 20.0], [27.5, 20.0], [27.6, 20.0], [27.7, 20.0], [27.8, 20.0], [27.9, 20.0], [28.0, 20.0], [28.1, 20.0], [28.2, 20.0], [28.3, 20.0], [28.4, 20.0], [28.5, 20.0], [28.6, 20.0], [28.7, 20.0], [28.8, 20.0], [28.9, 20.0], [29.0, 20.0], [29.1, 20.0], [29.2, 20.0], [29.3, 20.0], [29.4, 20.0], [29.5, 20.0], [29.6, 20.0], [29.7, 20.0], [29.8, 20.0], [29.9, 20.0], [30.0, 20.0], [30.1, 20.0], [30.2, 20.0], [30.3, 20.0], [30.4, 20.0], [30.5, 20.0], [30.6, 20.0], [30.7, 20.0], [30.8, 20.0], [30.9, 20.0], [31.0, 20.0], [31.1, 20.0], [31.2, 20.0], [31.3, 20.0], [31.4, 20.0], [31.5, 20.0], [31.6, 20.0], [31.7, 20.0], [31.8, 20.0], [31.9, 20.0], [32.0, 21.0], [32.1, 21.0], [32.2, 21.0], [32.3, 21.0], [32.4, 21.0], [32.5, 21.0], [32.6, 21.0], [32.7, 21.0], [32.8, 21.0], [32.9, 21.0], [33.0, 21.0], [33.1, 21.0], [33.2, 21.0], [33.3, 21.0], [33.4, 21.0], [33.5, 21.0], [33.6, 21.0], [33.7, 21.0], [33.8, 21.0], [33.9, 21.0], [34.0, 21.0], [34.1, 21.0], [34.2, 21.0], [34.3, 21.0], [34.4, 21.0], [34.5, 21.0], [34.6, 21.0], [34.7, 21.0], [34.8, 21.0], [34.9, 21.0], [35.0, 21.0], [35.1, 21.0], [35.2, 21.0], [35.3, 21.0], [35.4, 21.0], [35.5, 21.0], [35.6, 21.0], [35.7, 21.0], [35.8, 21.0], [35.9, 21.0], [36.0, 21.0], [36.1, 21.0], [36.2, 21.0], [36.3, 21.0], [36.4, 21.0], [36.5, 21.0], [36.6, 21.0], [36.7, 21.0], [36.8, 21.0], [36.9, 21.0], [37.0, 21.0], [37.1, 21.0], [37.2, 21.0], [37.3, 21.0], [37.4, 22.0], [37.5, 22.0], [37.6, 22.0], [37.7, 22.0], [37.8, 22.0], [37.9, 22.0], [38.0, 22.0], [38.1, 22.0], [38.2, 22.0], [38.3, 22.0], [38.4, 22.0], [38.5, 22.0], [38.6, 22.0], [38.7, 22.0], [38.8, 22.0], [38.9, 22.0], [39.0, 22.0], [39.1, 22.0], [39.2, 22.0], [39.3, 22.0], [39.4, 22.0], [39.5, 22.0], [39.6, 22.0], [39.7, 22.0], [39.8, 22.0], [39.9, 22.0], [40.0, 23.0], [40.1, 23.0], [40.2, 23.0], [40.3, 23.0], [40.4, 23.0], [40.5, 23.0], [40.6, 23.0], [40.7, 23.0], [40.8, 23.0], [40.9, 23.0], [41.0, 23.0], [41.1, 23.0], [41.2, 23.0], [41.3, 23.0], [41.4, 23.0], [41.5, 23.0], [41.6, 23.0], [41.7, 23.0], [41.8, 23.0], [41.9, 23.0], [42.0, 23.0], [42.1, 23.0], [42.2, 23.0], [42.3, 23.0], [42.4, 23.0], [42.5, 23.0], [42.6, 23.0], [42.7, 23.0], [42.8, 23.0], [42.9, 23.0], [43.0, 23.0], [43.1, 23.0], [43.2, 23.0], [43.3, 23.0], [43.4, 23.0], [43.5, 23.0], [43.6, 23.0], [43.7, 23.0], [43.8, 23.0], [43.9, 23.0], [44.0, 23.0], [44.1, 23.0], [44.2, 23.0], [44.3, 23.0], [44.4, 23.0], [44.5, 23.0], [44.6, 23.0], [44.7, 23.0], [44.8, 23.0], [44.9, 23.0], [45.0, 23.0], [45.1, 23.0], [45.2, 23.0], [45.3, 23.0], [45.4, 23.0], [45.5, 23.0], [45.6, 23.0], [45.7, 23.0], [45.8, 23.0], [45.9, 23.0], [46.0, 23.0], [46.1, 23.0], [46.2, 23.0], [46.3, 23.0], [46.4, 23.0], [46.5, 23.0], [46.6, 23.0], [46.7, 24.0], [46.8, 24.0], [46.9, 24.0], [47.0, 24.0], [47.1, 24.0], [47.2, 24.0], [47.3, 24.0], [47.4, 24.0], [47.5, 24.0], [47.6, 24.0], [47.7, 24.0], [47.8, 24.0], [47.9, 24.0], [48.0, 24.0], [48.1, 24.0], [48.2, 24.0], [48.3, 24.0], [48.4, 24.0], [48.5, 24.0], [48.6, 24.0], [48.7, 24.0], [48.8, 24.0], [48.9, 24.0], [49.0, 24.0], [49.1, 24.0], [49.2, 24.0], [49.3, 24.0], [49.4, 25.0], [49.5, 25.0], [49.6, 25.0], [49.7, 25.0], [49.8, 25.0], [49.9, 25.0], [50.0, 25.0], [50.1, 25.0], [50.2, 25.0], [50.3, 25.0], [50.4, 25.0], [50.5, 25.0], [50.6, 25.0], [50.7, 25.0], [50.8, 25.0], [50.9, 25.0], [51.0, 25.0], [51.1, 25.0], [51.2, 25.0], [51.3, 25.0], [51.4, 25.0], [51.5, 25.0], [51.6, 25.0], [51.7, 25.0], [51.8, 25.0], [51.9, 25.0], [52.0, 25.0], [52.1, 25.0], [52.2, 25.0], [52.3, 25.0], [52.4, 25.0], [52.5, 25.0], [52.6, 25.0], [52.7, 25.0], [52.8, 25.0], [52.9, 25.0], [53.0, 25.0], [53.1, 25.0], [53.2, 25.0], [53.3, 25.0], [53.4, 26.0], [53.5, 26.0], [53.6, 26.0], [53.7, 26.0], [53.8, 26.0], [53.9, 26.0], [54.0, 27.0], [54.1, 27.0], [54.2, 27.0], [54.3, 27.0], [54.4, 27.0], [54.5, 27.0], [54.6, 27.0], [54.7, 28.0], [54.8, 28.0], [54.9, 28.0], [55.0, 28.0], [55.1, 28.0], [55.2, 28.0], [55.3, 28.0], [55.4, 29.0], [55.5, 29.0], [55.6, 29.0], [55.7, 29.0], [55.8, 29.0], [55.9, 29.0], [56.0, 29.0], [56.1, 29.0], [56.2, 29.0], [56.3, 29.0], [56.4, 29.0], [56.5, 29.0], [56.6, 29.0], [56.7, 30.0], [56.8, 30.0], [56.9, 30.0], [57.0, 30.0], [57.1, 30.0], [57.2, 30.0], [57.3, 30.0], [57.4, 30.0], [57.5, 30.0], [57.6, 30.0], [57.7, 30.0], [57.8, 30.0], [57.9, 30.0], [58.0, 30.0], [58.1, 30.0], [58.2, 30.0], [58.3, 30.0], [58.4, 30.0], [58.5, 30.0], [58.6, 30.0], [58.7, 31.0], [58.8, 31.0], [58.9, 31.0], [59.0, 31.0], [59.1, 31.0], [59.2, 31.0], [59.3, 31.0], [59.4, 31.0], [59.5, 31.0], [59.6, 31.0], [59.7, 31.0], [59.8, 31.0], [59.9, 31.0], [60.0, 31.0], [60.1, 31.0], [60.2, 31.0], [60.3, 31.0], [60.4, 31.0], [60.5, 31.0], [60.6, 31.0], [60.7, 32.0], [60.8, 32.0], [60.9, 32.0], [61.0, 32.0], [61.1, 32.0], [61.2, 32.0], [61.3, 32.0], [61.4, 32.0], [61.5, 32.0], [61.6, 32.0], [61.7, 32.0], [61.8, 32.0], [61.9, 32.0], [62.0, 32.0], [62.1, 32.0], [62.2, 32.0], [62.3, 32.0], [62.4, 32.0], [62.5, 32.0], [62.6, 32.0], [62.7, 32.0], [62.8, 32.0], [62.9, 32.0], [63.0, 32.0], [63.1, 32.0], [63.2, 32.0], [63.3, 32.0], [63.4, 34.0], [63.5, 34.0], [63.6, 34.0], [63.7, 34.0], [63.8, 34.0], [63.9, 34.0], [64.0, 34.0], [64.1, 34.0], [64.2, 34.0], [64.3, 34.0], [64.4, 34.0], [64.5, 34.0], [64.6, 34.0], [64.7, 34.0], [64.8, 34.0], [64.9, 34.0], [65.0, 34.0], [65.1, 34.0], [65.2, 34.0], [65.3, 34.0], [65.4, 35.0], [65.5, 35.0], [65.6, 35.0], [65.7, 35.0], [65.8, 35.0], [65.9, 35.0], [66.0, 36.0], [66.1, 36.0], [66.2, 36.0], [66.3, 36.0], [66.4, 36.0], [66.5, 36.0], [66.6, 36.0], [66.7, 36.0], [66.8, 36.0], [66.9, 36.0], [67.0, 36.0], [67.1, 36.0], [67.2, 36.0], [67.3, 36.0], [67.4, 36.0], [67.5, 36.0], [67.6, 36.0], [67.7, 36.0], [67.8, 36.0], [67.9, 36.0], [68.0, 37.0], [68.1, 37.0], [68.2, 37.0], [68.3, 37.0], [68.4, 37.0], [68.5, 37.0], [68.6, 37.0], [68.7, 38.0], [68.8, 38.0], [68.9, 38.0], [69.0, 38.0], [69.1, 38.0], [69.2, 38.0], [69.3, 38.0], [69.4, 38.0], [69.5, 38.0], [69.6, 38.0], [69.7, 38.0], [69.8, 38.0], [69.9, 38.0], [70.0, 38.0], [70.1, 38.0], [70.2, 38.0], [70.3, 38.0], [70.4, 38.0], [70.5, 38.0], [70.6, 38.0], [70.7, 43.0], [70.8, 43.0], [70.9, 43.0], [71.0, 43.0], [71.1, 43.0], [71.2, 43.0], [71.3, 43.0], [71.4, 46.0], [71.5, 46.0], [71.6, 46.0], [71.7, 46.0], [71.8, 46.0], [71.9, 46.0], [72.0, 50.0], [72.1, 50.0], [72.2, 50.0], [72.3, 50.0], [72.4, 50.0], [72.5, 50.0], [72.6, 50.0], [72.7, 61.0], [72.8, 61.0], [72.9, 61.0], [73.0, 61.0], [73.1, 61.0], [73.2, 61.0], [73.3, 61.0], [73.4, 62.0], [73.5, 62.0], [73.6, 62.0], [73.7, 62.0], [73.8, 62.0], [73.9, 62.0], [74.0, 62.0], [74.1, 63.0], [74.2, 63.0], [74.3, 63.0], [74.4, 63.0], [74.5, 63.0], [74.6, 63.0], [74.7, 64.0], [74.8, 64.0], [74.9, 64.0], [75.0, 64.0], [75.1, 64.0], [75.2, 64.0], [75.3, 64.0], [75.4, 70.0], [75.5, 70.0], [75.6, 70.0], [75.7, 70.0], [75.8, 70.0], [75.9, 70.0], [76.0, 70.0], [76.1, 70.0], [76.2, 70.0], [76.3, 70.0], [76.4, 70.0], [76.5, 70.0], [76.6, 70.0], [76.7, 71.0], [76.8, 71.0], [76.9, 71.0], [77.0, 71.0], [77.1, 71.0], [77.2, 71.0], [77.3, 71.0], [77.4, 71.0], [77.5, 71.0], [77.6, 71.0], [77.7, 71.0], [77.8, 71.0], [77.9, 71.0], [78.0, 71.0], [78.1, 76.0], [78.2, 76.0], [78.3, 76.0], [78.4, 76.0], [78.5, 76.0], [78.6, 76.0], [78.7, 79.0], [78.8, 79.0], [78.9, 79.0], [79.0, 79.0], [79.1, 79.0], [79.2, 79.0], [79.3, 79.0], [79.4, 83.0], [79.5, 83.0], [79.6, 83.0], [79.7, 83.0], [79.8, 83.0], [79.9, 83.0], [80.0, 83.0], [80.1, 101.0], [80.2, 101.0], [80.3, 101.0], [80.4, 101.0], [80.5, 101.0], [80.6, 101.0], [80.7, 106.0], [80.8, 106.0], [80.9, 106.0], [81.0, 106.0], [81.1, 106.0], [81.2, 106.0], [81.3, 106.0], [81.4, 109.0], [81.5, 109.0], [81.6, 109.0], [81.7, 109.0], [81.8, 109.0], [81.9, 109.0], [82.0, 109.0], [82.1, 121.0], [82.2, 121.0], [82.3, 121.0], [82.4, 121.0], [82.5, 121.0], [82.6, 121.0], [82.7, 226.0], [82.8, 226.0], [82.9, 226.0], [83.0, 226.0], [83.1, 226.0], [83.2, 226.0], [83.3, 226.0], [83.4, 230.0], [83.5, 230.0], [83.6, 230.0], [83.7, 230.0], [83.8, 230.0], [83.9, 230.0], [84.0, 230.0], [84.1, 233.0], [84.2, 233.0], [84.3, 233.0], [84.4, 233.0], [84.5, 233.0], [84.6, 233.0], [84.7, 234.0], [84.8, 234.0], [84.9, 234.0], [85.0, 234.0], [85.1, 234.0], [85.2, 234.0], [85.3, 234.0], [85.4, 235.0], [85.5, 235.0], [85.6, 235.0], [85.7, 235.0], [85.8, 235.0], [85.9, 235.0], [86.0, 235.0], [86.1, 242.0], [86.2, 242.0], [86.3, 242.0], [86.4, 242.0], [86.5, 242.0], [86.6, 242.0], [86.7, 258.0], [86.8, 258.0], [86.9, 258.0], [87.0, 258.0], [87.1, 258.0], [87.2, 258.0], [87.3, 258.0], [87.4, 263.0], [87.5, 263.0], [87.6, 263.0], [87.7, 263.0], [87.8, 263.0], [87.9, 263.0], [88.0, 263.0], [88.1, 264.0], [88.2, 264.0], [88.3, 264.0], [88.4, 264.0], [88.5, 264.0], [88.6, 264.0], [88.7, 270.0], [88.8, 270.0], [88.9, 270.0], [89.0, 270.0], [89.1, 270.0], [89.2, 270.0], [89.3, 270.0], [89.4, 282.0], [89.5, 282.0], [89.6, 282.0], [89.7, 282.0], [89.8, 282.0], [89.9, 282.0], [90.0, 282.0], [90.1, 297.0], [90.2, 297.0], [90.3, 297.0], [90.4, 297.0], [90.5, 297.0], [90.6, 297.0], [90.7, 316.0], [90.8, 316.0], [90.9, 316.0], [91.0, 316.0], [91.1, 316.0], [91.2, 316.0], [91.3, 316.0], [91.4, 410.0], [91.5, 410.0], [91.6, 410.0], [91.7, 410.0], [91.8, 410.0], [91.9, 410.0], [92.0, 410.0], [92.1, 473.0], [92.2, 473.0], [92.3, 473.0], [92.4, 473.0], [92.5, 473.0], [92.6, 473.0], [92.7, 488.0], [92.8, 488.0], [92.9, 488.0], [93.0, 488.0], [93.1, 488.0], [93.2, 488.0], [93.3, 488.0], [93.4, 522.0], [93.5, 522.0], [93.6, 522.0], [93.7, 522.0], [93.8, 522.0], [93.9, 522.0], [94.0, 522.0], [94.1, 561.0], [94.2, 561.0], [94.3, 561.0], [94.4, 561.0], [94.5, 561.0], [94.6, 561.0], [94.7, 566.0], [94.8, 566.0], [94.9, 566.0], [95.0, 566.0], [95.1, 566.0], [95.2, 566.0], [95.3, 566.0], [95.4, 618.0], [95.5, 618.0], [95.6, 618.0], [95.7, 618.0], [95.8, 618.0], [95.9, 618.0], [96.0, 618.0], [96.1, 703.0], [96.2, 703.0], [96.3, 703.0], [96.4, 703.0], [96.5, 703.0], [96.6, 703.0], [96.7, 950.0], [96.8, 950.0], [96.9, 950.0], [97.0, 950.0], [97.1, 950.0], [97.2, 950.0], [97.3, 950.0], [97.4, 1219.0], [97.5, 1219.0], [97.6, 1219.0], [97.7, 1219.0], [97.8, 1219.0], [97.9, 1219.0], [98.0, 1219.0], [98.1, 1904.0], [98.2, 1904.0], [98.3, 1904.0], [98.4, 1904.0], [98.5, 1904.0], [98.6, 1904.0], [98.7, 1985.0], [98.8, 1985.0], [98.9, 1985.0], [99.0, 1985.0], [99.1, 1985.0], [99.2, 1985.0], [99.3, 1985.0], [99.4, 2220.0], [99.5, 2220.0], [99.6, 2220.0], [99.7, 2220.0], [99.8, 2220.0], [99.9, 2220.0], [100.0, 2220.0]], "isOverall": false, "label": "Get Request", "isController": false}, {"data": [[0.0, 4105.0], [0.1, 4105.0], [0.2, 4105.0], [0.3, 4105.0], [0.4, 4105.0], [0.5, 4105.0], [0.6, 4105.0], [0.7, 4256.0], [0.8, 4256.0], [0.9, 4256.0], [1.0, 4256.0], [1.1, 4256.0], [1.2, 4256.0], [1.3, 4256.0], [1.4, 4267.0], [1.5, 4267.0], [1.6, 4267.0], [1.7, 4267.0], [1.8, 4267.0], [1.9, 4267.0], [2.0, 4295.0], [2.1, 4295.0], [2.2, 4295.0], [2.3, 4295.0], [2.4, 4295.0], [2.5, 4295.0], [2.6, 4295.0], [2.7, 4637.0], [2.8, 4637.0], [2.9, 4637.0], [3.0, 4637.0], [3.1, 4637.0], [3.2, 4637.0], [3.3, 4637.0], [3.4, 4756.0], [3.5, 4756.0], [3.6, 4756.0], [3.7, 4756.0], [3.8, 4756.0], [3.9, 4756.0], [4.0, 4870.0], [4.1, 4870.0], [4.2, 4870.0], [4.3, 4870.0], [4.4, 4870.0], [4.5, 4870.0], [4.6, 4870.0], [4.7, 5040.0], [4.8, 5040.0], [4.9, 5040.0], [5.0, 5040.0], [5.1, 5040.0], [5.2, 5040.0], [5.3, 5040.0], [5.4, 5052.0], [5.5, 5052.0], [5.6, 5052.0], [5.7, 5052.0], [5.8, 5052.0], [5.9, 5052.0], [6.0, 5120.0], [6.1, 5120.0], [6.2, 5120.0], [6.3, 5120.0], [6.4, 5120.0], [6.5, 5120.0], [6.6, 5120.0], [6.7, 5283.0], [6.8, 5283.0], [6.9, 5283.0], [7.0, 5283.0], [7.1, 5283.0], [7.2, 5283.0], [7.3, 5283.0], [7.4, 5318.0], [7.5, 5318.0], [7.6, 5318.0], [7.7, 5318.0], [7.8, 5318.0], [7.9, 5318.0], [8.0, 5345.0], [8.1, 5345.0], [8.2, 5345.0], [8.3, 5345.0], [8.4, 5345.0], [8.5, 5345.0], [8.6, 5345.0], [8.7, 5491.0], [8.8, 5491.0], [8.9, 5491.0], [9.0, 5491.0], [9.1, 5491.0], [9.2, 5491.0], [9.3, 5491.0], [9.4, 5493.0], [9.5, 5493.0], [9.6, 5493.0], [9.7, 5493.0], [9.8, 5493.0], [9.9, 5493.0], [10.0, 5524.0], [10.1, 5524.0], [10.2, 5524.0], [10.3, 5524.0], [10.4, 5524.0], [10.5, 5524.0], [10.6, 5524.0], [10.7, 5547.0], [10.8, 5547.0], [10.9, 5547.0], [11.0, 5547.0], [11.1, 5547.0], [11.2, 5547.0], [11.3, 5547.0], [11.4, 5559.0], [11.5, 5559.0], [11.6, 5559.0], [11.7, 5559.0], [11.8, 5559.0], [11.9, 5559.0], [12.0, 6004.0], [12.1, 6004.0], [12.2, 6004.0], [12.3, 6004.0], [12.4, 6004.0], [12.5, 6004.0], [12.6, 6004.0], [12.7, 6068.0], [12.8, 6068.0], [12.9, 6068.0], [13.0, 6068.0], [13.1, 6068.0], [13.2, 6068.0], [13.3, 6068.0], [13.4, 6380.0], [13.5, 6380.0], [13.6, 6380.0], [13.7, 6380.0], [13.8, 6380.0], [13.9, 6380.0], [14.0, 6397.0], [14.1, 6397.0], [14.2, 6397.0], [14.3, 6397.0], [14.4, 6397.0], [14.5, 6397.0], [14.6, 6397.0], [14.7, 6457.0], [14.8, 6457.0], [14.9, 6457.0], [15.0, 6457.0], [15.1, 6457.0], [15.2, 6457.0], [15.3, 6457.0], [15.4, 6491.0], [15.5, 6491.0], [15.6, 6491.0], [15.7, 6491.0], [15.8, 6491.0], [15.9, 6491.0], [16.0, 6765.0], [16.1, 6765.0], [16.2, 6765.0], [16.3, 6765.0], [16.4, 6765.0], [16.5, 6765.0], [16.6, 6765.0], [16.7, 6775.0], [16.8, 6775.0], [16.9, 6775.0], [17.0, 6775.0], [17.1, 6775.0], [17.2, 6775.0], [17.3, 6775.0], [17.4, 6810.0], [17.5, 6810.0], [17.6, 6810.0], [17.7, 6810.0], [17.8, 6810.0], [17.9, 6810.0], [18.0, 7007.0], [18.1, 7007.0], [18.2, 7007.0], [18.3, 7007.0], [18.4, 7007.0], [18.5, 7007.0], [18.6, 7007.0], [18.7, 7161.0], [18.8, 7161.0], [18.9, 7161.0], [19.0, 7161.0], [19.1, 7161.0], [19.2, 7161.0], [19.3, 7161.0], [19.4, 7410.0], [19.5, 7410.0], [19.6, 7410.0], [19.7, 7410.0], [19.8, 7410.0], [19.9, 7410.0], [20.0, 7495.0], [20.1, 7495.0], [20.2, 7495.0], [20.3, 7495.0], [20.4, 7495.0], [20.5, 7495.0], [20.6, 7495.0], [20.7, 7839.0], [20.8, 7839.0], [20.9, 7839.0], [21.0, 7839.0], [21.1, 7839.0], [21.2, 7839.0], [21.3, 7839.0], [21.4, 7855.0], [21.5, 7855.0], [21.6, 7855.0], [21.7, 7855.0], [21.8, 7855.0], [21.9, 7855.0], [22.0, 7855.0], [22.1, 7899.0], [22.2, 7899.0], [22.3, 7899.0], [22.4, 7899.0], [22.5, 7899.0], [22.6, 7899.0], [22.7, 8244.0], [22.8, 8244.0], [22.9, 8244.0], [23.0, 8244.0], [23.1, 8244.0], [23.2, 8244.0], [23.3, 8244.0], [23.4, 8466.0], [23.5, 8466.0], [23.6, 8466.0], [23.7, 8466.0], [23.8, 8466.0], [23.9, 8466.0], [24.0, 8466.0], [24.1, 8506.0], [24.2, 8506.0], [24.3, 8506.0], [24.4, 8506.0], [24.5, 8506.0], [24.6, 8506.0], [24.7, 8617.0], [24.8, 8617.0], [24.9, 8617.0], [25.0, 8617.0], [25.1, 8617.0], [25.2, 8617.0], [25.3, 8617.0], [25.4, 8828.0], [25.5, 8828.0], [25.6, 8828.0], [25.7, 8828.0], [25.8, 8828.0], [25.9, 8828.0], [26.0, 8828.0], [26.1, 8863.0], [26.2, 8863.0], [26.3, 8863.0], [26.4, 8863.0], [26.5, 8863.0], [26.6, 8863.0], [26.7, 8975.0], [26.8, 8975.0], [26.9, 8975.0], [27.0, 8975.0], [27.1, 8975.0], [27.2, 8975.0], [27.3, 8975.0], [27.4, 8977.0], [27.5, 8977.0], [27.6, 8977.0], [27.7, 8977.0], [27.8, 8977.0], [27.9, 8977.0], [28.0, 8977.0], [28.1, 9060.0], [28.2, 9060.0], [28.3, 9060.0], [28.4, 9060.0], [28.5, 9060.0], [28.6, 9060.0], [28.7, 9099.0], [28.8, 9099.0], [28.9, 9099.0], [29.0, 9099.0], [29.1, 9099.0], [29.2, 9099.0], [29.3, 9099.0], [29.4, 9263.0], [29.5, 9263.0], [29.6, 9263.0], [29.7, 9263.0], [29.8, 9263.0], [29.9, 9263.0], [30.0, 9263.0], [30.1, 9345.0], [30.2, 9345.0], [30.3, 9345.0], [30.4, 9345.0], [30.5, 9345.0], [30.6, 9345.0], [30.7, 9353.0], [30.8, 9353.0], [30.9, 9353.0], [31.0, 9353.0], [31.1, 9353.0], [31.2, 9353.0], [31.3, 9353.0], [31.4, 9452.0], [31.5, 9452.0], [31.6, 9452.0], [31.7, 9452.0], [31.8, 9452.0], [31.9, 9452.0], [32.0, 9452.0], [32.1, 9470.0], [32.2, 9470.0], [32.3, 9470.0], [32.4, 9470.0], [32.5, 9470.0], [32.6, 9470.0], [32.7, 9508.0], [32.8, 9508.0], [32.9, 9508.0], [33.0, 9508.0], [33.1, 9508.0], [33.2, 9508.0], [33.3, 9508.0], [33.4, 9577.0], [33.5, 9577.0], [33.6, 9577.0], [33.7, 9577.0], [33.8, 9577.0], [33.9, 9577.0], [34.0, 9577.0], [34.1, 9623.0], [34.2, 9623.0], [34.3, 9623.0], [34.4, 9623.0], [34.5, 9623.0], [34.6, 9623.0], [34.7, 9700.0], [34.8, 9700.0], [34.9, 9700.0], [35.0, 9700.0], [35.1, 9700.0], [35.2, 9700.0], [35.3, 9700.0], [35.4, 9707.0], [35.5, 9707.0], [35.6, 9707.0], [35.7, 9707.0], [35.8, 9707.0], [35.9, 9707.0], [36.0, 9707.0], [36.1, 9731.0], [36.2, 9731.0], [36.3, 9731.0], [36.4, 9731.0], [36.5, 9731.0], [36.6, 9731.0], [36.7, 9770.0], [36.8, 9770.0], [36.9, 9770.0], [37.0, 9770.0], [37.1, 9770.0], [37.2, 9770.0], [37.3, 9770.0], [37.4, 10009.0], [37.5, 10009.0], [37.6, 10009.0], [37.7, 10009.0], [37.8, 10009.0], [37.9, 10009.0], [38.0, 10279.0], [38.1, 10279.0], [38.2, 10279.0], [38.3, 10279.0], [38.4, 10279.0], [38.5, 10279.0], [38.6, 10279.0], [38.7, 10304.0], [38.8, 10304.0], [38.9, 10304.0], [39.0, 10304.0], [39.1, 10304.0], [39.2, 10304.0], [39.3, 10304.0], [39.4, 10331.0], [39.5, 10331.0], [39.6, 10331.0], [39.7, 10331.0], [39.8, 10331.0], [39.9, 10331.0], [40.0, 10400.0], [40.1, 10400.0], [40.2, 10400.0], [40.3, 10400.0], [40.4, 10400.0], [40.5, 10400.0], [40.6, 10400.0], [40.7, 10506.0], [40.8, 10506.0], [40.9, 10506.0], [41.0, 10506.0], [41.1, 10506.0], [41.2, 10506.0], [41.3, 10506.0], [41.4, 10518.0], [41.5, 10518.0], [41.6, 10518.0], [41.7, 10518.0], [41.8, 10518.0], [41.9, 10518.0], [42.0, 10536.0], [42.1, 10536.0], [42.2, 10536.0], [42.3, 10536.0], [42.4, 10536.0], [42.5, 10536.0], [42.6, 10536.0], [42.7, 10708.0], [42.8, 10708.0], [42.9, 10708.0], [43.0, 10708.0], [43.1, 10708.0], [43.2, 10708.0], [43.3, 10708.0], [43.4, 10724.0], [43.5, 10724.0], [43.6, 10724.0], [43.7, 10724.0], [43.8, 10724.0], [43.9, 10724.0], [44.0, 10741.0], [44.1, 10741.0], [44.2, 10741.0], [44.3, 10741.0], [44.4, 10741.0], [44.5, 10741.0], [44.6, 10741.0], [44.7, 10804.0], [44.8, 10804.0], [44.9, 10804.0], [45.0, 10804.0], [45.1, 10804.0], [45.2, 10804.0], [45.3, 10804.0], [45.4, 10849.0], [45.5, 10849.0], [45.6, 10849.0], [45.7, 10849.0], [45.8, 10849.0], [45.9, 10849.0], [46.0, 10861.0], [46.1, 10861.0], [46.2, 10861.0], [46.3, 10861.0], [46.4, 10861.0], [46.5, 10861.0], [46.6, 10861.0], [46.7, 10938.0], [46.8, 10938.0], [46.9, 10938.0], [47.0, 10938.0], [47.1, 10938.0], [47.2, 10938.0], [47.3, 10938.0], [47.4, 10958.0], [47.5, 10958.0], [47.6, 10958.0], [47.7, 10958.0], [47.8, 10958.0], [47.9, 10958.0], [48.0, 11119.0], [48.1, 11119.0], [48.2, 11119.0], [48.3, 11119.0], [48.4, 11119.0], [48.5, 11119.0], [48.6, 11119.0], [48.7, 11164.0], [48.8, 11164.0], [48.9, 11164.0], [49.0, 11164.0], [49.1, 11164.0], [49.2, 11164.0], [49.3, 11164.0], [49.4, 11536.0], [49.5, 11536.0], [49.6, 11536.0], [49.7, 11536.0], [49.8, 11536.0], [49.9, 11536.0], [50.0, 11572.0], [50.1, 11572.0], [50.2, 11572.0], [50.3, 11572.0], [50.4, 11572.0], [50.5, 11572.0], [50.6, 11572.0], [50.7, 11593.0], [50.8, 11593.0], [50.9, 11593.0], [51.0, 11593.0], [51.1, 11593.0], [51.2, 11593.0], [51.3, 11593.0], [51.4, 11615.0], [51.5, 11615.0], [51.6, 11615.0], [51.7, 11615.0], [51.8, 11615.0], [51.9, 11615.0], [52.0, 11741.0], [52.1, 11741.0], [52.2, 11741.0], [52.3, 11741.0], [52.4, 11741.0], [52.5, 11741.0], [52.6, 11741.0], [52.7, 11788.0], [52.8, 11788.0], [52.9, 11788.0], [53.0, 11788.0], [53.1, 11788.0], [53.2, 11788.0], [53.3, 11788.0], [53.4, 11862.0], [53.5, 11862.0], [53.6, 11862.0], [53.7, 11862.0], [53.8, 11862.0], [53.9, 11862.0], [54.0, 11895.0], [54.1, 11895.0], [54.2, 11895.0], [54.3, 11895.0], [54.4, 11895.0], [54.5, 11895.0], [54.6, 11895.0], [54.7, 12042.0], [54.8, 12042.0], [54.9, 12042.0], [55.0, 12042.0], [55.1, 12042.0], [55.2, 12042.0], [55.3, 12042.0], [55.4, 12054.0], [55.5, 12054.0], [55.6, 12054.0], [55.7, 12054.0], [55.8, 12054.0], [55.9, 12054.0], [56.0, 12084.0], [56.1, 12084.0], [56.2, 12084.0], [56.3, 12084.0], [56.4, 12084.0], [56.5, 12084.0], [56.6, 12084.0], [56.7, 12190.0], [56.8, 12190.0], [56.9, 12190.0], [57.0, 12190.0], [57.1, 12190.0], [57.2, 12190.0], [57.3, 12190.0], [57.4, 12340.0], [57.5, 12340.0], [57.6, 12340.0], [57.7, 12340.0], [57.8, 12340.0], [57.9, 12340.0], [58.0, 12422.0], [58.1, 12422.0], [58.2, 12422.0], [58.3, 12422.0], [58.4, 12422.0], [58.5, 12422.0], [58.6, 12422.0], [58.7, 12456.0], [58.8, 12456.0], [58.9, 12456.0], [59.0, 12456.0], [59.1, 12456.0], [59.2, 12456.0], [59.3, 12456.0], [59.4, 12560.0], [59.5, 12560.0], [59.6, 12560.0], [59.7, 12560.0], [59.8, 12560.0], [59.9, 12560.0], [60.0, 12684.0], [60.1, 12684.0], [60.2, 12684.0], [60.3, 12684.0], [60.4, 12684.0], [60.5, 12684.0], [60.6, 12684.0], [60.7, 12890.0], [60.8, 12890.0], [60.9, 12890.0], [61.0, 12890.0], [61.1, 12890.0], [61.2, 12890.0], [61.3, 12890.0], [61.4, 12890.0], [61.5, 12890.0], [61.6, 12890.0], [61.7, 12890.0], [61.8, 12890.0], [61.9, 12890.0], [62.0, 12891.0], [62.1, 12891.0], [62.2, 12891.0], [62.3, 12891.0], [62.4, 12891.0], [62.5, 12891.0], [62.6, 12891.0], [62.7, 12914.0], [62.8, 12914.0], [62.9, 12914.0], [63.0, 12914.0], [63.1, 12914.0], [63.2, 12914.0], [63.3, 12914.0], [63.4, 12963.0], [63.5, 12963.0], [63.6, 12963.0], [63.7, 12963.0], [63.8, 12963.0], [63.9, 12963.0], [64.0, 13028.0], [64.1, 13028.0], [64.2, 13028.0], [64.3, 13028.0], [64.4, 13028.0], [64.5, 13028.0], [64.6, 13028.0], [64.7, 13076.0], [64.8, 13076.0], [64.9, 13076.0], [65.0, 13076.0], [65.1, 13076.0], [65.2, 13076.0], [65.3, 13076.0], [65.4, 13179.0], [65.5, 13179.0], [65.6, 13179.0], [65.7, 13179.0], [65.8, 13179.0], [65.9, 13179.0], [66.0, 13212.0], [66.1, 13212.0], [66.2, 13212.0], [66.3, 13212.0], [66.4, 13212.0], [66.5, 13212.0], [66.6, 13212.0], [66.7, 13269.0], [66.8, 13269.0], [66.9, 13269.0], [67.0, 13269.0], [67.1, 13269.0], [67.2, 13269.0], [67.3, 13269.0], [67.4, 13385.0], [67.5, 13385.0], [67.6, 13385.0], [67.7, 13385.0], [67.8, 13385.0], [67.9, 13385.0], [68.0, 13386.0], [68.1, 13386.0], [68.2, 13386.0], [68.3, 13386.0], [68.4, 13386.0], [68.5, 13386.0], [68.6, 13386.0], [68.7, 13414.0], [68.8, 13414.0], [68.9, 13414.0], [69.0, 13414.0], [69.1, 13414.0], [69.2, 13414.0], [69.3, 13414.0], [69.4, 13432.0], [69.5, 13432.0], [69.6, 13432.0], [69.7, 13432.0], [69.8, 13432.0], [69.9, 13432.0], [70.0, 13445.0], [70.1, 13445.0], [70.2, 13445.0], [70.3, 13445.0], [70.4, 13445.0], [70.5, 13445.0], [70.6, 13445.0], [70.7, 13530.0], [70.8, 13530.0], [70.9, 13530.0], [71.0, 13530.0], [71.1, 13530.0], [71.2, 13530.0], [71.3, 13530.0], [71.4, 13555.0], [71.5, 13555.0], [71.6, 13555.0], [71.7, 13555.0], [71.8, 13555.0], [71.9, 13555.0], [72.0, 13586.0], [72.1, 13586.0], [72.2, 13586.0], [72.3, 13586.0], [72.4, 13586.0], [72.5, 13586.0], [72.6, 13586.0], [72.7, 13623.0], [72.8, 13623.0], [72.9, 13623.0], [73.0, 13623.0], [73.1, 13623.0], [73.2, 13623.0], [73.3, 13623.0], [73.4, 13628.0], [73.5, 13628.0], [73.6, 13628.0], [73.7, 13628.0], [73.8, 13628.0], [73.9, 13628.0], [74.0, 13957.0], [74.1, 13957.0], [74.2, 13957.0], [74.3, 13957.0], [74.4, 13957.0], [74.5, 13957.0], [74.6, 13957.0], [74.7, 14002.0], [74.8, 14002.0], [74.9, 14002.0], [75.0, 14002.0], [75.1, 14002.0], [75.2, 14002.0], [75.3, 14002.0], [75.4, 14041.0], [75.5, 14041.0], [75.6, 14041.0], [75.7, 14041.0], [75.8, 14041.0], [75.9, 14041.0], [76.0, 14089.0], [76.1, 14089.0], [76.2, 14089.0], [76.3, 14089.0], [76.4, 14089.0], [76.5, 14089.0], [76.6, 14089.0], [76.7, 14186.0], [76.8, 14186.0], [76.9, 14186.0], [77.0, 14186.0], [77.1, 14186.0], [77.2, 14186.0], [77.3, 14186.0], [77.4, 14345.0], [77.5, 14345.0], [77.6, 14345.0], [77.7, 14345.0], [77.8, 14345.0], [77.9, 14345.0], [78.0, 14345.0], [78.1, 14419.0], [78.2, 14419.0], [78.3, 14419.0], [78.4, 14419.0], [78.5, 14419.0], [78.6, 14419.0], [78.7, 14528.0], [78.8, 14528.0], [78.9, 14528.0], [79.0, 14528.0], [79.1, 14528.0], [79.2, 14528.0], [79.3, 14528.0], [79.4, 14564.0], [79.5, 14564.0], [79.6, 14564.0], [79.7, 14564.0], [79.8, 14564.0], [79.9, 14564.0], [80.0, 14564.0], [80.1, 14622.0], [80.2, 14622.0], [80.3, 14622.0], [80.4, 14622.0], [80.5, 14622.0], [80.6, 14622.0], [80.7, 14738.0], [80.8, 14738.0], [80.9, 14738.0], [81.0, 14738.0], [81.1, 14738.0], [81.2, 14738.0], [81.3, 14738.0], [81.4, 14739.0], [81.5, 14739.0], [81.6, 14739.0], [81.7, 14739.0], [81.8, 14739.0], [81.9, 14739.0], [82.0, 14739.0], [82.1, 14749.0], [82.2, 14749.0], [82.3, 14749.0], [82.4, 14749.0], [82.5, 14749.0], [82.6, 14749.0], [82.7, 14781.0], [82.8, 14781.0], [82.9, 14781.0], [83.0, 14781.0], [83.1, 14781.0], [83.2, 14781.0], [83.3, 14781.0], [83.4, 14789.0], [83.5, 14789.0], [83.6, 14789.0], [83.7, 14789.0], [83.8, 14789.0], [83.9, 14789.0], [84.0, 14789.0], [84.1, 14791.0], [84.2, 14791.0], [84.3, 14791.0], [84.4, 14791.0], [84.5, 14791.0], [84.6, 14791.0], [84.7, 14791.0], [84.8, 14791.0], [84.9, 14791.0], [85.0, 14791.0], [85.1, 14791.0], [85.2, 14791.0], [85.3, 14791.0], [85.4, 14792.0], [85.5, 14792.0], [85.6, 14792.0], [85.7, 14792.0], [85.8, 14792.0], [85.9, 14792.0], [86.0, 14792.0], [86.1, 14795.0], [86.2, 14795.0], [86.3, 14795.0], [86.4, 14795.0], [86.5, 14795.0], [86.6, 14795.0], [86.7, 14796.0], [86.8, 14796.0], [86.9, 14796.0], [87.0, 14796.0], [87.1, 14796.0], [87.2, 14796.0], [87.3, 14796.0], [87.4, 14818.0], [87.5, 14818.0], [87.6, 14818.0], [87.7, 14818.0], [87.8, 14818.0], [87.9, 14818.0], [88.0, 14818.0], [88.1, 14823.0], [88.2, 14823.0], [88.3, 14823.0], [88.4, 14823.0], [88.5, 14823.0], [88.6, 14823.0], [88.7, 14871.0], [88.8, 14871.0], [88.9, 14871.0], [89.0, 14871.0], [89.1, 14871.0], [89.2, 14871.0], [89.3, 14871.0], [89.4, 14885.0], [89.5, 14885.0], [89.6, 14885.0], [89.7, 14885.0], [89.8, 14885.0], [89.9, 14885.0], [90.0, 14885.0], [90.1, 15019.0], [90.2, 15019.0], [90.3, 15019.0], [90.4, 15019.0], [90.5, 15019.0], [90.6, 15019.0], [90.7, 15071.0], [90.8, 15071.0], [90.9, 15071.0], [91.0, 15071.0], [91.1, 15071.0], [91.2, 15071.0], [91.3, 15071.0], [91.4, 15099.0], [91.5, 15099.0], [91.6, 15099.0], [91.7, 15099.0], [91.8, 15099.0], [91.9, 15099.0], [92.0, 15099.0], [92.1, 15119.0], [92.2, 15119.0], [92.3, 15119.0], [92.4, 15119.0], [92.5, 15119.0], [92.6, 15119.0], [92.7, 15158.0], [92.8, 15158.0], [92.9, 15158.0], [93.0, 15158.0], [93.1, 15158.0], [93.2, 15158.0], [93.3, 15158.0], [93.4, 15190.0], [93.5, 15190.0], [93.6, 15190.0], [93.7, 15190.0], [93.8, 15190.0], [93.9, 15190.0], [94.0, 15190.0], [94.1, 15321.0], [94.2, 15321.0], [94.3, 15321.0], [94.4, 15321.0], [94.5, 15321.0], [94.6, 15321.0], [94.7, 15359.0], [94.8, 15359.0], [94.9, 15359.0], [95.0, 15359.0], [95.1, 15359.0], [95.2, 15359.0], [95.3, 15359.0], [95.4, 15374.0], [95.5, 15374.0], [95.6, 15374.0], [95.7, 15374.0], [95.8, 15374.0], [95.9, 15374.0], [96.0, 15374.0], [96.1, 15482.0], [96.2, 15482.0], [96.3, 15482.0], [96.4, 15482.0], [96.5, 15482.0], [96.6, 15482.0], [96.7, 15829.0], [96.8, 15829.0], [96.9, 15829.0], [97.0, 15829.0], [97.1, 15829.0], [97.2, 15829.0], [97.3, 15829.0], [97.4, 15900.0], [97.5, 15900.0], [97.6, 15900.0], [97.7, 15900.0], [97.8, 15900.0], [97.9, 15900.0], [98.0, 15900.0], [98.1, 15905.0], [98.2, 15905.0], [98.3, 15905.0], [98.4, 15905.0], [98.5, 15905.0], [98.6, 15905.0], [98.7, 16055.0], [98.8, 16055.0], [98.9, 16055.0], [99.0, 16055.0], [99.1, 16055.0], [99.2, 16055.0], [99.3, 16055.0], [99.4, 16112.0], [99.5, 16112.0], [99.6, 16112.0], [99.7, 16112.0], [99.8, 16112.0], [99.9, 16112.0], [100.0, 16112.0]], "isOverall": false, "label": "Post Request", "isController": false}, {"data": [[0.0, 384.0], [0.1, 384.0], [0.2, 384.0], [0.3, 384.0], [0.4, 384.0], [0.5, 384.0], [0.6, 384.0], [0.7, 386.0], [0.8, 386.0], [0.9, 386.0], [1.0, 386.0], [1.1, 386.0], [1.2, 386.0], [1.3, 386.0], [1.4, 388.0], [1.5, 388.0], [1.6, 388.0], [1.7, 388.0], [1.8, 388.0], [1.9, 388.0], [2.0, 388.0], [2.1, 388.0], [2.2, 388.0], [2.3, 388.0], [2.4, 388.0], [2.5, 388.0], [2.6, 388.0], [2.7, 389.0], [2.8, 389.0], [2.9, 389.0], [3.0, 389.0], [3.1, 389.0], [3.2, 389.0], [3.3, 389.0], [3.4, 389.0], [3.5, 389.0], [3.6, 389.0], [3.7, 389.0], [3.8, 389.0], [3.9, 389.0], [4.0, 390.0], [4.1, 390.0], [4.2, 390.0], [4.3, 390.0], [4.4, 390.0], [4.5, 390.0], [4.6, 390.0], [4.7, 390.0], [4.8, 390.0], [4.9, 390.0], [5.0, 390.0], [5.1, 390.0], [5.2, 390.0], [5.3, 390.0], [5.4, 390.0], [5.5, 390.0], [5.6, 390.0], [5.7, 390.0], [5.8, 390.0], [5.9, 390.0], [6.0, 391.0], [6.1, 391.0], [6.2, 391.0], [6.3, 391.0], [6.4, 391.0], [6.5, 391.0], [6.6, 391.0], [6.7, 391.0], [6.8, 391.0], [6.9, 391.0], [7.0, 391.0], [7.1, 391.0], [7.2, 391.0], [7.3, 391.0], [7.4, 391.0], [7.5, 391.0], [7.6, 391.0], [7.7, 391.0], [7.8, 391.0], [7.9, 391.0], [8.0, 392.0], [8.1, 392.0], [8.2, 392.0], [8.3, 392.0], [8.4, 392.0], [8.5, 392.0], [8.6, 392.0], [8.7, 394.0], [8.8, 394.0], [8.9, 394.0], [9.0, 394.0], [9.1, 394.0], [9.2, 394.0], [9.3, 394.0], [9.4, 394.0], [9.5, 394.0], [9.6, 394.0], [9.7, 394.0], [9.8, 394.0], [9.9, 394.0], [10.0, 394.0], [10.1, 394.0], [10.2, 394.0], [10.3, 394.0], [10.4, 394.0], [10.5, 394.0], [10.6, 394.0], [10.7, 394.0], [10.8, 394.0], [10.9, 394.0], [11.0, 394.0], [11.1, 394.0], [11.2, 394.0], [11.3, 394.0], [11.4, 395.0], [11.5, 395.0], [11.6, 395.0], [11.7, 395.0], [11.8, 395.0], [11.9, 395.0], [12.0, 395.0], [12.1, 395.0], [12.2, 395.0], [12.3, 395.0], [12.4, 395.0], [12.5, 395.0], [12.6, 395.0], [12.7, 395.0], [12.8, 395.0], [12.9, 395.0], [13.0, 395.0], [13.1, 395.0], [13.2, 395.0], [13.3, 395.0], [13.4, 395.0], [13.5, 395.0], [13.6, 395.0], [13.7, 395.0], [13.8, 395.0], [13.9, 395.0], [14.0, 396.0], [14.1, 396.0], [14.2, 396.0], [14.3, 396.0], [14.4, 396.0], [14.5, 396.0], [14.6, 396.0], [14.7, 396.0], [14.8, 396.0], [14.9, 396.0], [15.0, 396.0], [15.1, 396.0], [15.2, 396.0], [15.3, 396.0], [15.4, 396.0], [15.5, 396.0], [15.6, 396.0], [15.7, 396.0], [15.8, 396.0], [15.9, 396.0], [16.0, 396.0], [16.1, 396.0], [16.2, 396.0], [16.3, 396.0], [16.4, 396.0], [16.5, 396.0], [16.6, 396.0], [16.7, 397.0], [16.8, 397.0], [16.9, 397.0], [17.0, 397.0], [17.1, 397.0], [17.2, 397.0], [17.3, 397.0], [17.4, 397.0], [17.5, 397.0], [17.6, 397.0], [17.7, 397.0], [17.8, 397.0], [17.9, 397.0], [18.0, 397.0], [18.1, 397.0], [18.2, 397.0], [18.3, 397.0], [18.4, 397.0], [18.5, 397.0], [18.6, 397.0], [18.7, 397.0], [18.8, 397.0], [18.9, 397.0], [19.0, 397.0], [19.1, 397.0], [19.2, 397.0], [19.3, 397.0], [19.4, 397.0], [19.5, 397.0], [19.6, 397.0], [19.7, 397.0], [19.8, 397.0], [19.9, 397.0], [20.0, 397.0], [20.1, 397.0], [20.2, 397.0], [20.3, 397.0], [20.4, 397.0], [20.5, 397.0], [20.6, 397.0], [20.7, 397.0], [20.8, 397.0], [20.9, 397.0], [21.0, 397.0], [21.1, 397.0], [21.2, 397.0], [21.3, 397.0], [21.4, 397.0], [21.5, 397.0], [21.6, 397.0], [21.7, 397.0], [21.8, 397.0], [21.9, 397.0], [22.0, 398.0], [22.1, 398.0], [22.2, 398.0], [22.3, 398.0], [22.4, 398.0], [22.5, 398.0], [22.6, 398.0], [22.7, 398.0], [22.8, 398.0], [22.9, 398.0], [23.0, 398.0], [23.1, 398.0], [23.2, 398.0], [23.3, 398.0], [23.4, 398.0], [23.5, 398.0], [23.6, 398.0], [23.7, 398.0], [23.8, 398.0], [23.9, 398.0], [24.0, 398.0], [24.1, 398.0], [24.2, 398.0], [24.3, 398.0], [24.4, 398.0], [24.5, 398.0], [24.6, 398.0], [24.7, 399.0], [24.8, 399.0], [24.9, 399.0], [25.0, 399.0], [25.1, 399.0], [25.2, 399.0], [25.3, 399.0], [25.4, 401.0], [25.5, 401.0], [25.6, 401.0], [25.7, 401.0], [25.8, 401.0], [25.9, 401.0], [26.0, 401.0], [26.1, 401.0], [26.2, 401.0], [26.3, 401.0], [26.4, 401.0], [26.5, 401.0], [26.6, 401.0], [26.7, 401.0], [26.8, 401.0], [26.9, 401.0], [27.0, 401.0], [27.1, 401.0], [27.2, 401.0], [27.3, 401.0], [27.4, 401.0], [27.5, 401.0], [27.6, 401.0], [27.7, 401.0], [27.8, 401.0], [27.9, 401.0], [28.0, 401.0], [28.1, 401.0], [28.2, 401.0], [28.3, 401.0], [28.4, 401.0], [28.5, 401.0], [28.6, 401.0], [28.7, 401.0], [28.8, 401.0], [28.9, 401.0], [29.0, 401.0], [29.1, 401.0], [29.2, 401.0], [29.3, 401.0], [29.4, 401.0], [29.5, 401.0], [29.6, 401.0], [29.7, 401.0], [29.8, 401.0], [29.9, 401.0], [30.0, 401.0], [30.1, 401.0], [30.2, 401.0], [30.3, 401.0], [30.4, 401.0], [30.5, 401.0], [30.6, 401.0], [30.7, 402.0], [30.8, 402.0], [30.9, 402.0], [31.0, 402.0], [31.1, 402.0], [31.2, 402.0], [31.3, 402.0], [31.4, 402.0], [31.5, 402.0], [31.6, 402.0], [31.7, 402.0], [31.8, 402.0], [31.9, 402.0], [32.0, 403.0], [32.1, 403.0], [32.2, 403.0], [32.3, 403.0], [32.4, 403.0], [32.5, 403.0], [32.6, 403.0], [32.7, 403.0], [32.8, 403.0], [32.9, 403.0], [33.0, 403.0], [33.1, 403.0], [33.2, 403.0], [33.3, 403.0], [33.4, 403.0], [33.5, 403.0], [33.6, 403.0], [33.7, 403.0], [33.8, 403.0], [33.9, 403.0], [34.0, 404.0], [34.1, 404.0], [34.2, 404.0], [34.3, 404.0], [34.4, 404.0], [34.5, 404.0], [34.6, 404.0], [34.7, 404.0], [34.8, 404.0], [34.9, 404.0], [35.0, 404.0], [35.1, 404.0], [35.2, 404.0], [35.3, 404.0], [35.4, 404.0], [35.5, 404.0], [35.6, 404.0], [35.7, 404.0], [35.8, 404.0], [35.9, 404.0], [36.0, 404.0], [36.1, 404.0], [36.2, 404.0], [36.3, 404.0], [36.4, 404.0], [36.5, 404.0], [36.6, 404.0], [36.7, 404.0], [36.8, 404.0], [36.9, 404.0], [37.0, 404.0], [37.1, 404.0], [37.2, 404.0], [37.3, 404.0], [37.4, 405.0], [37.5, 405.0], [37.6, 405.0], [37.7, 405.0], [37.8, 405.0], [37.9, 405.0], [38.0, 405.0], [38.1, 405.0], [38.2, 405.0], [38.3, 405.0], [38.4, 405.0], [38.5, 405.0], [38.6, 405.0], [38.7, 406.0], [38.8, 406.0], [38.9, 406.0], [39.0, 406.0], [39.1, 406.0], [39.2, 406.0], [39.3, 406.0], [39.4, 406.0], [39.5, 406.0], [39.6, 406.0], [39.7, 406.0], [39.8, 406.0], [39.9, 406.0], [40.0, 406.0], [40.1, 406.0], [40.2, 406.0], [40.3, 406.0], [40.4, 406.0], [40.5, 406.0], [40.6, 406.0], [40.7, 407.0], [40.8, 407.0], [40.9, 407.0], [41.0, 407.0], [41.1, 407.0], [41.2, 407.0], [41.3, 407.0], [41.4, 407.0], [41.5, 407.0], [41.6, 407.0], [41.7, 407.0], [41.8, 407.0], [41.9, 407.0], [42.0, 407.0], [42.1, 407.0], [42.2, 407.0], [42.3, 407.0], [42.4, 407.0], [42.5, 407.0], [42.6, 407.0], [42.7, 408.0], [42.8, 408.0], [42.9, 408.0], [43.0, 408.0], [43.1, 408.0], [43.2, 408.0], [43.3, 408.0], [43.4, 409.0], [43.5, 409.0], [43.6, 409.0], [43.7, 409.0], [43.8, 409.0], [43.9, 409.0], [44.0, 409.0], [44.1, 409.0], [44.2, 409.0], [44.3, 409.0], [44.4, 409.0], [44.5, 409.0], [44.6, 409.0], [44.7, 410.0], [44.8, 410.0], [44.9, 410.0], [45.0, 410.0], [45.1, 410.0], [45.2, 410.0], [45.3, 410.0], [45.4, 410.0], [45.5, 410.0], [45.6, 410.0], [45.7, 410.0], [45.8, 410.0], [45.9, 410.0], [46.0, 410.0], [46.1, 412.0], [46.2, 412.0], [46.3, 412.0], [46.4, 412.0], [46.5, 412.0], [46.6, 412.0], [46.7, 414.0], [46.8, 414.0], [46.9, 414.0], [47.0, 414.0], [47.1, 414.0], [47.2, 414.0], [47.3, 414.0], [47.4, 416.0], [47.5, 416.0], [47.6, 416.0], [47.7, 416.0], [47.8, 416.0], [47.9, 416.0], [48.0, 416.0], [48.1, 416.0], [48.2, 416.0], [48.3, 416.0], [48.4, 416.0], [48.5, 416.0], [48.6, 416.0], [48.7, 417.0], [48.8, 417.0], [48.9, 417.0], [49.0, 417.0], [49.1, 417.0], [49.2, 417.0], [49.3, 417.0], [49.4, 419.0], [49.5, 419.0], [49.6, 419.0], [49.7, 419.0], [49.8, 419.0], [49.9, 419.0], [50.0, 420.0], [50.1, 420.0], [50.2, 420.0], [50.3, 420.0], [50.4, 420.0], [50.5, 420.0], [50.6, 420.0], [50.7, 424.0], [50.8, 424.0], [50.9, 424.0], [51.0, 424.0], [51.1, 424.0], [51.2, 424.0], [51.3, 424.0], [51.4, 435.0], [51.5, 435.0], [51.6, 435.0], [51.7, 435.0], [51.8, 435.0], [51.9, 435.0], [52.0, 444.0], [52.1, 444.0], [52.2, 444.0], [52.3, 444.0], [52.4, 444.0], [52.5, 444.0], [52.6, 444.0], [52.7, 444.0], [52.8, 444.0], [52.9, 444.0], [53.0, 444.0], [53.1, 444.0], [53.2, 444.0], [53.3, 444.0], [53.4, 447.0], [53.5, 447.0], [53.6, 447.0], [53.7, 447.0], [53.8, 447.0], [53.9, 447.0], [54.0, 449.0], [54.1, 449.0], [54.2, 449.0], [54.3, 449.0], [54.4, 449.0], [54.5, 449.0], [54.6, 449.0], [54.7, 451.0], [54.8, 451.0], [54.9, 451.0], [55.0, 451.0], [55.1, 451.0], [55.2, 451.0], [55.3, 451.0], [55.4, 456.0], [55.5, 456.0], [55.6, 456.0], [55.7, 456.0], [55.8, 456.0], [55.9, 456.0], [56.0, 457.0], [56.1, 457.0], [56.2, 457.0], [56.3, 457.0], [56.4, 457.0], [56.5, 457.0], [56.6, 457.0], [56.7, 457.0], [56.8, 457.0], [56.9, 457.0], [57.0, 457.0], [57.1, 457.0], [57.2, 457.0], [57.3, 457.0], [57.4, 458.0], [57.5, 458.0], [57.6, 458.0], [57.7, 458.0], [57.8, 458.0], [57.9, 458.0], [58.0, 463.0], [58.1, 463.0], [58.2, 463.0], [58.3, 463.0], [58.4, 463.0], [58.5, 463.0], [58.6, 463.0], [58.7, 467.0], [58.8, 467.0], [58.9, 467.0], [59.0, 467.0], [59.1, 467.0], [59.2, 467.0], [59.3, 467.0], [59.4, 470.0], [59.5, 470.0], [59.6, 470.0], [59.7, 470.0], [59.8, 470.0], [59.9, 470.0], [60.0, 472.0], [60.1, 472.0], [60.2, 472.0], [60.3, 472.0], [60.4, 472.0], [60.5, 472.0], [60.6, 472.0], [60.7, 472.0], [60.8, 472.0], [60.9, 472.0], [61.0, 472.0], [61.1, 472.0], [61.2, 472.0], [61.3, 472.0], [61.4, 473.0], [61.5, 473.0], [61.6, 473.0], [61.7, 473.0], [61.8, 473.0], [61.9, 473.0], [62.0, 475.0], [62.1, 475.0], [62.2, 475.0], [62.3, 475.0], [62.4, 475.0], [62.5, 475.0], [62.6, 475.0], [62.7, 476.0], [62.8, 476.0], [62.9, 476.0], [63.0, 476.0], [63.1, 476.0], [63.2, 476.0], [63.3, 476.0], [63.4, 476.0], [63.5, 476.0], [63.6, 476.0], [63.7, 476.0], [63.8, 476.0], [63.9, 476.0], [64.0, 476.0], [64.1, 476.0], [64.2, 476.0], [64.3, 476.0], [64.4, 476.0], [64.5, 476.0], [64.6, 476.0], [64.7, 476.0], [64.8, 476.0], [64.9, 476.0], [65.0, 476.0], [65.1, 476.0], [65.2, 476.0], [65.3, 476.0], [65.4, 476.0], [65.5, 476.0], [65.6, 476.0], [65.7, 476.0], [65.8, 476.0], [65.9, 476.0], [66.0, 479.0], [66.1, 479.0], [66.2, 479.0], [66.3, 479.0], [66.4, 479.0], [66.5, 479.0], [66.6, 479.0], [66.7, 480.0], [66.8, 480.0], [66.9, 480.0], [67.0, 480.0], [67.1, 480.0], [67.2, 480.0], [67.3, 480.0], [67.4, 480.0], [67.5, 480.0], [67.6, 480.0], [67.7, 480.0], [67.8, 480.0], [67.9, 480.0], [68.0, 481.0], [68.1, 481.0], [68.2, 481.0], [68.3, 481.0], [68.4, 481.0], [68.5, 481.0], [68.6, 481.0], [68.7, 481.0], [68.8, 481.0], [68.9, 481.0], [69.0, 481.0], [69.1, 481.0], [69.2, 481.0], [69.3, 481.0], [69.4, 481.0], [69.5, 481.0], [69.6, 481.0], [69.7, 481.0], [69.8, 481.0], [69.9, 481.0], [70.0, 482.0], [70.1, 482.0], [70.2, 482.0], [70.3, 482.0], [70.4, 482.0], [70.5, 482.0], [70.6, 482.0], [70.7, 483.0], [70.8, 483.0], [70.9, 483.0], [71.0, 483.0], [71.1, 483.0], [71.2, 483.0], [71.3, 483.0], [71.4, 483.0], [71.5, 483.0], [71.6, 483.0], [71.7, 483.0], [71.8, 483.0], [71.9, 483.0], [72.0, 486.0], [72.1, 486.0], [72.2, 486.0], [72.3, 486.0], [72.4, 486.0], [72.5, 486.0], [72.6, 486.0], [72.7, 486.0], [72.8, 486.0], [72.9, 486.0], [73.0, 486.0], [73.1, 486.0], [73.2, 486.0], [73.3, 486.0], [73.4, 488.0], [73.5, 488.0], [73.6, 488.0], [73.7, 488.0], [73.8, 488.0], [73.9, 488.0], [74.0, 490.0], [74.1, 490.0], [74.2, 490.0], [74.3, 490.0], [74.4, 490.0], [74.5, 490.0], [74.6, 490.0], [74.7, 491.0], [74.8, 491.0], [74.9, 491.0], [75.0, 491.0], [75.1, 491.0], [75.2, 491.0], [75.3, 491.0], [75.4, 492.0], [75.5, 492.0], [75.6, 492.0], [75.7, 492.0], [75.8, 492.0], [75.9, 492.0], [76.0, 492.0], [76.1, 492.0], [76.2, 492.0], [76.3, 492.0], [76.4, 492.0], [76.5, 492.0], [76.6, 492.0], [76.7, 493.0], [76.8, 493.0], [76.9, 493.0], [77.0, 493.0], [77.1, 493.0], [77.2, 493.0], [77.3, 493.0], [77.4, 493.0], [77.5, 493.0], [77.6, 493.0], [77.7, 493.0], [77.8, 493.0], [77.9, 493.0], [78.0, 494.0], [78.1, 494.0], [78.2, 494.0], [78.3, 494.0], [78.4, 494.0], [78.5, 494.0], [78.6, 494.0], [78.7, 494.0], [78.8, 494.0], [78.9, 494.0], [79.0, 494.0], [79.1, 494.0], [79.2, 494.0], [79.3, 494.0], [79.4, 498.0], [79.5, 498.0], [79.6, 498.0], [79.7, 498.0], [79.8, 498.0], [79.9, 498.0], [80.0, 505.0], [80.1, 505.0], [80.2, 505.0], [80.3, 505.0], [80.4, 505.0], [80.5, 505.0], [80.6, 505.0], [80.7, 506.0], [80.8, 506.0], [80.9, 506.0], [81.0, 506.0], [81.1, 506.0], [81.2, 506.0], [81.3, 506.0], [81.4, 513.0], [81.5, 513.0], [81.6, 513.0], [81.7, 513.0], [81.8, 513.0], [81.9, 513.0], [82.0, 516.0], [82.1, 516.0], [82.2, 516.0], [82.3, 516.0], [82.4, 516.0], [82.5, 516.0], [82.6, 516.0], [82.7, 531.0], [82.8, 531.0], [82.9, 531.0], [83.0, 531.0], [83.1, 531.0], [83.2, 531.0], [83.3, 531.0], [83.4, 538.0], [83.5, 538.0], [83.6, 538.0], [83.7, 538.0], [83.8, 538.0], [83.9, 538.0], [84.0, 560.0], [84.1, 560.0], [84.2, 560.0], [84.3, 560.0], [84.4, 560.0], [84.5, 560.0], [84.6, 560.0], [84.7, 583.0], [84.8, 583.0], [84.9, 583.0], [85.0, 583.0], [85.1, 583.0], [85.2, 583.0], [85.3, 583.0], [85.4, 591.0], [85.5, 591.0], [85.6, 591.0], [85.7, 591.0], [85.8, 591.0], [85.9, 591.0], [86.0, 591.0], [86.1, 594.0], [86.2, 594.0], [86.3, 594.0], [86.4, 594.0], [86.5, 594.0], [86.6, 594.0], [86.7, 615.0], [86.8, 615.0], [86.9, 615.0], [87.0, 615.0], [87.1, 615.0], [87.2, 615.0], [87.3, 615.0], [87.4, 623.0], [87.5, 623.0], [87.6, 623.0], [87.7, 623.0], [87.8, 623.0], [87.9, 623.0], [88.0, 623.0], [88.1, 675.0], [88.2, 675.0], [88.3, 675.0], [88.4, 675.0], [88.5, 675.0], [88.6, 675.0], [88.7, 687.0], [88.8, 687.0], [88.9, 687.0], [89.0, 687.0], [89.1, 687.0], [89.2, 687.0], [89.3, 687.0], [89.4, 688.0], [89.5, 688.0], [89.6, 688.0], [89.7, 688.0], [89.8, 688.0], [89.9, 688.0], [90.0, 688.0], [90.1, 691.0], [90.2, 691.0], [90.3, 691.0], [90.4, 691.0], [90.5, 691.0], [90.6, 691.0], [90.7, 695.0], [90.8, 695.0], [90.9, 695.0], [91.0, 695.0], [91.1, 695.0], [91.2, 695.0], [91.3, 695.0], [91.4, 704.0], [91.5, 704.0], [91.6, 704.0], [91.7, 704.0], [91.8, 704.0], [91.9, 704.0], [92.0, 704.0], [92.1, 711.0], [92.2, 711.0], [92.3, 711.0], [92.4, 711.0], [92.5, 711.0], [92.6, 711.0], [92.7, 727.0], [92.8, 727.0], [92.9, 727.0], [93.0, 727.0], [93.1, 727.0], [93.2, 727.0], [93.3, 727.0], [93.4, 771.0], [93.5, 771.0], [93.6, 771.0], [93.7, 771.0], [93.8, 771.0], [93.9, 771.0], [94.0, 771.0], [94.1, 779.0], [94.2, 779.0], [94.3, 779.0], [94.4, 779.0], [94.5, 779.0], [94.6, 779.0], [94.7, 808.0], [94.8, 808.0], [94.9, 808.0], [95.0, 808.0], [95.1, 808.0], [95.2, 808.0], [95.3, 808.0], [95.4, 878.0], [95.5, 878.0], [95.6, 878.0], [95.7, 878.0], [95.8, 878.0], [95.9, 878.0], [96.0, 878.0], [96.1, 1039.0], [96.2, 1039.0], [96.3, 1039.0], [96.4, 1039.0], [96.5, 1039.0], [96.6, 1039.0], [96.7, 1230.0], [96.8, 1230.0], [96.9, 1230.0], [97.0, 1230.0], [97.1, 1230.0], [97.2, 1230.0], [97.3, 1230.0], [97.4, 1355.0], [97.5, 1355.0], [97.6, 1355.0], [97.7, 1355.0], [97.8, 1355.0], [97.9, 1355.0], [98.0, 1355.0], [98.1, 1382.0], [98.2, 1382.0], [98.3, 1382.0], [98.4, 1382.0], [98.5, 1382.0], [98.6, 1382.0], [98.7, 1488.0], [98.8, 1488.0], [98.9, 1488.0], [99.0, 1488.0], [99.1, 1488.0], [99.2, 1488.0], [99.3, 1488.0], [99.4, 1508.0], [99.5, 1508.0], [99.6, 1508.0], [99.7, 1508.0], [99.8, 1508.0], [99.9, 1508.0], [100.0, 1508.0]], "isOverall": false, "label": "Put Request", "isController": false}, {"data": [[0.0, 12.0], [0.1, 12.0], [0.2, 12.0], [0.3, 12.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 13.0], [0.8, 13.0], [0.9, 13.0], [1.0, 13.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 13.0], [2.0, 13.0], [2.1, 13.0], [2.2, 13.0], [2.3, 13.0], [2.4, 13.0], [2.5, 13.0], [2.6, 13.0], [2.7, 14.0], [2.8, 14.0], [2.9, 14.0], [3.0, 14.0], [3.1, 14.0], [3.2, 14.0], [3.3, 14.0], [3.4, 14.0], [3.5, 14.0], [3.6, 14.0], [3.7, 14.0], [3.8, 14.0], [3.9, 14.0], [4.0, 15.0], [4.1, 15.0], [4.2, 15.0], [4.3, 15.0], [4.4, 15.0], [4.5, 15.0], [4.6, 15.0], [4.7, 15.0], [4.8, 15.0], [4.9, 15.0], [5.0, 15.0], [5.1, 15.0], [5.2, 15.0], [5.3, 15.0], [5.4, 15.0], [5.5, 15.0], [5.6, 15.0], [5.7, 15.0], [5.8, 15.0], [5.9, 15.0], [6.0, 15.0], [6.1, 15.0], [6.2, 15.0], [6.3, 15.0], [6.4, 15.0], [6.5, 15.0], [6.6, 15.0], [6.7, 15.0], [6.8, 15.0], [6.9, 15.0], [7.0, 15.0], [7.1, 15.0], [7.2, 15.0], [7.3, 15.0], [7.4, 15.0], [7.5, 15.0], [7.6, 15.0], [7.7, 15.0], [7.8, 15.0], [7.9, 15.0], [8.0, 15.0], [8.1, 15.0], [8.2, 15.0], [8.3, 15.0], [8.4, 15.0], [8.5, 15.0], [8.6, 15.0], [8.7, 15.0], [8.8, 15.0], [8.9, 15.0], [9.0, 15.0], [9.1, 15.0], [9.2, 15.0], [9.3, 15.0], [9.4, 15.0], [9.5, 15.0], [9.6, 15.0], [9.7, 15.0], [9.8, 15.0], [9.9, 15.0], [10.0, 16.0], [10.1, 16.0], [10.2, 16.0], [10.3, 16.0], [10.4, 16.0], [10.5, 16.0], [10.6, 16.0], [10.7, 16.0], [10.8, 16.0], [10.9, 16.0], [11.0, 16.0], [11.1, 16.0], [11.2, 16.0], [11.3, 16.0], [11.4, 16.0], [11.5, 16.0], [11.6, 16.0], [11.7, 16.0], [11.8, 16.0], [11.9, 16.0], [12.0, 16.0], [12.1, 16.0], [12.2, 16.0], [12.3, 16.0], [12.4, 16.0], [12.5, 16.0], [12.6, 16.0], [12.7, 16.0], [12.8, 16.0], [12.9, 16.0], [13.0, 16.0], [13.1, 16.0], [13.2, 16.0], [13.3, 16.0], [13.4, 16.0], [13.5, 16.0], [13.6, 16.0], [13.7, 16.0], [13.8, 16.0], [13.9, 16.0], [14.0, 16.0], [14.1, 16.0], [14.2, 16.0], [14.3, 16.0], [14.4, 16.0], [14.5, 16.0], [14.6, 16.0], [14.7, 16.0], [14.8, 16.0], [14.9, 16.0], [15.0, 16.0], [15.1, 16.0], [15.2, 16.0], [15.3, 16.0], [15.4, 17.0], [15.5, 17.0], [15.6, 17.0], [15.7, 17.0], [15.8, 17.0], [15.9, 17.0], [16.0, 17.0], [16.1, 17.0], [16.2, 17.0], [16.3, 17.0], [16.4, 17.0], [16.5, 17.0], [16.6, 17.0], [16.7, 17.0], [16.8, 17.0], [16.9, 17.0], [17.0, 17.0], [17.1, 17.0], [17.2, 17.0], [17.3, 17.0], [17.4, 18.0], [17.5, 18.0], [17.6, 18.0], [17.7, 18.0], [17.8, 18.0], [17.9, 18.0], [18.0, 18.0], [18.1, 18.0], [18.2, 18.0], [18.3, 18.0], [18.4, 18.0], [18.5, 18.0], [18.6, 18.0], [18.7, 18.0], [18.8, 18.0], [18.9, 18.0], [19.0, 18.0], [19.1, 18.0], [19.2, 18.0], [19.3, 18.0], [19.4, 18.0], [19.5, 18.0], [19.6, 18.0], [19.7, 18.0], [19.8, 18.0], [19.9, 18.0], [20.0, 18.0], [20.1, 18.0], [20.2, 18.0], [20.3, 18.0], [20.4, 18.0], [20.5, 18.0], [20.6, 18.0], [20.7, 18.0], [20.8, 18.0], [20.9, 18.0], [21.0, 18.0], [21.1, 18.0], [21.2, 18.0], [21.3, 18.0], [21.4, 18.0], [21.5, 18.0], [21.6, 18.0], [21.7, 18.0], [21.8, 18.0], [21.9, 18.0], [22.0, 18.0], [22.1, 18.0], [22.2, 18.0], [22.3, 18.0], [22.4, 18.0], [22.5, 18.0], [22.6, 18.0], [22.7, 19.0], [22.8, 19.0], [22.9, 19.0], [23.0, 19.0], [23.1, 19.0], [23.2, 19.0], [23.3, 19.0], [23.4, 19.0], [23.5, 19.0], [23.6, 19.0], [23.7, 19.0], [23.8, 19.0], [23.9, 19.0], [24.0, 19.0], [24.1, 19.0], [24.2, 19.0], [24.3, 19.0], [24.4, 19.0], [24.5, 19.0], [24.6, 19.0], [24.7, 19.0], [24.8, 19.0], [24.9, 19.0], [25.0, 19.0], [25.1, 19.0], [25.2, 19.0], [25.3, 19.0], [25.4, 19.0], [25.5, 19.0], [25.6, 19.0], [25.7, 19.0], [25.8, 19.0], [25.9, 19.0], [26.0, 19.0], [26.1, 19.0], [26.2, 19.0], [26.3, 19.0], [26.4, 19.0], [26.5, 19.0], [26.6, 19.0], [26.7, 19.0], [26.8, 19.0], [26.9, 19.0], [27.0, 19.0], [27.1, 19.0], [27.2, 19.0], [27.3, 19.0], [27.4, 19.0], [27.5, 19.0], [27.6, 19.0], [27.7, 19.0], [27.8, 19.0], [27.9, 19.0], [28.0, 19.0], [28.1, 19.0], [28.2, 19.0], [28.3, 19.0], [28.4, 19.0], [28.5, 19.0], [28.6, 19.0], [28.7, 20.0], [28.8, 20.0], [28.9, 20.0], [29.0, 20.0], [29.1, 20.0], [29.2, 20.0], [29.3, 20.0], [29.4, 20.0], [29.5, 20.0], [29.6, 20.0], [29.7, 20.0], [29.8, 20.0], [29.9, 20.0], [30.0, 20.0], [30.1, 20.0], [30.2, 20.0], [30.3, 20.0], [30.4, 20.0], [30.5, 20.0], [30.6, 20.0], [30.7, 20.0], [30.8, 20.0], [30.9, 20.0], [31.0, 20.0], [31.1, 20.0], [31.2, 20.0], [31.3, 20.0], [31.4, 20.0], [31.5, 20.0], [31.6, 20.0], [31.7, 20.0], [31.8, 20.0], [31.9, 20.0], [32.0, 21.0], [32.1, 21.0], [32.2, 21.0], [32.3, 21.0], [32.4, 21.0], [32.5, 21.0], [32.6, 21.0], [32.7, 21.0], [32.8, 21.0], [32.9, 21.0], [33.0, 21.0], [33.1, 21.0], [33.2, 21.0], [33.3, 21.0], [33.4, 21.0], [33.5, 21.0], [33.6, 21.0], [33.7, 21.0], [33.8, 21.0], [33.9, 21.0], [34.0, 21.0], [34.1, 21.0], [34.2, 21.0], [34.3, 21.0], [34.4, 21.0], [34.5, 21.0], [34.6, 21.0], [34.7, 21.0], [34.8, 21.0], [34.9, 21.0], [35.0, 21.0], [35.1, 21.0], [35.2, 21.0], [35.3, 21.0], [35.4, 22.0], [35.5, 22.0], [35.6, 22.0], [35.7, 22.0], [35.8, 22.0], [35.9, 22.0], [36.0, 22.0], [36.1, 22.0], [36.2, 22.0], [36.3, 22.0], [36.4, 22.0], [36.5, 22.0], [36.6, 22.0], [36.7, 22.0], [36.8, 22.0], [36.9, 22.0], [37.0, 22.0], [37.1, 22.0], [37.2, 22.0], [37.3, 22.0], [37.4, 22.0], [37.5, 22.0], [37.6, 22.0], [37.7, 22.0], [37.8, 22.0], [37.9, 22.0], [38.0, 22.0], [38.1, 22.0], [38.2, 22.0], [38.3, 22.0], [38.4, 22.0], [38.5, 22.0], [38.6, 22.0], [38.7, 22.0], [38.8, 22.0], [38.9, 22.0], [39.0, 22.0], [39.1, 22.0], [39.2, 22.0], [39.3, 22.0], [39.4, 23.0], [39.5, 23.0], [39.6, 23.0], [39.7, 23.0], [39.8, 23.0], [39.9, 23.0], [40.0, 23.0], [40.1, 23.0], [40.2, 23.0], [40.3, 23.0], [40.4, 23.0], [40.5, 23.0], [40.6, 23.0], [40.7, 23.0], [40.8, 23.0], [40.9, 23.0], [41.0, 23.0], [41.1, 23.0], [41.2, 23.0], [41.3, 23.0], [41.4, 23.0], [41.5, 23.0], [41.6, 23.0], [41.7, 23.0], [41.8, 23.0], [41.9, 23.0], [42.0, 23.0], [42.1, 23.0], [42.2, 23.0], [42.3, 23.0], [42.4, 23.0], [42.5, 23.0], [42.6, 23.0], [42.7, 23.0], [42.8, 23.0], [42.9, 23.0], [43.0, 23.0], [43.1, 23.0], [43.2, 23.0], [43.3, 23.0], [43.4, 23.0], [43.5, 23.0], [43.6, 23.0], [43.7, 23.0], [43.8, 23.0], [43.9, 23.0], [44.0, 24.0], [44.1, 24.0], [44.2, 24.0], [44.3, 24.0], [44.4, 24.0], [44.5, 24.0], [44.6, 24.0], [44.7, 24.0], [44.8, 24.0], [44.9, 24.0], [45.0, 24.0], [45.1, 24.0], [45.2, 24.0], [45.3, 24.0], [45.4, 24.0], [45.5, 24.0], [45.6, 24.0], [45.7, 24.0], [45.8, 24.0], [45.9, 24.0], [46.0, 25.0], [46.1, 25.0], [46.2, 25.0], [46.3, 25.0], [46.4, 25.0], [46.5, 25.0], [46.6, 25.0], [46.7, 25.0], [46.8, 25.0], [46.9, 25.0], [47.0, 25.0], [47.1, 25.0], [47.2, 25.0], [47.3, 25.0], [47.4, 25.0], [47.5, 25.0], [47.6, 25.0], [47.7, 25.0], [47.8, 25.0], [47.9, 25.0], [48.0, 25.0], [48.1, 25.0], [48.2, 25.0], [48.3, 25.0], [48.4, 25.0], [48.5, 25.0], [48.6, 25.0], [48.7, 25.0], [48.8, 25.0], [48.9, 25.0], [49.0, 25.0], [49.1, 25.0], [49.2, 25.0], [49.3, 25.0], [49.4, 27.0], [49.5, 27.0], [49.6, 27.0], [49.7, 27.0], [49.8, 27.0], [49.9, 27.0], [50.0, 27.0], [50.1, 27.0], [50.2, 27.0], [50.3, 27.0], [50.4, 27.0], [50.5, 27.0], [50.6, 27.0], [50.7, 27.0], [50.8, 27.0], [50.9, 27.0], [51.0, 27.0], [51.1, 27.0], [51.2, 27.0], [51.3, 27.0], [51.4, 27.0], [51.5, 27.0], [51.6, 27.0], [51.7, 27.0], [51.8, 27.0], [51.9, 27.0], [52.0, 27.0], [52.1, 27.0], [52.2, 27.0], [52.3, 27.0], [52.4, 27.0], [52.5, 27.0], [52.6, 27.0], [52.7, 27.0], [52.8, 27.0], [52.9, 27.0], [53.0, 27.0], [53.1, 27.0], [53.2, 27.0], [53.3, 27.0], [53.4, 27.0], [53.5, 27.0], [53.6, 27.0], [53.7, 27.0], [53.8, 27.0], [53.9, 27.0], [54.0, 28.0], [54.1, 28.0], [54.2, 28.0], [54.3, 28.0], [54.4, 28.0], [54.5, 28.0], [54.6, 28.0], [54.7, 28.0], [54.8, 28.0], [54.9, 28.0], [55.0, 28.0], [55.1, 28.0], [55.2, 28.0], [55.3, 28.0], [55.4, 28.0], [55.5, 28.0], [55.6, 28.0], [55.7, 28.0], [55.8, 28.0], [55.9, 28.0], [56.0, 28.0], [56.1, 28.0], [56.2, 28.0], [56.3, 28.0], [56.4, 28.0], [56.5, 28.0], [56.6, 28.0], [56.7, 28.0], [56.8, 28.0], [56.9, 28.0], [57.0, 28.0], [57.1, 28.0], [57.2, 28.0], [57.3, 28.0], [57.4, 28.0], [57.5, 28.0], [57.6, 28.0], [57.7, 28.0], [57.8, 28.0], [57.9, 28.0], [58.0, 28.0], [58.1, 28.0], [58.2, 28.0], [58.3, 28.0], [58.4, 28.0], [58.5, 28.0], [58.6, 28.0], [58.7, 29.0], [58.8, 29.0], [58.9, 29.0], [59.0, 29.0], [59.1, 29.0], [59.2, 29.0], [59.3, 29.0], [59.4, 30.0], [59.5, 30.0], [59.6, 30.0], [59.7, 30.0], [59.8, 30.0], [59.9, 30.0], [60.0, 32.0], [60.1, 32.0], [60.2, 32.0], [60.3, 32.0], [60.4, 32.0], [60.5, 32.0], [60.6, 32.0], [60.7, 32.0], [60.8, 32.0], [60.9, 32.0], [61.0, 32.0], [61.1, 32.0], [61.2, 32.0], [61.3, 32.0], [61.4, 32.0], [61.5, 32.0], [61.6, 32.0], [61.7, 32.0], [61.8, 32.0], [61.9, 32.0], [62.0, 32.0], [62.1, 32.0], [62.2, 32.0], [62.3, 32.0], [62.4, 32.0], [62.5, 32.0], [62.6, 32.0], [62.7, 32.0], [62.8, 32.0], [62.9, 32.0], [63.0, 32.0], [63.1, 32.0], [63.2, 32.0], [63.3, 32.0], [63.4, 32.0], [63.5, 32.0], [63.6, 32.0], [63.7, 32.0], [63.8, 32.0], [63.9, 32.0], [64.0, 32.0], [64.1, 32.0], [64.2, 32.0], [64.3, 32.0], [64.4, 32.0], [64.5, 32.0], [64.6, 32.0], [64.7, 33.0], [64.8, 33.0], [64.9, 33.0], [65.0, 33.0], [65.1, 33.0], [65.2, 33.0], [65.3, 33.0], [65.4, 33.0], [65.5, 33.0], [65.6, 33.0], [65.7, 33.0], [65.8, 33.0], [65.9, 33.0], [66.0, 34.0], [66.1, 34.0], [66.2, 34.0], [66.3, 34.0], [66.4, 34.0], [66.5, 34.0], [66.6, 34.0], [66.7, 35.0], [66.8, 35.0], [66.9, 35.0], [67.0, 35.0], [67.1, 35.0], [67.2, 35.0], [67.3, 35.0], [67.4, 36.0], [67.5, 36.0], [67.6, 36.0], [67.7, 36.0], [67.8, 36.0], [67.9, 36.0], [68.0, 37.0], [68.1, 37.0], [68.2, 37.0], [68.3, 37.0], [68.4, 37.0], [68.5, 37.0], [68.6, 37.0], [68.7, 37.0], [68.8, 37.0], [68.9, 37.0], [69.0, 37.0], [69.1, 37.0], [69.2, 37.0], [69.3, 37.0], [69.4, 40.0], [69.5, 40.0], [69.6, 40.0], [69.7, 40.0], [69.8, 40.0], [69.9, 40.0], [70.0, 40.0], [70.1, 40.0], [70.2, 40.0], [70.3, 40.0], [70.4, 40.0], [70.5, 40.0], [70.6, 40.0], [70.7, 40.0], [70.8, 40.0], [70.9, 40.0], [71.0, 40.0], [71.1, 40.0], [71.2, 40.0], [71.3, 40.0], [71.4, 40.0], [71.5, 40.0], [71.6, 40.0], [71.7, 40.0], [71.8, 40.0], [71.9, 40.0], [72.0, 46.0], [72.1, 46.0], [72.2, 46.0], [72.3, 46.0], [72.4, 46.0], [72.5, 46.0], [72.6, 46.0], [72.7, 46.0], [72.8, 46.0], [72.9, 46.0], [73.0, 46.0], [73.1, 46.0], [73.2, 46.0], [73.3, 46.0], [73.4, 46.0], [73.5, 46.0], [73.6, 46.0], [73.7, 46.0], [73.8, 46.0], [73.9, 46.0], [74.0, 47.0], [74.1, 47.0], [74.2, 47.0], [74.3, 47.0], [74.4, 47.0], [74.5, 47.0], [74.6, 47.0], [74.7, 47.0], [74.8, 47.0], [74.9, 47.0], [75.0, 47.0], [75.1, 47.0], [75.2, 47.0], [75.3, 47.0], [75.4, 49.0], [75.5, 49.0], [75.6, 49.0], [75.7, 49.0], [75.8, 49.0], [75.9, 49.0], [76.0, 51.0], [76.1, 51.0], [76.2, 51.0], [76.3, 51.0], [76.4, 51.0], [76.5, 51.0], [76.6, 51.0], [76.7, 51.0], [76.8, 51.0], [76.9, 51.0], [77.0, 51.0], [77.1, 51.0], [77.2, 51.0], [77.3, 51.0], [77.4, 53.0], [77.5, 53.0], [77.6, 53.0], [77.7, 53.0], [77.8, 53.0], [77.9, 53.0], [78.0, 53.0], [78.1, 53.0], [78.2, 53.0], [78.3, 53.0], [78.4, 53.0], [78.5, 53.0], [78.6, 53.0], [78.7, 60.0], [78.8, 60.0], [78.9, 60.0], [79.0, 60.0], [79.1, 60.0], [79.2, 60.0], [79.3, 60.0], [79.4, 62.0], [79.5, 62.0], [79.6, 62.0], [79.7, 62.0], [79.8, 62.0], [79.9, 62.0], [80.0, 66.0], [80.1, 66.0], [80.2, 66.0], [80.3, 66.0], [80.4, 66.0], [80.5, 66.0], [80.6, 66.0], [80.7, 68.0], [80.8, 68.0], [80.9, 68.0], [81.0, 68.0], [81.1, 68.0], [81.2, 68.0], [81.3, 68.0], [81.4, 71.0], [81.5, 71.0], [81.6, 71.0], [81.7, 71.0], [81.8, 71.0], [81.9, 71.0], [82.0, 71.0], [82.1, 71.0], [82.2, 71.0], [82.3, 71.0], [82.4, 71.0], [82.5, 71.0], [82.6, 71.0], [82.7, 74.0], [82.8, 74.0], [82.9, 74.0], [83.0, 74.0], [83.1, 74.0], [83.2, 74.0], [83.3, 74.0], [83.4, 77.0], [83.5, 77.0], [83.6, 77.0], [83.7, 77.0], [83.8, 77.0], [83.9, 77.0], [84.0, 77.0], [84.1, 79.0], [84.2, 79.0], [84.3, 79.0], [84.4, 79.0], [84.5, 79.0], [84.6, 79.0], [84.7, 80.0], [84.8, 80.0], [84.9, 80.0], [85.0, 80.0], [85.1, 80.0], [85.2, 80.0], [85.3, 80.0], [85.4, 80.0], [85.5, 80.0], [85.6, 80.0], [85.7, 80.0], [85.8, 80.0], [85.9, 80.0], [86.0, 80.0], [86.1, 82.0], [86.2, 82.0], [86.3, 82.0], [86.4, 82.0], [86.5, 82.0], [86.6, 82.0], [86.7, 87.0], [86.8, 87.0], [86.9, 87.0], [87.0, 87.0], [87.1, 87.0], [87.2, 87.0], [87.3, 87.0], [87.4, 93.0], [87.5, 93.0], [87.6, 93.0], [87.7, 93.0], [87.8, 93.0], [87.9, 93.0], [88.0, 93.0], [88.1, 98.0], [88.2, 98.0], [88.3, 98.0], [88.4, 98.0], [88.5, 98.0], [88.6, 98.0], [88.7, 102.0], [88.8, 102.0], [88.9, 102.0], [89.0, 102.0], [89.1, 102.0], [89.2, 102.0], [89.3, 102.0], [89.4, 123.0], [89.5, 123.0], [89.6, 123.0], [89.7, 123.0], [89.8, 123.0], [89.9, 123.0], [90.0, 123.0], [90.1, 158.0], [90.2, 158.0], [90.3, 158.0], [90.4, 158.0], [90.5, 158.0], [90.6, 158.0], [90.7, 177.0], [90.8, 177.0], [90.9, 177.0], [91.0, 177.0], [91.1, 177.0], [91.2, 177.0], [91.3, 177.0], [91.4, 180.0], [91.5, 180.0], [91.6, 180.0], [91.7, 180.0], [91.8, 180.0], [91.9, 180.0], [92.0, 180.0], [92.1, 224.0], [92.2, 224.0], [92.3, 224.0], [92.4, 224.0], [92.5, 224.0], [92.6, 224.0], [92.7, 231.0], [92.8, 231.0], [92.9, 231.0], [93.0, 231.0], [93.1, 231.0], [93.2, 231.0], [93.3, 231.0], [93.4, 237.0], [93.5, 237.0], [93.6, 237.0], [93.7, 237.0], [93.8, 237.0], [93.9, 237.0], [94.0, 237.0], [94.1, 244.0], [94.2, 244.0], [94.3, 244.0], [94.4, 244.0], [94.5, 244.0], [94.6, 244.0], [94.7, 248.0], [94.8, 248.0], [94.9, 248.0], [95.0, 248.0], [95.1, 248.0], [95.2, 248.0], [95.3, 248.0], [95.4, 249.0], [95.5, 249.0], [95.6, 249.0], [95.7, 249.0], [95.8, 249.0], [95.9, 249.0], [96.0, 249.0], [96.1, 266.0], [96.2, 266.0], [96.3, 266.0], [96.4, 266.0], [96.5, 266.0], [96.6, 266.0], [96.7, 297.0], [96.8, 297.0], [96.9, 297.0], [97.0, 297.0], [97.1, 297.0], [97.2, 297.0], [97.3, 297.0], [97.4, 303.0], [97.5, 303.0], [97.6, 303.0], [97.7, 303.0], [97.8, 303.0], [97.9, 303.0], [98.0, 303.0], [98.1, 329.0], [98.2, 329.0], [98.3, 329.0], [98.4, 329.0], [98.5, 329.0], [98.6, 329.0], [98.7, 350.0], [98.8, 350.0], [98.9, 350.0], [99.0, 350.0], [99.1, 350.0], [99.2, 350.0], [99.3, 350.0], [99.4, 449.0], [99.5, 449.0], [99.6, 449.0], [99.7, 449.0], [99.8, 449.0], [99.9, 449.0], [100.0, 449.0]], "isOverall": false, "label": "AfterupdateGet Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 133.0, "series": [{"data": [[300.0, 32.0], [600.0, 9.0], [700.0, 1.0], [1400.0, 4.0], [400.0, 93.0], [500.0, 10.0], [1000.0, 1.0]], "isOverall": false, "label": "Delete Request", "isController": false}, {"data": [[0.0, 120.0], [2200.0, 1.0], [600.0, 1.0], [1200.0, 1.0], [300.0, 1.0], [700.0, 1.0], [200.0, 12.0], [400.0, 3.0], [100.0, 4.0], [900.0, 1.0], [1900.0, 2.0], [500.0, 3.0]], "isOverall": false, "label": "Get Request", "isController": false}, {"data": [[4200.0, 3.0], [4100.0, 1.0], [4600.0, 1.0], [4800.0, 1.0], [4700.0, 1.0], [5000.0, 2.0], [5100.0, 1.0], [5200.0, 1.0], [5300.0, 2.0], [5400.0, 2.0], [5500.0, 3.0], [6000.0, 2.0], [6300.0, 2.0], [6400.0, 2.0], [6700.0, 2.0], [6800.0, 1.0], [7000.0, 1.0], [7100.0, 1.0], [7400.0, 2.0], [7800.0, 3.0], [8400.0, 1.0], [8600.0, 1.0], [8500.0, 1.0], [8200.0, 1.0], [9200.0, 1.0], [8800.0, 2.0], [8900.0, 2.0], [9000.0, 2.0], [9700.0, 4.0], [9600.0, 1.0], [9300.0, 2.0], [9400.0, 2.0], [9500.0, 2.0], [10200.0, 1.0], [10000.0, 1.0], [10700.0, 3.0], [10400.0, 1.0], [10300.0, 2.0], [10500.0, 3.0], [11100.0, 2.0], [10900.0, 2.0], [10800.0, 3.0], [11500.0, 3.0], [11700.0, 2.0], [11600.0, 1.0], [12100.0, 1.0], [12000.0, 3.0], [11800.0, 2.0], [12600.0, 1.0], [12400.0, 2.0], [12500.0, 1.0], [12300.0, 1.0], [13300.0, 2.0], [12900.0, 2.0], [13000.0, 2.0], [12800.0, 3.0], [13200.0, 2.0], [13100.0, 1.0], [13400.0, 3.0], [13500.0, 3.0], [13600.0, 2.0], [14000.0, 3.0], [14100.0, 1.0], [14300.0, 1.0], [13900.0, 1.0], [14600.0, 1.0], [14800.0, 4.0], [14700.0, 10.0], [14400.0, 1.0], [14500.0, 2.0], [15300.0, 3.0], [15100.0, 3.0], [15000.0, 3.0], [15400.0, 1.0], [15800.0, 1.0], [15900.0, 2.0], [16000.0, 1.0], [16100.0, 1.0]], "isOverall": false, "label": "Post Request", "isController": false}, {"data": [[300.0, 38.0], [600.0, 7.0], [1200.0, 1.0], [1300.0, 2.0], [700.0, 5.0], [1400.0, 1.0], [1500.0, 1.0], [400.0, 82.0], [800.0, 2.0], [500.0, 10.0], [1000.0, 1.0]], "isOverall": false, "label": "Put Request", "isController": false}, {"data": [[0.0, 133.0], [300.0, 3.0], [100.0, 5.0], [200.0, 8.0], [400.0, 1.0]], "isOverall": false, "label": "AfterupdateGet Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 535.0, "series": [{"data": [[0.0, 535.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 61.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 150.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 4.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 119.71333333333348, "minX": 1.72857222E12, "maxY": 119.71333333333348, "series": [{"data": [[1.72857222E12, 119.71333333333348]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857222E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.0, "maxY": 11938.5, "series": [{"data": [[2.0, 1415.0], [3.0, 1423.0], [4.0, 484.0], [5.0, 1410.0], [6.0, 405.0], [7.0, 689.0], [8.0, 1479.0], [9.0, 605.0], [10.0, 472.0], [11.0, 618.0], [12.0, 401.0], [13.0, 477.0], [14.0, 391.0], [15.0, 397.0], [16.0, 404.0], [17.0, 399.0], [18.0, 400.0], [19.0, 398.0], [21.0, 405.5], [23.0, 397.5], [24.0, 400.0], [25.0, 389.0], [27.0, 484.5], [28.0, 472.0], [29.0, 394.0], [33.0, 423.25], [35.0, 568.5], [37.0, 410.0], [36.0, 481.0], [38.0, 405.0], [41.0, 418.0], [43.0, 482.0], [45.0, 511.0], [47.0, 426.0], [49.0, 461.25], [48.0, 427.0], [51.0, 449.0], [53.0, 470.6666666666667], [55.0, 400.0], [54.0, 415.0], [60.0, 430.0], [63.0, 400.0], [62.0, 389.5], [67.0, 388.0], [65.0, 482.0], [64.0, 478.0], [71.0, 396.0], [69.0, 396.0], [68.0, 404.0], [74.0, 403.0], [72.0, 400.5], [87.0, 398.0], [90.0, 705.0], [88.0, 619.0], [93.0, 525.6666666666666], [98.0, 410.0], [96.0, 475.0], [102.0, 417.0], [101.0, 411.0], [104.0, 404.0], [111.0, 518.5], [110.0, 414.0], [108.0, 400.0], [115.0, 403.0], [113.0, 402.0], [119.0, 388.0], [118.0, 458.00000000000006], [117.0, 522.0], [116.0, 603.0], [122.0, 404.0], [120.0, 553.5], [127.0, 480.0], [126.0, 481.0], [125.0, 498.0], [124.0, 448.0], [135.0, 405.0], [134.0, 401.0], [132.0, 410.0], [131.0, 413.0], [130.0, 404.0], [129.0, 497.0], [143.0, 509.0], [142.0, 430.14285714285717], [141.0, 398.0], [136.0, 391.0], [150.0, 406.5], [149.0, 401.0], [148.0, 391.0], [146.0, 394.0], [145.0, 401.0], [1.0, 486.0]], "isOverall": false, "label": "Delete Request", "isController": false}, {"data": [[80.21999999999998, 474.44666666666666]], "isOverall": false, "label": "Delete Request-Aggregated", "isController": false}, {"data": [[63.0, 1904.0], [68.0, 1985.0], [80.0, 27.0], [91.0, 17.0], [95.0, 25.0], [93.0, 29.0], [99.0, 17.0], [96.0, 21.0], [98.0, 34.0], [101.0, 15.0], [104.0, 316.0], [111.0, 31.0], [115.0, 18.0], [113.0, 22.0], [119.0, 18.0], [118.0, 53.0], [122.0, 79.0], [120.0, 67.25], [127.0, 166.25], [126.0, 129.66666666666669], [132.0, 25.0], [131.0, 23.5], [130.0, 19.0], [129.0, 38.0], [143.0, 153.44444444444443], [142.0, 29.0], [150.0, 96.8723404255319], [149.0, 183.5], [146.0, 115.0], [147.0, 103.5], [144.0, 19.0], [19.0, 2220.0]], "isOverall": false, "label": "Get Request", "isController": false}, {"data": [[139.23999999999998, 131.67999999999998]], "isOverall": false, "label": "Get Request-Aggregated", "isController": false}, {"data": [[132.0, 6380.0], [143.0, 11938.5], [150.0, 11211.402877697843], [91.0, 8244.0], [111.0, 6765.0], [119.0, 7410.0], [118.0, 7847.0], [127.0, 6511.0]], "isOverall": false, "label": "Post Request", "isController": false}, {"data": [[148.04000000000002, 10975.253333333336]], "isOverall": false, "label": "Post Request-Aggregated", "isController": false}, {"data": [[5.0, 473.0], [27.0, 389.0], [28.0, 443.0], [35.0, 475.0], [34.0, 404.0], [37.0, 401.0], [36.0, 401.0], [49.0, 444.0], [48.0, 513.0], [51.0, 449.0], [53.0, 457.0], [61.0, 395.0], [60.0, 443.5], [63.0, 446.5], [62.0, 394.5], [69.0, 475.5], [74.0, 397.0], [77.0, 396.0], [85.0, 386.0], [91.0, 423.6666666666667], [95.0, 492.0], [94.0, 494.0], [93.0, 498.0], [96.0, 586.0], [102.0, 402.0], [101.0, 947.0], [105.0, 397.0], [104.0, 393.0], [111.0, 727.3333333333334], [110.0, 995.0], [109.0, 406.0], [108.0, 480.0], [113.0, 555.5555555555555], [112.0, 394.0], [118.0, 408.1428571428571], [116.0, 929.0], [120.0, 453.5], [127.0, 538.0], [124.0, 422.0], [132.0, 407.0], [130.0, 397.0], [129.0, 396.0], [131.0, 399.0], [135.0, 395.0], [143.0, 732.6666666666666], [142.0, 779.0], [150.0, 478.275], [149.0, 578.75], [148.0, 447.75], [147.0, 480.0], [146.0, 469.2], [145.0, 457.37499999999994]], "isOverall": false, "label": "Put Request", "isController": false}, {"data": [[118.28666666666665, 498.1866666666666]], "isOverall": false, "label": "Put Request-Aggregated", "isController": false}, {"data": [[34.0, 21.0], [36.0, 13.0], [39.0, 29.0], [41.0, 18.0], [40.0, 34.0], [61.0, 24.0], [60.0, 20.5], [4.0, 15.0], [68.0, 16.0], [74.0, 17.5], [72.0, 14.5], [79.0, 19.0], [91.0, 56.14285714285714], [88.0, 17.0], [95.0, 21.0], [93.0, 51.0], [99.0, 16.0], [98.0, 80.75], [96.0, 55.5], [102.0, 16.75], [101.0, 22.0], [104.0, 18.0], [111.0, 29.0], [108.0, 19.0], [113.0, 33.5], [112.0, 18.0], [119.0, 21.0], [117.0, 17.25], [118.0, 79.0], [120.0, 49.2], [127.0, 77.75], [132.0, 24.0], [129.0, 21.5], [128.0, 237.0], [143.0, 104.5], [142.0, 21.0], [150.0, 48.46666666666666], [149.0, 164.33333333333334], [147.0, 83.66666666666666], [144.0, 85.57142857142857], [145.0, 58.0], [146.0, 37.0], [19.0, 346.5], [27.0, 12.0], [28.0, 21.0], [29.0, 23.0]], "isOverall": false, "label": "AfterupdateGet Request", "isController": false}, {"data": [[112.78000000000004, 55.199999999999974]], "isOverall": false, "label": "AfterupdateGet Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 150.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3040.8333333333335, "minX": 1.72857222E12, "maxY": 16072.383333333333, "series": [{"data": [[1.72857222E12, 16072.383333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72857222E12, 3040.8333333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857222E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 55.199999999999974, "minX": 1.72857222E12, "maxY": 10975.253333333336, "series": [{"data": [[1.72857222E12, 474.44666666666666]], "isOverall": false, "label": "Delete Request", "isController": false}, {"data": [[1.72857222E12, 131.67999999999998]], "isOverall": false, "label": "Get Request", "isController": false}, {"data": [[1.72857222E12, 10975.253333333336]], "isOverall": false, "label": "Post Request", "isController": false}, {"data": [[1.72857222E12, 498.1866666666666]], "isOverall": false, "label": "Put Request", "isController": false}, {"data": [[1.72857222E12, 55.199999999999974]], "isOverall": false, "label": "AfterupdateGet Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857222E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72857222E12, "maxY": 10374.46, "series": [{"data": [[1.72857222E12, 0.0]], "isOverall": false, "label": "Delete Request", "isController": false}, {"data": [[1.72857222E12, 113.54666666666667]], "isOverall": false, "label": "Get Request", "isController": false}, {"data": [[1.72857222E12, 10374.46]], "isOverall": false, "label": "Post Request", "isController": false}, {"data": [[1.72857222E12, 497.9400000000001]], "isOverall": false, "label": "Put Request", "isController": false}, {"data": [[1.72857222E12, 44.74666666666665]], "isOverall": false, "label": "AfterupdateGet Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857222E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72857222E12, "maxY": 10143.773333333345, "series": [{"data": [[1.72857222E12, 0.0]], "isOverall": false, "label": "Delete Request", "isController": false}, {"data": [[1.72857222E12, 48.27333333333334]], "isOverall": false, "label": "Get Request", "isController": false}, {"data": [[1.72857222E12, 10143.773333333345]], "isOverall": false, "label": "Post Request", "isController": false}, {"data": [[1.72857222E12, 0.0]], "isOverall": false, "label": "Put Request", "isController": false}, {"data": [[1.72857222E12, 0.0]], "isOverall": false, "label": "AfterupdateGet Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857222E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.72857222E12, "maxY": 16112.0, "series": [{"data": [[1.72857222E12, 16112.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72857222E12, 11006.30000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72857222E12, 15156.629999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72857222E12, 13610.05]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72857222E12, 12.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72857222E12, 401.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857222E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 144.0, "minX": 1.0, "maxY": 15691.0, "series": [{"data": [[33.0, 405.0], [1.0, 486.0], [136.0, 144.0], [281.0, 394.0], [76.0, 11701.5], [223.0, 398.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[136.0, 15691.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 281.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 11535.0, "series": [{"data": [[33.0, 0.0], [1.0, 0.0], [136.0, 35.0], [281.0, 63.0], [76.0, 11535.0], [223.0, 18.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[136.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 281.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 12.5, "minX": 1.72857222E12, "maxY": 12.5, "series": [{"data": [[1.72857222E12, 12.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857222E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.72857222E12, "maxY": 7.5, "series": [{"data": [[1.72857222E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.72857222E12, 7.5]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72857222E12, 2.433333333333333]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.72857222E12, 2.5]], "isOverall": false, "label": "204", "isController": false}, {"data": [[1.72857222E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.72857222E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857222E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.72857222E12, "maxY": 2.5, "series": [{"data": [[1.72857222E12, 2.433333333333333]], "isOverall": false, "label": "Post Request-success", "isController": false}, {"data": [[1.72857222E12, 2.5]], "isOverall": false, "label": "AfterupdateGet Request-success", "isController": false}, {"data": [[1.72857222E12, 0.06666666666666667]], "isOverall": false, "label": "Post Request-failure", "isController": false}, {"data": [[1.72857222E12, 2.5]], "isOverall": false, "label": "Put Request-success", "isController": false}, {"data": [[1.72857222E12, 2.5]], "isOverall": false, "label": "Get Request-success", "isController": false}, {"data": [[1.72857222E12, 2.5]], "isOverall": false, "label": "Delete Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857222E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.72857222E12, "maxY": 12.433333333333334, "series": [{"data": [[1.72857222E12, 12.433333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.72857222E12, 0.06666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857222E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

