/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 12.0, "minX": 0.0, "maxY": 17402.0, "series": [{"data": [[0.0, 383.0], [0.1, 383.0], [0.2, 383.0], [0.3, 383.0], [0.4, 383.0], [0.5, 383.0], [0.6, 383.0], [0.7, 383.0], [0.8, 383.0], [0.9, 383.0], [1.0, 383.0], [1.1, 383.0], [1.2, 383.0], [1.3, 384.0], [1.4, 384.0], [1.5, 384.0], [1.6, 384.0], [1.7, 384.0], [1.8, 384.0], [1.9, 384.0], [2.0, 384.0], [2.1, 384.0], [2.2, 384.0], [2.3, 384.0], [2.4, 384.0], [2.5, 385.0], [2.6, 385.0], [2.7, 385.0], [2.8, 385.0], [2.9, 385.0], [3.0, 385.0], [3.1, 385.0], [3.2, 385.0], [3.3, 385.0], [3.4, 385.0], [3.5, 385.0], [3.6, 385.0], [3.7, 385.0], [3.8, 385.0], [3.9, 385.0], [4.0, 385.0], [4.1, 385.0], [4.2, 385.0], [4.3, 385.0], [4.4, 386.0], [4.5, 386.0], [4.6, 386.0], [4.7, 386.0], [4.8, 386.0], [4.9, 386.0], [5.0, 386.0], [5.1, 386.0], [5.2, 386.0], [5.3, 386.0], [5.4, 386.0], [5.5, 386.0], [5.6, 386.0], [5.7, 387.0], [5.8, 387.0], [5.9, 387.0], [6.0, 387.0], [6.1, 387.0], [6.2, 387.0], [6.3, 388.0], [6.4, 388.0], [6.5, 388.0], [6.6, 388.0], [6.7, 388.0], [6.8, 388.0], [6.9, 388.0], [7.0, 388.0], [7.1, 388.0], [7.2, 388.0], [7.3, 388.0], [7.4, 388.0], [7.5, 389.0], [7.6, 389.0], [7.7, 389.0], [7.8, 389.0], [7.9, 389.0], [8.0, 389.0], [8.1, 389.0], [8.2, 389.0], [8.3, 389.0], [8.4, 389.0], [8.5, 389.0], [8.6, 389.0], [8.7, 389.0], [8.8, 390.0], [8.9, 390.0], [9.0, 390.0], [9.1, 390.0], [9.2, 390.0], [9.3, 390.0], [9.4, 390.0], [9.5, 390.0], [9.6, 390.0], [9.7, 390.0], [9.8, 390.0], [9.9, 390.0], [10.0, 390.0], [10.1, 390.0], [10.2, 390.0], [10.3, 390.0], [10.4, 390.0], [10.5, 390.0], [10.6, 390.0], [10.7, 391.0], [10.8, 391.0], [10.9, 391.0], [11.0, 391.0], [11.1, 391.0], [11.2, 391.0], [11.3, 391.0], [11.4, 391.0], [11.5, 391.0], [11.6, 391.0], [11.7, 391.0], [11.8, 391.0], [11.9, 392.0], [12.0, 392.0], [12.1, 392.0], [12.2, 392.0], [12.3, 392.0], [12.4, 392.0], [12.5, 392.0], [12.6, 392.0], [12.7, 392.0], [12.8, 392.0], [12.9, 392.0], [13.0, 392.0], [13.1, 392.0], [13.2, 392.0], [13.3, 392.0], [13.4, 392.0], [13.5, 392.0], [13.6, 392.0], [13.7, 392.0], [13.8, 393.0], [13.9, 393.0], [14.0, 393.0], [14.1, 393.0], [14.2, 393.0], [14.3, 393.0], [14.4, 393.0], [14.5, 393.0], [14.6, 393.0], [14.7, 393.0], [14.8, 393.0], [14.9, 393.0], [15.0, 394.0], [15.1, 394.0], [15.2, 394.0], [15.3, 394.0], [15.4, 394.0], [15.5, 394.0], [15.6, 394.0], [15.7, 394.0], [15.8, 394.0], [15.9, 394.0], [16.0, 394.0], [16.1, 394.0], [16.2, 394.0], [16.3, 394.0], [16.4, 394.0], [16.5, 394.0], [16.6, 394.0], [16.7, 394.0], [16.8, 394.0], [16.9, 394.0], [17.0, 394.0], [17.1, 394.0], [17.2, 394.0], [17.3, 394.0], [17.4, 394.0], [17.5, 394.0], [17.6, 394.0], [17.7, 394.0], [17.8, 394.0], [17.9, 394.0], [18.0, 394.0], [18.1, 394.0], [18.2, 394.0], [18.3, 394.0], [18.4, 394.0], [18.5, 394.0], [18.6, 394.0], [18.7, 394.0], [18.8, 394.0], [18.9, 394.0], [19.0, 394.0], [19.1, 394.0], [19.2, 394.0], [19.3, 394.0], [19.4, 394.0], [19.5, 394.0], [19.6, 394.0], [19.7, 394.0], [19.8, 394.0], [19.9, 394.0], [20.0, 395.0], [20.1, 395.0], [20.2, 395.0], [20.3, 395.0], [20.4, 395.0], [20.5, 395.0], [20.6, 395.0], [20.7, 395.0], [20.8, 395.0], [20.9, 395.0], [21.0, 395.0], [21.1, 395.0], [21.2, 395.0], [21.3, 395.0], [21.4, 395.0], [21.5, 395.0], [21.6, 395.0], [21.7, 395.0], [21.8, 395.0], [21.9, 395.0], [22.0, 395.0], [22.1, 395.0], [22.2, 395.0], [22.3, 395.0], [22.4, 395.0], [22.5, 396.0], [22.6, 396.0], [22.7, 396.0], [22.8, 396.0], [22.9, 396.0], [23.0, 396.0], [23.1, 396.0], [23.2, 397.0], [23.3, 397.0], [23.4, 397.0], [23.5, 397.0], [23.6, 397.0], [23.7, 397.0], [23.8, 397.0], [23.9, 397.0], [24.0, 397.0], [24.1, 397.0], [24.2, 397.0], [24.3, 397.0], [24.4, 397.0], [24.5, 397.0], [24.6, 397.0], [24.7, 397.0], [24.8, 397.0], [24.9, 397.0], [25.0, 398.0], [25.1, 398.0], [25.2, 398.0], [25.3, 398.0], [25.4, 398.0], [25.5, 398.0], [25.6, 398.0], [25.7, 399.0], [25.8, 399.0], [25.9, 399.0], [26.0, 399.0], [26.1, 399.0], [26.2, 399.0], [26.3, 399.0], [26.4, 399.0], [26.5, 399.0], [26.6, 399.0], [26.7, 399.0], [26.8, 399.0], [26.9, 400.0], [27.0, 400.0], [27.1, 400.0], [27.2, 400.0], [27.3, 400.0], [27.4, 400.0], [27.5, 400.0], [27.6, 400.0], [27.7, 400.0], [27.8, 400.0], [27.9, 400.0], [28.0, 400.0], [28.1, 400.0], [28.2, 401.0], [28.3, 401.0], [28.4, 401.0], [28.5, 401.0], [28.6, 401.0], [28.7, 401.0], [28.8, 401.0], [28.9, 401.0], [29.0, 401.0], [29.1, 401.0], [29.2, 401.0], [29.3, 401.0], [29.4, 401.0], [29.5, 401.0], [29.6, 401.0], [29.7, 401.0], [29.8, 401.0], [29.9, 401.0], [30.0, 402.0], [30.1, 402.0], [30.2, 402.0], [30.3, 402.0], [30.4, 402.0], [30.5, 402.0], [30.6, 402.0], [30.7, 403.0], [30.8, 403.0], [30.9, 403.0], [31.0, 403.0], [31.1, 403.0], [31.2, 403.0], [31.3, 407.0], [31.4, 407.0], [31.5, 407.0], [31.6, 407.0], [31.7, 407.0], [31.8, 407.0], [31.9, 408.0], [32.0, 408.0], [32.1, 408.0], [32.2, 408.0], [32.3, 408.0], [32.4, 408.0], [32.5, 408.0], [32.6, 408.0], [32.7, 408.0], [32.8, 408.0], [32.9, 408.0], [33.0, 408.0], [33.1, 408.0], [33.2, 410.0], [33.3, 410.0], [33.4, 410.0], [33.5, 410.0], [33.6, 410.0], [33.7, 410.0], [33.8, 411.0], [33.9, 411.0], [34.0, 411.0], [34.1, 411.0], [34.2, 411.0], [34.3, 411.0], [34.4, 411.0], [34.5, 411.0], [34.6, 411.0], [34.7, 411.0], [34.8, 411.0], [34.9, 411.0], [35.0, 412.0], [35.1, 412.0], [35.2, 412.0], [35.3, 412.0], [35.4, 412.0], [35.5, 412.0], [35.6, 412.0], [35.7, 414.0], [35.8, 414.0], [35.9, 414.0], [36.0, 414.0], [36.1, 414.0], [36.2, 414.0], [36.3, 418.0], [36.4, 418.0], [36.5, 418.0], [36.6, 418.0], [36.7, 418.0], [36.8, 418.0], [36.9, 420.0], [37.0, 420.0], [37.1, 420.0], [37.2, 420.0], [37.3, 420.0], [37.4, 420.0], [37.5, 427.0], [37.6, 427.0], [37.7, 427.0], [37.8, 427.0], [37.9, 427.0], [38.0, 427.0], [38.1, 427.0], [38.2, 431.0], [38.3, 431.0], [38.4, 431.0], [38.5, 431.0], [38.6, 431.0], [38.7, 431.0], [38.8, 433.0], [38.9, 433.0], [39.0, 433.0], [39.1, 433.0], [39.2, 433.0], [39.3, 433.0], [39.4, 443.0], [39.5, 443.0], [39.6, 443.0], [39.7, 443.0], [39.8, 443.0], [39.9, 443.0], [40.0, 450.0], [40.1, 450.0], [40.2, 450.0], [40.3, 450.0], [40.4, 450.0], [40.5, 450.0], [40.6, 450.0], [40.7, 462.0], [40.8, 462.0], [40.9, 462.0], [41.0, 462.0], [41.1, 462.0], [41.2, 462.0], [41.3, 463.0], [41.4, 463.0], [41.5, 463.0], [41.6, 463.0], [41.7, 463.0], [41.8, 463.0], [41.9, 468.0], [42.0, 468.0], [42.1, 468.0], [42.2, 468.0], [42.3, 468.0], [42.4, 468.0], [42.5, 470.0], [42.6, 470.0], [42.7, 470.0], [42.8, 470.0], [42.9, 470.0], [43.0, 470.0], [43.1, 470.0], [43.2, 471.0], [43.3, 471.0], [43.4, 471.0], [43.5, 471.0], [43.6, 471.0], [43.7, 471.0], [43.8, 472.0], [43.9, 472.0], [44.0, 472.0], [44.1, 472.0], [44.2, 472.0], [44.3, 472.0], [44.4, 472.0], [44.5, 472.0], [44.6, 472.0], [44.7, 472.0], [44.8, 472.0], [44.9, 472.0], [45.0, 474.0], [45.1, 474.0], [45.2, 474.0], [45.3, 474.0], [45.4, 474.0], [45.5, 474.0], [45.6, 474.0], [45.7, 474.0], [45.8, 474.0], [45.9, 474.0], [46.0, 474.0], [46.1, 474.0], [46.2, 474.0], [46.3, 474.0], [46.4, 474.0], [46.5, 474.0], [46.6, 474.0], [46.7, 474.0], [46.8, 474.0], [46.9, 474.0], [47.0, 474.0], [47.1, 474.0], [47.2, 474.0], [47.3, 474.0], [47.4, 474.0], [47.5, 474.0], [47.6, 474.0], [47.7, 474.0], [47.8, 474.0], [47.9, 474.0], [48.0, 474.0], [48.1, 474.0], [48.2, 475.0], [48.3, 475.0], [48.4, 475.0], [48.5, 475.0], [48.6, 475.0], [48.7, 475.0], [48.8, 475.0], [48.9, 475.0], [49.0, 475.0], [49.1, 475.0], [49.2, 475.0], [49.3, 475.0], [49.4, 475.0], [49.5, 475.0], [49.6, 475.0], [49.7, 475.0], [49.8, 475.0], [49.9, 475.0], [50.0, 475.0], [50.1, 475.0], [50.2, 475.0], [50.3, 475.0], [50.4, 475.0], [50.5, 475.0], [50.6, 475.0], [50.7, 475.0], [50.8, 475.0], [50.9, 475.0], [51.0, 475.0], [51.1, 475.0], [51.2, 475.0], [51.3, 475.0], [51.4, 475.0], [51.5, 475.0], [51.6, 475.0], [51.7, 475.0], [51.8, 475.0], [51.9, 475.0], [52.0, 475.0], [52.1, 475.0], [52.2, 475.0], [52.3, 475.0], [52.4, 475.0], [52.5, 475.0], [52.6, 475.0], [52.7, 475.0], [52.8, 475.0], [52.9, 475.0], [53.0, 475.0], [53.1, 475.0], [53.2, 476.0], [53.3, 476.0], [53.4, 476.0], [53.5, 476.0], [53.6, 476.0], [53.7, 476.0], [53.8, 476.0], [53.9, 476.0], [54.0, 476.0], [54.1, 476.0], [54.2, 476.0], [54.3, 476.0], [54.4, 476.0], [54.5, 476.0], [54.6, 476.0], [54.7, 476.0], [54.8, 476.0], [54.9, 476.0], [55.0, 476.0], [55.1, 476.0], [55.2, 476.0], [55.3, 476.0], [55.4, 476.0], [55.5, 476.0], [55.6, 476.0], [55.7, 476.0], [55.8, 476.0], [55.9, 476.0], [56.0, 476.0], [56.1, 476.0], [56.2, 476.0], [56.3, 476.0], [56.4, 476.0], [56.5, 476.0], [56.6, 476.0], [56.7, 476.0], [56.8, 476.0], [56.9, 477.0], [57.0, 477.0], [57.1, 477.0], [57.2, 477.0], [57.3, 477.0], [57.4, 477.0], [57.5, 478.0], [57.6, 478.0], [57.7, 478.0], [57.8, 478.0], [57.9, 478.0], [58.0, 478.0], [58.1, 478.0], [58.2, 478.0], [58.3, 478.0], [58.4, 478.0], [58.5, 478.0], [58.6, 478.0], [58.7, 478.0], [58.8, 478.0], [58.9, 478.0], [59.0, 478.0], [59.1, 478.0], [59.2, 478.0], [59.3, 478.0], [59.4, 478.0], [59.5, 478.0], [59.6, 478.0], [59.7, 478.0], [59.8, 478.0], [59.9, 478.0], [60.0, 478.0], [60.1, 478.0], [60.2, 478.0], [60.3, 478.0], [60.4, 478.0], [60.5, 478.0], [60.6, 478.0], [60.7, 478.0], [60.8, 478.0], [60.9, 478.0], [61.0, 478.0], [61.1, 478.0], [61.2, 478.0], [61.3, 478.0], [61.4, 478.0], [61.5, 478.0], [61.6, 478.0], [61.7, 478.0], [61.8, 478.0], [61.9, 479.0], [62.0, 479.0], [62.1, 479.0], [62.2, 479.0], [62.3, 479.0], [62.4, 479.0], [62.5, 479.0], [62.6, 479.0], [62.7, 479.0], [62.8, 479.0], [62.9, 479.0], [63.0, 479.0], [63.1, 479.0], [63.2, 479.0], [63.3, 479.0], [63.4, 479.0], [63.5, 479.0], [63.6, 479.0], [63.7, 479.0], [63.8, 479.0], [63.9, 479.0], [64.0, 479.0], [64.1, 479.0], [64.2, 479.0], [64.3, 479.0], [64.4, 479.0], [64.5, 479.0], [64.6, 479.0], [64.7, 479.0], [64.8, 479.0], [64.9, 479.0], [65.0, 480.0], [65.1, 480.0], [65.2, 480.0], [65.3, 480.0], [65.4, 480.0], [65.5, 480.0], [65.6, 480.0], [65.7, 480.0], [65.8, 480.0], [65.9, 480.0], [66.0, 480.0], [66.1, 480.0], [66.2, 480.0], [66.3, 481.0], [66.4, 481.0], [66.5, 481.0], [66.6, 481.0], [66.7, 481.0], [66.8, 481.0], [66.9, 481.0], [67.0, 481.0], [67.1, 481.0], [67.2, 481.0], [67.3, 481.0], [67.4, 481.0], [67.5, 481.0], [67.6, 481.0], [67.7, 481.0], [67.8, 481.0], [67.9, 481.0], [68.0, 481.0], [68.1, 481.0], [68.2, 481.0], [68.3, 481.0], [68.4, 481.0], [68.5, 481.0], [68.6, 481.0], [68.7, 481.0], [68.8, 481.0], [68.9, 481.0], [69.0, 481.0], [69.1, 481.0], [69.2, 481.0], [69.3, 481.0], [69.4, 482.0], [69.5, 482.0], [69.6, 482.0], [69.7, 482.0], [69.8, 482.0], [69.9, 482.0], [70.0, 482.0], [70.1, 482.0], [70.2, 482.0], [70.3, 482.0], [70.4, 482.0], [70.5, 482.0], [70.6, 482.0], [70.7, 484.0], [70.8, 484.0], [70.9, 484.0], [71.0, 484.0], [71.1, 484.0], [71.2, 484.0], [71.3, 484.0], [71.4, 484.0], [71.5, 484.0], [71.6, 484.0], [71.7, 484.0], [71.8, 484.0], [71.9, 485.0], [72.0, 485.0], [72.1, 485.0], [72.2, 485.0], [72.3, 485.0], [72.4, 485.0], [72.5, 485.0], [72.6, 485.0], [72.7, 485.0], [72.8, 485.0], [72.9, 485.0], [73.0, 485.0], [73.1, 485.0], [73.2, 487.0], [73.3, 487.0], [73.4, 487.0], [73.5, 487.0], [73.6, 487.0], [73.7, 487.0], [73.8, 489.0], [73.9, 489.0], [74.0, 489.0], [74.1, 489.0], [74.2, 489.0], [74.3, 489.0], [74.4, 492.0], [74.5, 492.0], [74.6, 492.0], [74.7, 492.0], [74.8, 492.0], [74.9, 492.0], [75.0, 493.0], [75.1, 493.0], [75.2, 493.0], [75.3, 493.0], [75.4, 493.0], [75.5, 493.0], [75.6, 493.0], [75.7, 493.0], [75.8, 493.0], [75.9, 493.0], [76.0, 493.0], [76.1, 493.0], [76.2, 493.0], [76.3, 494.0], [76.4, 494.0], [76.5, 494.0], [76.6, 494.0], [76.7, 494.0], [76.8, 494.0], [76.9, 496.0], [77.0, 496.0], [77.1, 496.0], [77.2, 496.0], [77.3, 496.0], [77.4, 496.0], [77.5, 498.0], [77.6, 498.0], [77.7, 498.0], [77.8, 498.0], [77.9, 498.0], [78.0, 498.0], [78.1, 498.0], [78.2, 502.0], [78.3, 502.0], [78.4, 502.0], [78.5, 502.0], [78.6, 502.0], [78.7, 502.0], [78.8, 509.0], [78.9, 509.0], [79.0, 509.0], [79.1, 509.0], [79.2, 509.0], [79.3, 509.0], [79.4, 510.0], [79.5, 510.0], [79.6, 510.0], [79.7, 510.0], [79.8, 510.0], [79.9, 510.0], [80.0, 514.0], [80.1, 514.0], [80.2, 514.0], [80.3, 514.0], [80.4, 514.0], [80.5, 514.0], [80.6, 514.0], [80.7, 516.0], [80.8, 516.0], [80.9, 516.0], [81.0, 516.0], [81.1, 516.0], [81.2, 516.0], [81.3, 520.0], [81.4, 520.0], [81.5, 520.0], [81.6, 520.0], [81.7, 520.0], [81.8, 520.0], [81.9, 523.0], [82.0, 523.0], [82.1, 523.0], [82.2, 523.0], [82.3, 523.0], [82.4, 523.0], [82.5, 531.0], [82.6, 531.0], [82.7, 531.0], [82.8, 531.0], [82.9, 531.0], [83.0, 531.0], [83.1, 531.0], [83.2, 535.0], [83.3, 535.0], [83.4, 535.0], [83.5, 535.0], [83.6, 535.0], [83.7, 535.0], [83.8, 538.0], [83.9, 538.0], [84.0, 538.0], [84.1, 538.0], [84.2, 538.0], [84.3, 538.0], [84.4, 538.0], [84.5, 538.0], [84.6, 538.0], [84.7, 538.0], [84.8, 538.0], [84.9, 538.0], [85.0, 557.0], [85.1, 557.0], [85.2, 557.0], [85.3, 557.0], [85.4, 557.0], [85.5, 557.0], [85.6, 557.0], [85.7, 561.0], [85.8, 561.0], [85.9, 561.0], [86.0, 561.0], [86.1, 561.0], [86.2, 561.0], [86.3, 564.0], [86.4, 564.0], [86.5, 564.0], [86.6, 564.0], [86.7, 564.0], [86.8, 564.0], [86.9, 579.0], [87.0, 579.0], [87.1, 579.0], [87.2, 579.0], [87.3, 579.0], [87.4, 579.0], [87.5, 596.0], [87.6, 596.0], [87.7, 596.0], [87.8, 596.0], [87.9, 596.0], [88.0, 596.0], [88.1, 596.0], [88.2, 598.0], [88.3, 598.0], [88.4, 598.0], [88.5, 598.0], [88.6, 598.0], [88.7, 598.0], [88.8, 599.0], [88.9, 599.0], [89.0, 599.0], [89.1, 599.0], [89.2, 599.0], [89.3, 599.0], [89.4, 600.0], [89.5, 600.0], [89.6, 600.0], [89.7, 600.0], [89.8, 600.0], [89.9, 600.0], [90.0, 602.0], [90.1, 602.0], [90.2, 602.0], [90.3, 602.0], [90.4, 602.0], [90.5, 602.0], [90.6, 602.0], [90.7, 605.0], [90.8, 605.0], [90.9, 605.0], [91.0, 605.0], [91.1, 605.0], [91.2, 605.0], [91.3, 609.0], [91.4, 609.0], [91.5, 609.0], [91.6, 609.0], [91.7, 609.0], [91.8, 609.0], [91.9, 617.0], [92.0, 617.0], [92.1, 617.0], [92.2, 617.0], [92.3, 617.0], [92.4, 617.0], [92.5, 620.0], [92.6, 620.0], [92.7, 620.0], [92.8, 620.0], [92.9, 620.0], [93.0, 620.0], [93.1, 620.0], [93.2, 623.0], [93.3, 623.0], [93.4, 623.0], [93.5, 623.0], [93.6, 623.0], [93.7, 623.0], [93.8, 632.0], [93.9, 632.0], [94.0, 632.0], [94.1, 632.0], [94.2, 632.0], [94.3, 632.0], [94.4, 633.0], [94.5, 633.0], [94.6, 633.0], [94.7, 633.0], [94.8, 633.0], [94.9, 633.0], [95.0, 680.0], [95.1, 680.0], [95.2, 680.0], [95.3, 680.0], [95.4, 680.0], [95.5, 680.0], [95.6, 680.0], [95.7, 683.0], [95.8, 683.0], [95.9, 683.0], [96.0, 683.0], [96.1, 683.0], [96.2, 683.0], [96.3, 684.0], [96.4, 684.0], [96.5, 684.0], [96.6, 684.0], [96.7, 684.0], [96.8, 684.0], [96.9, 686.0], [97.0, 686.0], [97.1, 686.0], [97.2, 686.0], [97.3, 686.0], [97.4, 686.0], [97.5, 690.0], [97.6, 690.0], [97.7, 690.0], [97.8, 690.0], [97.9, 690.0], [98.0, 690.0], [98.1, 690.0], [98.2, 692.0], [98.3, 692.0], [98.4, 692.0], [98.5, 692.0], [98.6, 692.0], [98.7, 692.0], [98.8, 740.0], [98.9, 740.0], [99.0, 740.0], [99.1, 740.0], [99.2, 740.0], [99.3, 740.0], [99.4, 742.0], [99.5, 742.0], [99.6, 742.0], [99.7, 742.0], [99.8, 742.0], [99.9, 742.0]], "isOverall": false, "label": "Delete Request", "isController": false}, {"data": [[0.0, 12.0], [0.1, 12.0], [0.2, 12.0], [0.3, 12.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 12.0], [0.8, 12.0], [0.9, 12.0], [1.0, 12.0], [1.1, 12.0], [1.2, 12.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 13.0], [2.0, 13.0], [2.1, 13.0], [2.2, 13.0], [2.3, 13.0], [2.4, 13.0], [2.5, 13.0], [2.6, 13.0], [2.7, 13.0], [2.8, 13.0], [2.9, 13.0], [3.0, 13.0], [3.1, 13.0], [3.2, 13.0], [3.3, 13.0], [3.4, 13.0], [3.5, 13.0], [3.6, 13.0], [3.7, 13.0], [3.8, 13.0], [3.9, 13.0], [4.0, 13.0], [4.1, 13.0], [4.2, 13.0], [4.3, 13.0], [4.4, 13.0], [4.5, 13.0], [4.6, 13.0], [4.7, 13.0], [4.8, 13.0], [4.9, 13.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 13.0], [5.7, 14.0], [5.8, 14.0], [5.9, 14.0], [6.0, 14.0], [6.1, 14.0], [6.2, 14.0], [6.3, 14.0], [6.4, 14.0], [6.5, 14.0], [6.6, 14.0], [6.7, 14.0], [6.8, 14.0], [6.9, 14.0], [7.0, 14.0], [7.1, 14.0], [7.2, 14.0], [7.3, 14.0], [7.4, 14.0], [7.5, 14.0], [7.6, 14.0], [7.7, 14.0], [7.8, 14.0], [7.9, 14.0], [8.0, 14.0], [8.1, 14.0], [8.2, 14.0], [8.3, 14.0], [8.4, 14.0], [8.5, 14.0], [8.6, 14.0], [8.7, 14.0], [8.8, 14.0], [8.9, 14.0], [9.0, 14.0], [9.1, 14.0], [9.2, 14.0], [9.3, 14.0], [9.4, 14.0], [9.5, 14.0], [9.6, 14.0], [9.7, 14.0], [9.8, 14.0], [9.9, 14.0], [10.0, 14.0], [10.1, 14.0], [10.2, 14.0], [10.3, 14.0], [10.4, 14.0], [10.5, 14.0], [10.6, 14.0], [10.7, 14.0], [10.8, 14.0], [10.9, 14.0], [11.0, 14.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 14.0], [14.0, 14.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 14.0], [14.9, 14.0], [15.0, 14.0], [15.1, 14.0], [15.2, 14.0], [15.3, 14.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 14.0], [16.2, 14.0], [16.3, 14.0], [16.4, 14.0], [16.5, 14.0], [16.6, 14.0], [16.7, 14.0], [16.8, 14.0], [16.9, 14.0], [17.0, 14.0], [17.1, 14.0], [17.2, 14.0], [17.3, 14.0], [17.4, 14.0], [17.5, 15.0], [17.6, 15.0], [17.7, 15.0], [17.8, 15.0], [17.9, 15.0], [18.0, 15.0], [18.1, 15.0], [18.2, 15.0], [18.3, 15.0], [18.4, 15.0], [18.5, 15.0], [18.6, 15.0], [18.7, 15.0], [18.8, 15.0], [18.9, 15.0], [19.0, 15.0], [19.1, 15.0], [19.2, 15.0], [19.3, 15.0], [19.4, 15.0], [19.5, 15.0], [19.6, 15.0], [19.7, 15.0], [19.8, 15.0], [19.9, 15.0], [20.0, 15.0], [20.1, 15.0], [20.2, 15.0], [20.3, 15.0], [20.4, 15.0], [20.5, 15.0], [20.6, 15.0], [20.7, 15.0], [20.8, 15.0], [20.9, 15.0], [21.0, 15.0], [21.1, 15.0], [21.2, 15.0], [21.3, 15.0], [21.4, 15.0], [21.5, 15.0], [21.6, 15.0], [21.7, 15.0], [21.8, 15.0], [21.9, 15.0], [22.0, 15.0], [22.1, 15.0], [22.2, 15.0], [22.3, 15.0], [22.4, 15.0], [22.5, 15.0], [22.6, 15.0], [22.7, 15.0], [22.8, 15.0], [22.9, 15.0], [23.0, 15.0], [23.1, 15.0], [23.2, 15.0], [23.3, 15.0], [23.4, 15.0], [23.5, 15.0], [23.6, 15.0], [23.7, 15.0], [23.8, 15.0], [23.9, 15.0], [24.0, 15.0], [24.1, 15.0], [24.2, 15.0], [24.3, 15.0], [24.4, 15.0], [24.5, 15.0], [24.6, 15.0], [24.7, 15.0], [24.8, 15.0], [24.9, 15.0], [25.0, 15.0], [25.1, 15.0], [25.2, 15.0], [25.3, 15.0], [25.4, 15.0], [25.5, 15.0], [25.6, 15.0], [25.7, 15.0], [25.8, 15.0], [25.9, 15.0], [26.0, 15.0], [26.1, 15.0], [26.2, 15.0], [26.3, 15.0], [26.4, 15.0], [26.5, 15.0], [26.6, 15.0], [26.7, 15.0], [26.8, 15.0], [26.9, 16.0], [27.0, 16.0], [27.1, 16.0], [27.2, 16.0], [27.3, 16.0], [27.4, 16.0], [27.5, 16.0], [27.6, 16.0], [27.7, 16.0], [27.8, 16.0], [27.9, 16.0], [28.0, 16.0], [28.1, 16.0], [28.2, 16.0], [28.3, 16.0], [28.4, 16.0], [28.5, 16.0], [28.6, 16.0], [28.7, 16.0], [28.8, 16.0], [28.9, 16.0], [29.0, 16.0], [29.1, 16.0], [29.2, 16.0], [29.3, 16.0], [29.4, 16.0], [29.5, 16.0], [29.6, 16.0], [29.7, 16.0], [29.8, 16.0], [29.9, 16.0], [30.0, 16.0], [30.1, 16.0], [30.2, 16.0], [30.3, 16.0], [30.4, 16.0], [30.5, 16.0], [30.6, 16.0], [30.7, 16.0], [30.8, 16.0], [30.9, 16.0], [31.0, 16.0], [31.1, 16.0], [31.2, 16.0], [31.3, 16.0], [31.4, 16.0], [31.5, 16.0], [31.6, 16.0], [31.7, 16.0], [31.8, 16.0], [31.9, 17.0], [32.0, 17.0], [32.1, 17.0], [32.2, 17.0], [32.3, 17.0], [32.4, 17.0], [32.5, 17.0], [32.6, 17.0], [32.7, 17.0], [32.8, 17.0], [32.9, 17.0], [33.0, 17.0], [33.1, 17.0], [33.2, 17.0], [33.3, 17.0], [33.4, 17.0], [33.5, 17.0], [33.6, 17.0], [33.7, 17.0], [33.8, 17.0], [33.9, 17.0], [34.0, 17.0], [34.1, 17.0], [34.2, 17.0], [34.3, 17.0], [34.4, 17.0], [34.5, 17.0], [34.6, 17.0], [34.7, 17.0], [34.8, 17.0], [34.9, 17.0], [35.0, 18.0], [35.1, 18.0], [35.2, 18.0], [35.3, 18.0], [35.4, 18.0], [35.5, 18.0], [35.6, 18.0], [35.7, 18.0], [35.8, 18.0], [35.9, 18.0], [36.0, 18.0], [36.1, 18.0], [36.2, 18.0], [36.3, 18.0], [36.4, 18.0], [36.5, 18.0], [36.6, 18.0], [36.7, 18.0], [36.8, 18.0], [36.9, 18.0], [37.0, 18.0], [37.1, 18.0], [37.2, 18.0], [37.3, 18.0], [37.4, 18.0], [37.5, 18.0], [37.6, 18.0], [37.7, 18.0], [37.8, 18.0], [37.9, 18.0], [38.0, 18.0], [38.1, 18.0], [38.2, 18.0], [38.3, 18.0], [38.4, 18.0], [38.5, 18.0], [38.6, 18.0], [38.7, 18.0], [38.8, 18.0], [38.9, 18.0], [39.0, 18.0], [39.1, 18.0], [39.2, 18.0], [39.3, 18.0], [39.4, 18.0], [39.5, 18.0], [39.6, 18.0], [39.7, 18.0], [39.8, 18.0], [39.9, 18.0], [40.0, 19.0], [40.1, 19.0], [40.2, 19.0], [40.3, 19.0], [40.4, 19.0], [40.5, 19.0], [40.6, 19.0], [40.7, 19.0], [40.8, 19.0], [40.9, 19.0], [41.0, 19.0], [41.1, 19.0], [41.2, 19.0], [41.3, 20.0], [41.4, 20.0], [41.5, 20.0], [41.6, 20.0], [41.7, 20.0], [41.8, 20.0], [41.9, 20.0], [42.0, 20.0], [42.1, 20.0], [42.2, 20.0], [42.3, 20.0], [42.4, 20.0], [42.5, 20.0], [42.6, 20.0], [42.7, 20.0], [42.8, 20.0], [42.9, 20.0], [43.0, 20.0], [43.1, 20.0], [43.2, 20.0], [43.3, 20.0], [43.4, 20.0], [43.5, 20.0], [43.6, 20.0], [43.7, 20.0], [43.8, 21.0], [43.9, 21.0], [44.0, 21.0], [44.1, 21.0], [44.2, 21.0], [44.3, 21.0], [44.4, 21.0], [44.5, 21.0], [44.6, 21.0], [44.7, 21.0], [44.8, 21.0], [44.9, 21.0], [45.0, 21.0], [45.1, 21.0], [45.2, 21.0], [45.3, 21.0], [45.4, 21.0], [45.5, 21.0], [45.6, 21.0], [45.7, 21.0], [45.8, 21.0], [45.9, 21.0], [46.0, 21.0], [46.1, 21.0], [46.2, 21.0], [46.3, 22.0], [46.4, 22.0], [46.5, 22.0], [46.6, 22.0], [46.7, 22.0], [46.8, 22.0], [46.9, 22.0], [47.0, 22.0], [47.1, 22.0], [47.2, 22.0], [47.3, 22.0], [47.4, 22.0], [47.5, 22.0], [47.6, 22.0], [47.7, 22.0], [47.8, 22.0], [47.9, 22.0], [48.0, 22.0], [48.1, 22.0], [48.2, 22.0], [48.3, 22.0], [48.4, 22.0], [48.5, 22.0], [48.6, 22.0], [48.7, 22.0], [48.8, 22.0], [48.9, 22.0], [49.0, 22.0], [49.1, 22.0], [49.2, 22.0], [49.3, 22.0], [49.4, 22.0], [49.5, 22.0], [49.6, 22.0], [49.7, 22.0], [49.8, 22.0], [49.9, 22.0], [50.0, 22.0], [50.1, 22.0], [50.2, 22.0], [50.3, 22.0], [50.4, 22.0], [50.5, 22.0], [50.6, 22.0], [50.7, 22.0], [50.8, 22.0], [50.9, 22.0], [51.0, 22.0], [51.1, 22.0], [51.2, 22.0], [51.3, 23.0], [51.4, 23.0], [51.5, 23.0], [51.6, 23.0], [51.7, 23.0], [51.8, 23.0], [51.9, 23.0], [52.0, 23.0], [52.1, 23.0], [52.2, 23.0], [52.3, 23.0], [52.4, 23.0], [52.5, 23.0], [52.6, 23.0], [52.7, 23.0], [52.8, 23.0], [52.9, 23.0], [53.0, 23.0], [53.1, 23.0], [53.2, 23.0], [53.3, 23.0], [53.4, 23.0], [53.5, 23.0], [53.6, 23.0], [53.7, 23.0], [53.8, 23.0], [53.9, 23.0], [54.0, 23.0], [54.1, 23.0], [54.2, 23.0], [54.3, 23.0], [54.4, 23.0], [54.5, 23.0], [54.6, 23.0], [54.7, 23.0], [54.8, 23.0], [54.9, 23.0], [55.0, 23.0], [55.1, 23.0], [55.2, 23.0], [55.3, 23.0], [55.4, 23.0], [55.5, 23.0], [55.6, 23.0], [55.7, 23.0], [55.8, 23.0], [55.9, 23.0], [56.0, 23.0], [56.1, 23.0], [56.2, 23.0], [56.3, 24.0], [56.4, 24.0], [56.5, 24.0], [56.6, 24.0], [56.7, 24.0], [56.8, 24.0], [56.9, 24.0], [57.0, 24.0], [57.1, 24.0], [57.2, 24.0], [57.3, 24.0], [57.4, 24.0], [57.5, 25.0], [57.6, 25.0], [57.7, 25.0], [57.8, 25.0], [57.9, 25.0], [58.0, 25.0], [58.1, 25.0], [58.2, 26.0], [58.3, 26.0], [58.4, 26.0], [58.5, 26.0], [58.6, 26.0], [58.7, 26.0], [58.8, 27.0], [58.9, 27.0], [59.0, 27.0], [59.1, 27.0], [59.2, 27.0], [59.3, 27.0], [59.4, 27.0], [59.5, 27.0], [59.6, 27.0], [59.7, 27.0], [59.8, 27.0], [59.9, 27.0], [60.0, 28.0], [60.1, 28.0], [60.2, 28.0], [60.3, 28.0], [60.4, 28.0], [60.5, 28.0], [60.6, 28.0], [60.7, 28.0], [60.8, 28.0], [60.9, 28.0], [61.0, 28.0], [61.1, 28.0], [61.2, 28.0], [61.3, 28.0], [61.4, 28.0], [61.5, 28.0], [61.6, 28.0], [61.7, 28.0], [61.8, 28.0], [61.9, 28.0], [62.0, 28.0], [62.1, 28.0], [62.2, 28.0], [62.3, 28.0], [62.4, 28.0], [62.5, 28.0], [62.6, 28.0], [62.7, 28.0], [62.8, 28.0], [62.9, 28.0], [63.0, 28.0], [63.1, 28.0], [63.2, 28.0], [63.3, 28.0], [63.4, 28.0], [63.5, 28.0], [63.6, 28.0], [63.7, 28.0], [63.8, 29.0], [63.9, 29.0], [64.0, 29.0], [64.1, 29.0], [64.2, 29.0], [64.3, 29.0], [64.4, 29.0], [64.5, 29.0], [64.6, 29.0], [64.7, 29.0], [64.8, 29.0], [64.9, 29.0], [65.0, 29.0], [65.1, 29.0], [65.2, 29.0], [65.3, 29.0], [65.4, 29.0], [65.5, 29.0], [65.6, 29.0], [65.7, 30.0], [65.8, 30.0], [65.9, 30.0], [66.0, 30.0], [66.1, 30.0], [66.2, 30.0], [66.3, 31.0], [66.4, 31.0], [66.5, 31.0], [66.6, 31.0], [66.7, 31.0], [66.8, 31.0], [66.9, 31.0], [67.0, 31.0], [67.1, 31.0], [67.2, 31.0], [67.3, 31.0], [67.4, 31.0], [67.5, 32.0], [67.6, 32.0], [67.7, 32.0], [67.8, 32.0], [67.9, 32.0], [68.0, 32.0], [68.1, 32.0], [68.2, 33.0], [68.3, 33.0], [68.4, 33.0], [68.5, 33.0], [68.6, 33.0], [68.7, 33.0], [68.8, 33.0], [68.9, 33.0], [69.0, 33.0], [69.1, 33.0], [69.2, 33.0], [69.3, 33.0], [69.4, 34.0], [69.5, 34.0], [69.6, 34.0], [69.7, 34.0], [69.8, 34.0], [69.9, 34.0], [70.0, 34.0], [70.1, 34.0], [70.2, 34.0], [70.3, 34.0], [70.4, 34.0], [70.5, 34.0], [70.6, 34.0], [70.7, 34.0], [70.8, 34.0], [70.9, 34.0], [71.0, 34.0], [71.1, 34.0], [71.2, 34.0], [71.3, 35.0], [71.4, 35.0], [71.5, 35.0], [71.6, 35.0], [71.7, 35.0], [71.8, 35.0], [71.9, 36.0], [72.0, 36.0], [72.1, 36.0], [72.2, 36.0], [72.3, 36.0], [72.4, 36.0], [72.5, 37.0], [72.6, 37.0], [72.7, 37.0], [72.8, 37.0], [72.9, 37.0], [73.0, 37.0], [73.1, 37.0], [73.2, 39.0], [73.3, 39.0], [73.4, 39.0], [73.5, 39.0], [73.6, 39.0], [73.7, 39.0], [73.8, 40.0], [73.9, 40.0], [74.0, 40.0], [74.1, 40.0], [74.2, 40.0], [74.3, 40.0], [74.4, 45.0], [74.5, 45.0], [74.6, 45.0], [74.7, 45.0], [74.8, 45.0], [74.9, 45.0], [75.0, 51.0], [75.1, 51.0], [75.2, 51.0], [75.3, 51.0], [75.4, 51.0], [75.5, 51.0], [75.6, 51.0], [75.7, 51.0], [75.8, 51.0], [75.9, 51.0], [76.0, 51.0], [76.1, 51.0], [76.2, 51.0], [76.3, 52.0], [76.4, 52.0], [76.5, 52.0], [76.6, 52.0], [76.7, 52.0], [76.8, 52.0], [76.9, 60.0], [77.0, 60.0], [77.1, 60.0], [77.2, 60.0], [77.3, 60.0], [77.4, 60.0], [77.5, 67.0], [77.6, 67.0], [77.7, 67.0], [77.8, 67.0], [77.9, 67.0], [78.0, 67.0], [78.1, 67.0], [78.2, 79.0], [78.3, 79.0], [78.4, 79.0], [78.5, 79.0], [78.6, 79.0], [78.7, 79.0], [78.8, 99.0], [78.9, 99.0], [79.0, 99.0], [79.1, 99.0], [79.2, 99.0], [79.3, 99.0], [79.4, 158.0], [79.5, 158.0], [79.6, 158.0], [79.7, 158.0], [79.8, 158.0], [79.9, 158.0], [80.0, 163.0], [80.1, 163.0], [80.2, 163.0], [80.3, 163.0], [80.4, 163.0], [80.5, 163.0], [80.6, 163.0], [80.7, 168.0], [80.8, 168.0], [80.9, 168.0], [81.0, 168.0], [81.1, 168.0], [81.2, 168.0], [81.3, 174.0], [81.4, 174.0], [81.5, 174.0], [81.6, 174.0], [81.7, 174.0], [81.8, 174.0], [81.9, 224.0], [82.0, 224.0], [82.1, 224.0], [82.2, 224.0], [82.3, 224.0], [82.4, 224.0], [82.5, 229.0], [82.6, 229.0], [82.7, 229.0], [82.8, 229.0], [82.9, 229.0], [83.0, 229.0], [83.1, 229.0], [83.2, 234.0], [83.3, 234.0], [83.4, 234.0], [83.5, 234.0], [83.6, 234.0], [83.7, 234.0], [83.8, 236.0], [83.9, 236.0], [84.0, 236.0], [84.1, 236.0], [84.2, 236.0], [84.3, 236.0], [84.4, 237.0], [84.5, 237.0], [84.6, 237.0], [84.7, 237.0], [84.8, 237.0], [84.9, 237.0], [85.0, 238.0], [85.1, 238.0], [85.2, 238.0], [85.3, 238.0], [85.4, 238.0], [85.5, 238.0], [85.6, 238.0], [85.7, 239.0], [85.8, 239.0], [85.9, 239.0], [86.0, 239.0], [86.1, 239.0], [86.2, 239.0], [86.3, 256.0], [86.4, 256.0], [86.5, 256.0], [86.6, 256.0], [86.7, 256.0], [86.8, 256.0], [86.9, 261.0], [87.0, 261.0], [87.1, 261.0], [87.2, 261.0], [87.3, 261.0], [87.4, 261.0], [87.5, 271.0], [87.6, 271.0], [87.7, 271.0], [87.8, 271.0], [87.9, 271.0], [88.0, 271.0], [88.1, 271.0], [88.2, 284.0], [88.3, 284.0], [88.4, 284.0], [88.5, 284.0], [88.6, 284.0], [88.7, 284.0], [88.8, 317.0], [88.9, 317.0], [89.0, 317.0], [89.1, 317.0], [89.2, 317.0], [89.3, 317.0], [89.4, 325.0], [89.5, 325.0], [89.6, 325.0], [89.7, 325.0], [89.8, 325.0], [89.9, 325.0], [90.0, 330.0], [90.1, 330.0], [90.2, 330.0], [90.3, 330.0], [90.4, 330.0], [90.5, 330.0], [90.6, 330.0], [90.7, 366.0], [90.8, 366.0], [90.9, 366.0], [91.0, 366.0], [91.1, 366.0], [91.2, 366.0], [91.3, 397.0], [91.4, 397.0], [91.5, 397.0], [91.6, 397.0], [91.7, 397.0], [91.8, 397.0], [91.9, 418.0], [92.0, 418.0], [92.1, 418.0], [92.2, 418.0], [92.3, 418.0], [92.4, 418.0], [92.5, 437.0], [92.6, 437.0], [92.7, 437.0], [92.8, 437.0], [92.9, 437.0], [93.0, 437.0], [93.1, 437.0], [93.2, 533.0], [93.3, 533.0], [93.4, 533.0], [93.5, 533.0], [93.6, 533.0], [93.7, 533.0], [93.8, 576.0], [93.9, 576.0], [94.0, 576.0], [94.1, 576.0], [94.2, 576.0], [94.3, 576.0], [94.4, 624.0], [94.5, 624.0], [94.6, 624.0], [94.7, 624.0], [94.8, 624.0], [94.9, 624.0], [95.0, 674.0], [95.1, 674.0], [95.2, 674.0], [95.3, 674.0], [95.4, 674.0], [95.5, 674.0], [95.6, 674.0], [95.7, 711.0], [95.8, 711.0], [95.9, 711.0], [96.0, 711.0], [96.1, 711.0], [96.2, 711.0], [96.3, 781.0], [96.4, 781.0], [96.5, 781.0], [96.6, 781.0], [96.7, 781.0], [96.8, 781.0], [96.9, 792.0], [97.0, 792.0], [97.1, 792.0], [97.2, 792.0], [97.3, 792.0], [97.4, 792.0], [97.5, 834.0], [97.6, 834.0], [97.7, 834.0], [97.8, 834.0], [97.9, 834.0], [98.0, 834.0], [98.1, 834.0], [98.2, 1181.0], [98.3, 1181.0], [98.4, 1181.0], [98.5, 1181.0], [98.6, 1181.0], [98.7, 1181.0], [98.8, 1610.0], [98.9, 1610.0], [99.0, 1610.0], [99.1, 1610.0], [99.2, 1610.0], [99.3, 1610.0], [99.4, 1779.0], [99.5, 1779.0], [99.6, 1779.0], [99.7, 1779.0], [99.8, 1779.0], [99.9, 1779.0]], "isOverall": false, "label": "Get Request", "isController": false}, {"data": [[0.0, 2266.0], [0.1, 2266.0], [0.2, 2266.0], [0.3, 2266.0], [0.4, 2266.0], [0.5, 2266.0], [0.6, 2266.0], [0.7, 2321.0], [0.8, 2321.0], [0.9, 2321.0], [1.0, 2321.0], [1.1, 2321.0], [1.2, 2321.0], [1.3, 2377.0], [1.4, 2377.0], [1.5, 2377.0], [1.6, 2377.0], [1.7, 2377.0], [1.8, 2377.0], [1.9, 3130.0], [2.0, 3130.0], [2.1, 3130.0], [2.2, 3130.0], [2.3, 3130.0], [2.4, 3130.0], [2.5, 3137.0], [2.6, 3137.0], [2.7, 3137.0], [2.8, 3137.0], [2.9, 3137.0], [3.0, 3137.0], [3.1, 3137.0], [3.2, 3302.0], [3.3, 3302.0], [3.4, 3302.0], [3.5, 3302.0], [3.6, 3302.0], [3.7, 3302.0], [3.8, 3312.0], [3.9, 3312.0], [4.0, 3312.0], [4.1, 3312.0], [4.2, 3312.0], [4.3, 3312.0], [4.4, 3554.0], [4.5, 3554.0], [4.6, 3554.0], [4.7, 3554.0], [4.8, 3554.0], [4.9, 3554.0], [5.0, 3730.0], [5.1, 3730.0], [5.2, 3730.0], [5.3, 3730.0], [5.4, 3730.0], [5.5, 3730.0], [5.6, 3730.0], [5.7, 3845.0], [5.8, 3845.0], [5.9, 3845.0], [6.0, 3845.0], [6.1, 3845.0], [6.2, 3845.0], [6.3, 4433.0], [6.4, 4433.0], [6.5, 4433.0], [6.6, 4433.0], [6.7, 4433.0], [6.8, 4433.0], [6.9, 4682.0], [7.0, 4682.0], [7.1, 4682.0], [7.2, 4682.0], [7.3, 4682.0], [7.4, 4682.0], [7.5, 5001.0], [7.6, 5001.0], [7.7, 5001.0], [7.8, 5001.0], [7.9, 5001.0], [8.0, 5001.0], [8.1, 5001.0], [8.2, 5012.0], [8.3, 5012.0], [8.4, 5012.0], [8.5, 5012.0], [8.6, 5012.0], [8.7, 5012.0], [8.8, 5198.0], [8.9, 5198.0], [9.0, 5198.0], [9.1, 5198.0], [9.2, 5198.0], [9.3, 5198.0], [9.4, 5202.0], [9.5, 5202.0], [9.6, 5202.0], [9.7, 5202.0], [9.8, 5202.0], [9.9, 5202.0], [10.0, 5291.0], [10.1, 5291.0], [10.2, 5291.0], [10.3, 5291.0], [10.4, 5291.0], [10.5, 5291.0], [10.6, 5291.0], [10.7, 5513.0], [10.8, 5513.0], [10.9, 5513.0], [11.0, 5513.0], [11.1, 5513.0], [11.2, 5513.0], [11.3, 5581.0], [11.4, 5581.0], [11.5, 5581.0], [11.6, 5581.0], [11.7, 5581.0], [11.8, 5581.0], [11.9, 5588.0], [12.0, 5588.0], [12.1, 5588.0], [12.2, 5588.0], [12.3, 5588.0], [12.4, 5588.0], [12.5, 5679.0], [12.6, 5679.0], [12.7, 5679.0], [12.8, 5679.0], [12.9, 5679.0], [13.0, 5679.0], [13.1, 5679.0], [13.2, 5800.0], [13.3, 5800.0], [13.4, 5800.0], [13.5, 5800.0], [13.6, 5800.0], [13.7, 5800.0], [13.8, 5924.0], [13.9, 5924.0], [14.0, 5924.0], [14.1, 5924.0], [14.2, 5924.0], [14.3, 5924.0], [14.4, 6643.0], [14.5, 6643.0], [14.6, 6643.0], [14.7, 6643.0], [14.8, 6643.0], [14.9, 6643.0], [15.0, 6770.0], [15.1, 6770.0], [15.2, 6770.0], [15.3, 6770.0], [15.4, 6770.0], [15.5, 6770.0], [15.6, 6770.0], [15.7, 6807.0], [15.8, 6807.0], [15.9, 6807.0], [16.0, 6807.0], [16.1, 6807.0], [16.2, 6807.0], [16.3, 6969.0], [16.4, 6969.0], [16.5, 6969.0], [16.6, 6969.0], [16.7, 6969.0], [16.8, 6969.0], [16.9, 6993.0], [17.0, 6993.0], [17.1, 6993.0], [17.2, 6993.0], [17.3, 6993.0], [17.4, 6993.0], [17.5, 7042.0], [17.6, 7042.0], [17.7, 7042.0], [17.8, 7042.0], [17.9, 7042.0], [18.0, 7042.0], [18.1, 7042.0], [18.2, 7066.0], [18.3, 7066.0], [18.4, 7066.0], [18.5, 7066.0], [18.6, 7066.0], [18.7, 7066.0], [18.8, 7091.0], [18.9, 7091.0], [19.0, 7091.0], [19.1, 7091.0], [19.2, 7091.0], [19.3, 7091.0], [19.4, 7092.0], [19.5, 7092.0], [19.6, 7092.0], [19.7, 7092.0], [19.8, 7092.0], [19.9, 7092.0], [20.0, 7128.0], [20.1, 7128.0], [20.2, 7128.0], [20.3, 7128.0], [20.4, 7128.0], [20.5, 7128.0], [20.6, 7128.0], [20.7, 7226.0], [20.8, 7226.0], [20.9, 7226.0], [21.0, 7226.0], [21.1, 7226.0], [21.2, 7226.0], [21.3, 7356.0], [21.4, 7356.0], [21.5, 7356.0], [21.6, 7356.0], [21.7, 7356.0], [21.8, 7356.0], [21.9, 7398.0], [22.0, 7398.0], [22.1, 7398.0], [22.2, 7398.0], [22.3, 7398.0], [22.4, 7398.0], [22.5, 7708.0], [22.6, 7708.0], [22.7, 7708.0], [22.8, 7708.0], [22.9, 7708.0], [23.0, 7708.0], [23.1, 7708.0], [23.2, 7723.0], [23.3, 7723.0], [23.4, 7723.0], [23.5, 7723.0], [23.6, 7723.0], [23.7, 7723.0], [23.8, 7831.0], [23.9, 7831.0], [24.0, 7831.0], [24.1, 7831.0], [24.2, 7831.0], [24.3, 7831.0], [24.4, 8021.0], [24.5, 8021.0], [24.6, 8021.0], [24.7, 8021.0], [24.8, 8021.0], [24.9, 8021.0], [25.0, 8110.0], [25.1, 8110.0], [25.2, 8110.0], [25.3, 8110.0], [25.4, 8110.0], [25.5, 8110.0], [25.6, 8110.0], [25.7, 8425.0], [25.8, 8425.0], [25.9, 8425.0], [26.0, 8425.0], [26.1, 8425.0], [26.2, 8425.0], [26.3, 8842.0], [26.4, 8842.0], [26.5, 8842.0], [26.6, 8842.0], [26.7, 8842.0], [26.8, 8842.0], [26.9, 8902.0], [27.0, 8902.0], [27.1, 8902.0], [27.2, 8902.0], [27.3, 8902.0], [27.4, 8902.0], [27.5, 9298.0], [27.6, 9298.0], [27.7, 9298.0], [27.8, 9298.0], [27.9, 9298.0], [28.0, 9298.0], [28.1, 9298.0], [28.2, 9469.0], [28.3, 9469.0], [28.4, 9469.0], [28.5, 9469.0], [28.6, 9469.0], [28.7, 9469.0], [28.8, 9548.0], [28.9, 9548.0], [29.0, 9548.0], [29.1, 9548.0], [29.2, 9548.0], [29.3, 9548.0], [29.4, 9624.0], [29.5, 9624.0], [29.6, 9624.0], [29.7, 9624.0], [29.8, 9624.0], [29.9, 9624.0], [30.0, 9691.0], [30.1, 9691.0], [30.2, 9691.0], [30.3, 9691.0], [30.4, 9691.0], [30.5, 9691.0], [30.6, 9691.0], [30.7, 9723.0], [30.8, 9723.0], [30.9, 9723.0], [31.0, 9723.0], [31.1, 9723.0], [31.2, 9723.0], [31.3, 9849.0], [31.4, 9849.0], [31.5, 9849.0], [31.6, 9849.0], [31.7, 9849.0], [31.8, 9849.0], [31.9, 10218.0], [32.0, 10218.0], [32.1, 10218.0], [32.2, 10218.0], [32.3, 10218.0], [32.4, 10218.0], [32.5, 10237.0], [32.6, 10237.0], [32.7, 10237.0], [32.8, 10237.0], [32.9, 10237.0], [33.0, 10237.0], [33.1, 10237.0], [33.2, 10268.0], [33.3, 10268.0], [33.4, 10268.0], [33.5, 10268.0], [33.6, 10268.0], [33.7, 10268.0], [33.8, 10282.0], [33.9, 10282.0], [34.0, 10282.0], [34.1, 10282.0], [34.2, 10282.0], [34.3, 10282.0], [34.4, 10314.0], [34.5, 10314.0], [34.6, 10314.0], [34.7, 10314.0], [34.8, 10314.0], [34.9, 10314.0], [35.0, 10350.0], [35.1, 10350.0], [35.2, 10350.0], [35.3, 10350.0], [35.4, 10350.0], [35.5, 10350.0], [35.6, 10350.0], [35.7, 10440.0], [35.8, 10440.0], [35.9, 10440.0], [36.0, 10440.0], [36.1, 10440.0], [36.2, 10440.0], [36.3, 10726.0], [36.4, 10726.0], [36.5, 10726.0], [36.6, 10726.0], [36.7, 10726.0], [36.8, 10726.0], [36.9, 10748.0], [37.0, 10748.0], [37.1, 10748.0], [37.2, 10748.0], [37.3, 10748.0], [37.4, 10748.0], [37.5, 10887.0], [37.6, 10887.0], [37.7, 10887.0], [37.8, 10887.0], [37.9, 10887.0], [38.0, 10887.0], [38.1, 10887.0], [38.2, 11108.0], [38.3, 11108.0], [38.4, 11108.0], [38.5, 11108.0], [38.6, 11108.0], [38.7, 11108.0], [38.8, 11214.0], [38.9, 11214.0], [39.0, 11214.0], [39.1, 11214.0], [39.2, 11214.0], [39.3, 11214.0], [39.4, 11266.0], [39.5, 11266.0], [39.6, 11266.0], [39.7, 11266.0], [39.8, 11266.0], [39.9, 11266.0], [40.0, 11371.0], [40.1, 11371.0], [40.2, 11371.0], [40.3, 11371.0], [40.4, 11371.0], [40.5, 11371.0], [40.6, 11371.0], [40.7, 11538.0], [40.8, 11538.0], [40.9, 11538.0], [41.0, 11538.0], [41.1, 11538.0], [41.2, 11538.0], [41.3, 11580.0], [41.4, 11580.0], [41.5, 11580.0], [41.6, 11580.0], [41.7, 11580.0], [41.8, 11580.0], [41.9, 11584.0], [42.0, 11584.0], [42.1, 11584.0], [42.2, 11584.0], [42.3, 11584.0], [42.4, 11584.0], [42.5, 11639.0], [42.6, 11639.0], [42.7, 11639.0], [42.8, 11639.0], [42.9, 11639.0], [43.0, 11639.0], [43.1, 11639.0], [43.2, 11849.0], [43.3, 11849.0], [43.4, 11849.0], [43.5, 11849.0], [43.6, 11849.0], [43.7, 11849.0], [43.8, 11865.0], [43.9, 11865.0], [44.0, 11865.0], [44.1, 11865.0], [44.2, 11865.0], [44.3, 11865.0], [44.4, 11927.0], [44.5, 11927.0], [44.6, 11927.0], [44.7, 11927.0], [44.8, 11927.0], [44.9, 11927.0], [45.0, 12117.0], [45.1, 12117.0], [45.2, 12117.0], [45.3, 12117.0], [45.4, 12117.0], [45.5, 12117.0], [45.6, 12117.0], [45.7, 12192.0], [45.8, 12192.0], [45.9, 12192.0], [46.0, 12192.0], [46.1, 12192.0], [46.2, 12192.0], [46.3, 12213.0], [46.4, 12213.0], [46.5, 12213.0], [46.6, 12213.0], [46.7, 12213.0], [46.8, 12213.0], [46.9, 12282.0], [47.0, 12282.0], [47.1, 12282.0], [47.2, 12282.0], [47.3, 12282.0], [47.4, 12282.0], [47.5, 12492.0], [47.6, 12492.0], [47.7, 12492.0], [47.8, 12492.0], [47.9, 12492.0], [48.0, 12492.0], [48.1, 12492.0], [48.2, 12657.0], [48.3, 12657.0], [48.4, 12657.0], [48.5, 12657.0], [48.6, 12657.0], [48.7, 12657.0], [48.8, 12673.0], [48.9, 12673.0], [49.0, 12673.0], [49.1, 12673.0], [49.2, 12673.0], [49.3, 12673.0], [49.4, 12711.0], [49.5, 12711.0], [49.6, 12711.0], [49.7, 12711.0], [49.8, 12711.0], [49.9, 12711.0], [50.0, 12777.0], [50.1, 12777.0], [50.2, 12777.0], [50.3, 12777.0], [50.4, 12777.0], [50.5, 12777.0], [50.6, 12777.0], [50.7, 12840.0], [50.8, 12840.0], [50.9, 12840.0], [51.0, 12840.0], [51.1, 12840.0], [51.2, 12840.0], [51.3, 12877.0], [51.4, 12877.0], [51.5, 12877.0], [51.6, 12877.0], [51.7, 12877.0], [51.8, 12877.0], [51.9, 12895.0], [52.0, 12895.0], [52.1, 12895.0], [52.2, 12895.0], [52.3, 12895.0], [52.4, 12895.0], [52.5, 12902.0], [52.6, 12902.0], [52.7, 12902.0], [52.8, 12902.0], [52.9, 12902.0], [53.0, 12902.0], [53.1, 12902.0], [53.2, 12917.0], [53.3, 12917.0], [53.4, 12917.0], [53.5, 12917.0], [53.6, 12917.0], [53.7, 12917.0], [53.8, 13003.0], [53.9, 13003.0], [54.0, 13003.0], [54.1, 13003.0], [54.2, 13003.0], [54.3, 13003.0], [54.4, 13026.0], [54.5, 13026.0], [54.6, 13026.0], [54.7, 13026.0], [54.8, 13026.0], [54.9, 13026.0], [55.0, 13059.0], [55.1, 13059.0], [55.2, 13059.0], [55.3, 13059.0], [55.4, 13059.0], [55.5, 13059.0], [55.6, 13059.0], [55.7, 13166.0], [55.8, 13166.0], [55.9, 13166.0], [56.0, 13166.0], [56.1, 13166.0], [56.2, 13166.0], [56.3, 13228.0], [56.4, 13228.0], [56.5, 13228.0], [56.6, 13228.0], [56.7, 13228.0], [56.8, 13228.0], [56.9, 13228.0], [57.0, 13228.0], [57.1, 13228.0], [57.2, 13228.0], [57.3, 13228.0], [57.4, 13228.0], [57.5, 13279.0], [57.6, 13279.0], [57.7, 13279.0], [57.8, 13279.0], [57.9, 13279.0], [58.0, 13279.0], [58.1, 13279.0], [58.2, 13281.0], [58.3, 13281.0], [58.4, 13281.0], [58.5, 13281.0], [58.6, 13281.0], [58.7, 13281.0], [58.8, 13410.0], [58.9, 13410.0], [59.0, 13410.0], [59.1, 13410.0], [59.2, 13410.0], [59.3, 13410.0], [59.4, 13521.0], [59.5, 13521.0], [59.6, 13521.0], [59.7, 13521.0], [59.8, 13521.0], [59.9, 13521.0], [60.0, 13580.0], [60.1, 13580.0], [60.2, 13580.0], [60.3, 13580.0], [60.4, 13580.0], [60.5, 13580.0], [60.6, 13580.0], [60.7, 13595.0], [60.8, 13595.0], [60.9, 13595.0], [61.0, 13595.0], [61.1, 13595.0], [61.2, 13595.0], [61.3, 13599.0], [61.4, 13599.0], [61.5, 13599.0], [61.6, 13599.0], [61.7, 13599.0], [61.8, 13599.0], [61.9, 13629.0], [62.0, 13629.0], [62.1, 13629.0], [62.2, 13629.0], [62.3, 13629.0], [62.4, 13629.0], [62.5, 13649.0], [62.6, 13649.0], [62.7, 13649.0], [62.8, 13649.0], [62.9, 13649.0], [63.0, 13649.0], [63.1, 13649.0], [63.2, 13748.0], [63.3, 13748.0], [63.4, 13748.0], [63.5, 13748.0], [63.6, 13748.0], [63.7, 13748.0], [63.8, 13796.0], [63.9, 13796.0], [64.0, 13796.0], [64.1, 13796.0], [64.2, 13796.0], [64.3, 13796.0], [64.4, 13964.0], [64.5, 13964.0], [64.6, 13964.0], [64.7, 13964.0], [64.8, 13964.0], [64.9, 13964.0], [65.0, 14144.0], [65.1, 14144.0], [65.2, 14144.0], [65.3, 14144.0], [65.4, 14144.0], [65.5, 14144.0], [65.6, 14144.0], [65.7, 14151.0], [65.8, 14151.0], [65.9, 14151.0], [66.0, 14151.0], [66.1, 14151.0], [66.2, 14151.0], [66.3, 14211.0], [66.4, 14211.0], [66.5, 14211.0], [66.6, 14211.0], [66.7, 14211.0], [66.8, 14211.0], [66.9, 14243.0], [67.0, 14243.0], [67.1, 14243.0], [67.2, 14243.0], [67.3, 14243.0], [67.4, 14243.0], [67.5, 14274.0], [67.6, 14274.0], [67.7, 14274.0], [67.8, 14274.0], [67.9, 14274.0], [68.0, 14274.0], [68.1, 14274.0], [68.2, 14512.0], [68.3, 14512.0], [68.4, 14512.0], [68.5, 14512.0], [68.6, 14512.0], [68.7, 14512.0], [68.8, 14544.0], [68.9, 14544.0], [69.0, 14544.0], [69.1, 14544.0], [69.2, 14544.0], [69.3, 14544.0], [69.4, 14674.0], [69.5, 14674.0], [69.6, 14674.0], [69.7, 14674.0], [69.8, 14674.0], [69.9, 14674.0], [70.0, 14676.0], [70.1, 14676.0], [70.2, 14676.0], [70.3, 14676.0], [70.4, 14676.0], [70.5, 14676.0], [70.6, 14676.0], [70.7, 14733.0], [70.8, 14733.0], [70.9, 14733.0], [71.0, 14733.0], [71.1, 14733.0], [71.2, 14733.0], [71.3, 14802.0], [71.4, 14802.0], [71.5, 14802.0], [71.6, 14802.0], [71.7, 14802.0], [71.8, 14802.0], [71.9, 14812.0], [72.0, 14812.0], [72.1, 14812.0], [72.2, 14812.0], [72.3, 14812.0], [72.4, 14812.0], [72.5, 14816.0], [72.6, 14816.0], [72.7, 14816.0], [72.8, 14816.0], [72.9, 14816.0], [73.0, 14816.0], [73.1, 14816.0], [73.2, 14957.0], [73.3, 14957.0], [73.4, 14957.0], [73.5, 14957.0], [73.6, 14957.0], [73.7, 14957.0], [73.8, 15001.0], [73.9, 15001.0], [74.0, 15001.0], [74.1, 15001.0], [74.2, 15001.0], [74.3, 15001.0], [74.4, 15054.0], [74.5, 15054.0], [74.6, 15054.0], [74.7, 15054.0], [74.8, 15054.0], [74.9, 15054.0], [75.0, 15072.0], [75.1, 15072.0], [75.2, 15072.0], [75.3, 15072.0], [75.4, 15072.0], [75.5, 15072.0], [75.6, 15072.0], [75.7, 15092.0], [75.8, 15092.0], [75.9, 15092.0], [76.0, 15092.0], [76.1, 15092.0], [76.2, 15092.0], [76.3, 15127.0], [76.4, 15127.0], [76.5, 15127.0], [76.6, 15127.0], [76.7, 15127.0], [76.8, 15127.0], [76.9, 15153.0], [77.0, 15153.0], [77.1, 15153.0], [77.2, 15153.0], [77.3, 15153.0], [77.4, 15153.0], [77.5, 15296.0], [77.6, 15296.0], [77.7, 15296.0], [77.8, 15296.0], [77.9, 15296.0], [78.0, 15296.0], [78.1, 15296.0], [78.2, 15396.0], [78.3, 15396.0], [78.4, 15396.0], [78.5, 15396.0], [78.6, 15396.0], [78.7, 15396.0], [78.8, 15451.0], [78.9, 15451.0], [79.0, 15451.0], [79.1, 15451.0], [79.2, 15451.0], [79.3, 15451.0], [79.4, 15459.0], [79.5, 15459.0], [79.6, 15459.0], [79.7, 15459.0], [79.8, 15459.0], [79.9, 15459.0], [80.0, 15494.0], [80.1, 15494.0], [80.2, 15494.0], [80.3, 15494.0], [80.4, 15494.0], [80.5, 15494.0], [80.6, 15494.0], [80.7, 15525.0], [80.8, 15525.0], [80.9, 15525.0], [81.0, 15525.0], [81.1, 15525.0], [81.2, 15525.0], [81.3, 15541.0], [81.4, 15541.0], [81.5, 15541.0], [81.6, 15541.0], [81.7, 15541.0], [81.8, 15541.0], [81.9, 15578.0], [82.0, 15578.0], [82.1, 15578.0], [82.2, 15578.0], [82.3, 15578.0], [82.4, 15578.0], [82.5, 15645.0], [82.6, 15645.0], [82.7, 15645.0], [82.8, 15645.0], [82.9, 15645.0], [83.0, 15645.0], [83.1, 15645.0], [83.2, 15652.0], [83.3, 15652.0], [83.4, 15652.0], [83.5, 15652.0], [83.6, 15652.0], [83.7, 15652.0], [83.8, 15667.0], [83.9, 15667.0], [84.0, 15667.0], [84.1, 15667.0], [84.2, 15667.0], [84.3, 15667.0], [84.4, 15726.0], [84.5, 15726.0], [84.6, 15726.0], [84.7, 15726.0], [84.8, 15726.0], [84.9, 15726.0], [85.0, 15742.0], [85.1, 15742.0], [85.2, 15742.0], [85.3, 15742.0], [85.4, 15742.0], [85.5, 15742.0], [85.6, 15742.0], [85.7, 15872.0], [85.8, 15872.0], [85.9, 15872.0], [86.0, 15872.0], [86.1, 15872.0], [86.2, 15872.0], [86.3, 15935.0], [86.4, 15935.0], [86.5, 15935.0], [86.6, 15935.0], [86.7, 15935.0], [86.8, 15935.0], [86.9, 16081.0], [87.0, 16081.0], [87.1, 16081.0], [87.2, 16081.0], [87.3, 16081.0], [87.4, 16081.0], [87.5, 16178.0], [87.6, 16178.0], [87.7, 16178.0], [87.8, 16178.0], [87.9, 16178.0], [88.0, 16178.0], [88.1, 16178.0], [88.2, 16201.0], [88.3, 16201.0], [88.4, 16201.0], [88.5, 16201.0], [88.6, 16201.0], [88.7, 16201.0], [88.8, 16325.0], [88.9, 16325.0], [89.0, 16325.0], [89.1, 16325.0], [89.2, 16325.0], [89.3, 16325.0], [89.4, 16488.0], [89.5, 16488.0], [89.6, 16488.0], [89.7, 16488.0], [89.8, 16488.0], [89.9, 16488.0], [90.0, 16559.0], [90.1, 16559.0], [90.2, 16559.0], [90.3, 16559.0], [90.4, 16559.0], [90.5, 16559.0], [90.6, 16559.0], [90.7, 16747.0], [90.8, 16747.0], [90.9, 16747.0], [91.0, 16747.0], [91.1, 16747.0], [91.2, 16747.0], [91.3, 16748.0], [91.4, 16748.0], [91.5, 16748.0], [91.6, 16748.0], [91.7, 16748.0], [91.8, 16748.0], [91.9, 16783.0], [92.0, 16783.0], [92.1, 16783.0], [92.2, 16783.0], [92.3, 16783.0], [92.4, 16783.0], [92.5, 16854.0], [92.6, 16854.0], [92.7, 16854.0], [92.8, 16854.0], [92.9, 16854.0], [93.0, 16854.0], [93.1, 16854.0], [93.2, 16922.0], [93.3, 16922.0], [93.4, 16922.0], [93.5, 16922.0], [93.6, 16922.0], [93.7, 16922.0], [93.8, 17064.0], [93.9, 17064.0], [94.0, 17064.0], [94.1, 17064.0], [94.2, 17064.0], [94.3, 17064.0], [94.4, 17121.0], [94.5, 17121.0], [94.6, 17121.0], [94.7, 17121.0], [94.8, 17121.0], [94.9, 17121.0], [95.0, 17235.0], [95.1, 17235.0], [95.2, 17235.0], [95.3, 17235.0], [95.4, 17235.0], [95.5, 17235.0], [95.6, 17235.0], [95.7, 17317.0], [95.8, 17317.0], [95.9, 17317.0], [96.0, 17317.0], [96.1, 17317.0], [96.2, 17317.0], [96.3, 17320.0], [96.4, 17320.0], [96.5, 17320.0], [96.6, 17320.0], [96.7, 17320.0], [96.8, 17320.0], [96.9, 17343.0], [97.0, 17343.0], [97.1, 17343.0], [97.2, 17343.0], [97.3, 17343.0], [97.4, 17343.0], [97.5, 17349.0], [97.6, 17349.0], [97.7, 17349.0], [97.8, 17349.0], [97.9, 17349.0], [98.0, 17349.0], [98.1, 17349.0], [98.2, 17357.0], [98.3, 17357.0], [98.4, 17357.0], [98.5, 17357.0], [98.6, 17357.0], [98.7, 17357.0], [98.8, 17372.0], [98.9, 17372.0], [99.0, 17372.0], [99.1, 17372.0], [99.2, 17372.0], [99.3, 17372.0], [99.4, 17402.0], [99.5, 17402.0], [99.6, 17402.0], [99.7, 17402.0], [99.8, 17402.0], [99.9, 17402.0]], "isOverall": false, "label": "Post Request", "isController": false}, {"data": [[0.0, 384.0], [0.1, 384.0], [0.2, 384.0], [0.3, 384.0], [0.4, 384.0], [0.5, 384.0], [0.6, 384.0], [0.7, 387.0], [0.8, 387.0], [0.9, 387.0], [1.0, 387.0], [1.1, 387.0], [1.2, 387.0], [1.3, 387.0], [1.4, 387.0], [1.5, 387.0], [1.6, 387.0], [1.7, 387.0], [1.8, 387.0], [1.9, 388.0], [2.0, 388.0], [2.1, 388.0], [2.2, 388.0], [2.3, 388.0], [2.4, 388.0], [2.5, 388.0], [2.6, 388.0], [2.7, 388.0], [2.8, 388.0], [2.9, 388.0], [3.0, 388.0], [3.1, 388.0], [3.2, 388.0], [3.3, 388.0], [3.4, 388.0], [3.5, 388.0], [3.6, 388.0], [3.7, 388.0], [3.8, 388.0], [3.9, 388.0], [4.0, 388.0], [4.1, 388.0], [4.2, 388.0], [4.3, 388.0], [4.4, 389.0], [4.5, 389.0], [4.6, 389.0], [4.7, 389.0], [4.8, 389.0], [4.9, 389.0], [5.0, 389.0], [5.1, 389.0], [5.2, 389.0], [5.3, 389.0], [5.4, 389.0], [5.5, 389.0], [5.6, 389.0], [5.7, 390.0], [5.8, 390.0], [5.9, 390.0], [6.0, 390.0], [6.1, 390.0], [6.2, 390.0], [6.3, 390.0], [6.4, 390.0], [6.5, 390.0], [6.6, 390.0], [6.7, 390.0], [6.8, 390.0], [6.9, 390.0], [7.0, 390.0], [7.1, 390.0], [7.2, 390.0], [7.3, 390.0], [7.4, 390.0], [7.5, 391.0], [7.6, 391.0], [7.7, 391.0], [7.8, 391.0], [7.9, 391.0], [8.0, 391.0], [8.1, 391.0], [8.2, 391.0], [8.3, 391.0], [8.4, 391.0], [8.5, 391.0], [8.6, 391.0], [8.7, 391.0], [8.8, 391.0], [8.9, 391.0], [9.0, 391.0], [9.1, 391.0], [9.2, 391.0], [9.3, 391.0], [9.4, 392.0], [9.5, 392.0], [9.6, 392.0], [9.7, 392.0], [9.8, 392.0], [9.9, 392.0], [10.0, 392.0], [10.1, 392.0], [10.2, 392.0], [10.3, 392.0], [10.4, 392.0], [10.5, 392.0], [10.6, 392.0], [10.7, 392.0], [10.8, 392.0], [10.9, 392.0], [11.0, 392.0], [11.1, 392.0], [11.2, 392.0], [11.3, 392.0], [11.4, 392.0], [11.5, 392.0], [11.6, 392.0], [11.7, 392.0], [11.8, 392.0], [11.9, 392.0], [12.0, 392.0], [12.1, 392.0], [12.2, 392.0], [12.3, 392.0], [12.4, 392.0], [12.5, 393.0], [12.6, 393.0], [12.7, 393.0], [12.8, 393.0], [12.9, 393.0], [13.0, 393.0], [13.1, 393.0], [13.2, 393.0], [13.3, 393.0], [13.4, 393.0], [13.5, 393.0], [13.6, 393.0], [13.7, 393.0], [13.8, 394.0], [13.9, 394.0], [14.0, 394.0], [14.1, 394.0], [14.2, 394.0], [14.3, 394.0], [14.4, 394.0], [14.5, 394.0], [14.6, 394.0], [14.7, 394.0], [14.8, 394.0], [14.9, 394.0], [15.0, 394.0], [15.1, 394.0], [15.2, 394.0], [15.3, 394.0], [15.4, 394.0], [15.5, 394.0], [15.6, 394.0], [15.7, 394.0], [15.8, 394.0], [15.9, 394.0], [16.0, 394.0], [16.1, 394.0], [16.2, 394.0], [16.3, 394.0], [16.4, 394.0], [16.5, 394.0], [16.6, 394.0], [16.7, 394.0], [16.8, 394.0], [16.9, 394.0], [17.0, 394.0], [17.1, 394.0], [17.2, 394.0], [17.3, 394.0], [17.4, 394.0], [17.5, 395.0], [17.6, 395.0], [17.7, 395.0], [17.8, 395.0], [17.9, 395.0], [18.0, 395.0], [18.1, 395.0], [18.2, 395.0], [18.3, 395.0], [18.4, 395.0], [18.5, 395.0], [18.6, 395.0], [18.7, 395.0], [18.8, 395.0], [18.9, 395.0], [19.0, 395.0], [19.1, 395.0], [19.2, 395.0], [19.3, 395.0], [19.4, 396.0], [19.5, 396.0], [19.6, 396.0], [19.7, 396.0], [19.8, 396.0], [19.9, 396.0], [20.0, 396.0], [20.1, 396.0], [20.2, 396.0], [20.3, 396.0], [20.4, 396.0], [20.5, 396.0], [20.6, 396.0], [20.7, 396.0], [20.8, 396.0], [20.9, 396.0], [21.0, 396.0], [21.1, 396.0], [21.2, 396.0], [21.3, 396.0], [21.4, 396.0], [21.5, 396.0], [21.6, 396.0], [21.7, 396.0], [21.8, 396.0], [21.9, 396.0], [22.0, 396.0], [22.1, 396.0], [22.2, 396.0], [22.3, 396.0], [22.4, 396.0], [22.5, 397.0], [22.6, 397.0], [22.7, 397.0], [22.8, 397.0], [22.9, 397.0], [23.0, 397.0], [23.1, 397.0], [23.2, 397.0], [23.3, 397.0], [23.4, 397.0], [23.5, 397.0], [23.6, 397.0], [23.7, 397.0], [23.8, 397.0], [23.9, 397.0], [24.0, 397.0], [24.1, 397.0], [24.2, 397.0], [24.3, 397.0], [24.4, 397.0], [24.5, 397.0], [24.6, 397.0], [24.7, 397.0], [24.8, 397.0], [24.9, 397.0], [25.0, 398.0], [25.1, 398.0], [25.2, 398.0], [25.3, 398.0], [25.4, 398.0], [25.5, 398.0], [25.6, 398.0], [25.7, 398.0], [25.8, 398.0], [25.9, 398.0], [26.0, 398.0], [26.1, 398.0], [26.2, 398.0], [26.3, 398.0], [26.4, 398.0], [26.5, 398.0], [26.6, 398.0], [26.7, 398.0], [26.8, 398.0], [26.9, 399.0], [27.0, 399.0], [27.1, 399.0], [27.2, 399.0], [27.3, 399.0], [27.4, 399.0], [27.5, 399.0], [27.6, 399.0], [27.7, 399.0], [27.8, 399.0], [27.9, 399.0], [28.0, 399.0], [28.1, 399.0], [28.2, 399.0], [28.3, 399.0], [28.4, 399.0], [28.5, 399.0], [28.6, 399.0], [28.7, 399.0], [28.8, 399.0], [28.9, 399.0], [29.0, 399.0], [29.1, 399.0], [29.2, 399.0], [29.3, 399.0], [29.4, 399.0], [29.5, 399.0], [29.6, 399.0], [29.7, 399.0], [29.8, 399.0], [29.9, 399.0], [30.0, 399.0], [30.1, 399.0], [30.2, 399.0], [30.3, 399.0], [30.4, 399.0], [30.5, 399.0], [30.6, 399.0], [30.7, 400.0], [30.8, 400.0], [30.9, 400.0], [31.0, 400.0], [31.1, 400.0], [31.2, 400.0], [31.3, 400.0], [31.4, 400.0], [31.5, 400.0], [31.6, 400.0], [31.7, 400.0], [31.8, 400.0], [31.9, 401.0], [32.0, 401.0], [32.1, 401.0], [32.2, 401.0], [32.3, 401.0], [32.4, 401.0], [32.5, 402.0], [32.6, 402.0], [32.7, 402.0], [32.8, 402.0], [32.9, 402.0], [33.0, 402.0], [33.1, 402.0], [33.2, 402.0], [33.3, 402.0], [33.4, 402.0], [33.5, 402.0], [33.6, 402.0], [33.7, 402.0], [33.8, 403.0], [33.9, 403.0], [34.0, 403.0], [34.1, 403.0], [34.2, 403.0], [34.3, 403.0], [34.4, 403.0], [34.5, 403.0], [34.6, 403.0], [34.7, 403.0], [34.8, 403.0], [34.9, 403.0], [35.0, 403.0], [35.1, 403.0], [35.2, 403.0], [35.3, 403.0], [35.4, 403.0], [35.5, 403.0], [35.6, 403.0], [35.7, 406.0], [35.8, 406.0], [35.9, 406.0], [36.0, 406.0], [36.1, 406.0], [36.2, 406.0], [36.3, 407.0], [36.4, 407.0], [36.5, 407.0], [36.6, 407.0], [36.7, 407.0], [36.8, 407.0], [36.9, 407.0], [37.0, 407.0], [37.1, 407.0], [37.2, 407.0], [37.3, 407.0], [37.4, 407.0], [37.5, 408.0], [37.6, 408.0], [37.7, 408.0], [37.8, 408.0], [37.9, 408.0], [38.0, 408.0], [38.1, 408.0], [38.2, 409.0], [38.3, 409.0], [38.4, 409.0], [38.5, 409.0], [38.6, 409.0], [38.7, 409.0], [38.8, 410.0], [38.9, 410.0], [39.0, 410.0], [39.1, 410.0], [39.2, 410.0], [39.3, 410.0], [39.4, 411.0], [39.5, 411.0], [39.6, 411.0], [39.7, 411.0], [39.8, 411.0], [39.9, 411.0], [40.0, 412.0], [40.1, 412.0], [40.2, 412.0], [40.3, 412.0], [40.4, 412.0], [40.5, 412.0], [40.6, 412.0], [40.7, 416.0], [40.8, 416.0], [40.9, 416.0], [41.0, 416.0], [41.1, 416.0], [41.2, 416.0], [41.3, 428.0], [41.4, 428.0], [41.5, 428.0], [41.6, 428.0], [41.7, 428.0], [41.8, 428.0], [41.9, 434.0], [42.0, 434.0], [42.1, 434.0], [42.2, 434.0], [42.3, 434.0], [42.4, 434.0], [42.5, 458.0], [42.6, 458.0], [42.7, 458.0], [42.8, 458.0], [42.9, 458.0], [43.0, 458.0], [43.1, 458.0], [43.2, 458.0], [43.3, 458.0], [43.4, 458.0], [43.5, 458.0], [43.6, 458.0], [43.7, 458.0], [43.8, 466.0], [43.9, 466.0], [44.0, 466.0], [44.1, 466.0], [44.2, 466.0], [44.3, 466.0], [44.4, 468.0], [44.5, 468.0], [44.6, 468.0], [44.7, 468.0], [44.8, 468.0], [44.9, 468.0], [45.0, 471.0], [45.1, 471.0], [45.2, 471.0], [45.3, 471.0], [45.4, 471.0], [45.5, 471.0], [45.6, 471.0], [45.7, 472.0], [45.8, 472.0], [45.9, 472.0], [46.0, 472.0], [46.1, 472.0], [46.2, 472.0], [46.3, 473.0], [46.4, 473.0], [46.5, 473.0], [46.6, 473.0], [46.7, 473.0], [46.8, 473.0], [46.9, 473.0], [47.0, 473.0], [47.1, 473.0], [47.2, 473.0], [47.3, 473.0], [47.4, 473.0], [47.5, 474.0], [47.6, 474.0], [47.7, 474.0], [47.8, 474.0], [47.9, 474.0], [48.0, 474.0], [48.1, 474.0], [48.2, 474.0], [48.3, 474.0], [48.4, 474.0], [48.5, 474.0], [48.6, 474.0], [48.7, 474.0], [48.8, 474.0], [48.9, 474.0], [49.0, 474.0], [49.1, 474.0], [49.2, 474.0], [49.3, 474.0], [49.4, 474.0], [49.5, 474.0], [49.6, 474.0], [49.7, 474.0], [49.8, 474.0], [49.9, 474.0], [50.0, 474.0], [50.1, 474.0], [50.2, 474.0], [50.3, 474.0], [50.4, 474.0], [50.5, 474.0], [50.6, 474.0], [50.7, 474.0], [50.8, 474.0], [50.9, 474.0], [51.0, 474.0], [51.1, 474.0], [51.2, 474.0], [51.3, 475.0], [51.4, 475.0], [51.5, 475.0], [51.6, 475.0], [51.7, 475.0], [51.8, 475.0], [51.9, 475.0], [52.0, 475.0], [52.1, 475.0], [52.2, 475.0], [52.3, 475.0], [52.4, 475.0], [52.5, 475.0], [52.6, 475.0], [52.7, 475.0], [52.8, 475.0], [52.9, 475.0], [53.0, 475.0], [53.1, 475.0], [53.2, 475.0], [53.3, 475.0], [53.4, 475.0], [53.5, 475.0], [53.6, 475.0], [53.7, 475.0], [53.8, 475.0], [53.9, 475.0], [54.0, 475.0], [54.1, 475.0], [54.2, 475.0], [54.3, 475.0], [54.4, 475.0], [54.5, 475.0], [54.6, 475.0], [54.7, 475.0], [54.8, 475.0], [54.9, 475.0], [55.0, 475.0], [55.1, 475.0], [55.2, 475.0], [55.3, 475.0], [55.4, 475.0], [55.5, 475.0], [55.6, 475.0], [55.7, 475.0], [55.8, 475.0], [55.9, 475.0], [56.0, 475.0], [56.1, 475.0], [56.2, 475.0], [56.3, 476.0], [56.4, 476.0], [56.5, 476.0], [56.6, 476.0], [56.7, 476.0], [56.8, 476.0], [56.9, 476.0], [57.0, 476.0], [57.1, 476.0], [57.2, 476.0], [57.3, 476.0], [57.4, 476.0], [57.5, 476.0], [57.6, 476.0], [57.7, 476.0], [57.8, 476.0], [57.9, 476.0], [58.0, 476.0], [58.1, 476.0], [58.2, 477.0], [58.3, 477.0], [58.4, 477.0], [58.5, 477.0], [58.6, 477.0], [58.7, 477.0], [58.8, 477.0], [58.9, 477.0], [59.0, 477.0], [59.1, 477.0], [59.2, 477.0], [59.3, 477.0], [59.4, 477.0], [59.5, 477.0], [59.6, 477.0], [59.7, 477.0], [59.8, 477.0], [59.9, 477.0], [60.0, 478.0], [60.1, 478.0], [60.2, 478.0], [60.3, 478.0], [60.4, 478.0], [60.5, 478.0], [60.6, 478.0], [60.7, 478.0], [60.8, 478.0], [60.9, 478.0], [61.0, 478.0], [61.1, 478.0], [61.2, 478.0], [61.3, 478.0], [61.4, 478.0], [61.5, 478.0], [61.6, 478.0], [61.7, 478.0], [61.8, 478.0], [61.9, 479.0], [62.0, 479.0], [62.1, 479.0], [62.2, 479.0], [62.3, 479.0], [62.4, 479.0], [62.5, 479.0], [62.6, 479.0], [62.7, 479.0], [62.8, 479.0], [62.9, 479.0], [63.0, 479.0], [63.1, 479.0], [63.2, 479.0], [63.3, 479.0], [63.4, 479.0], [63.5, 479.0], [63.6, 479.0], [63.7, 479.0], [63.8, 480.0], [63.9, 480.0], [64.0, 480.0], [64.1, 480.0], [64.2, 480.0], [64.3, 480.0], [64.4, 480.0], [64.5, 480.0], [64.6, 480.0], [64.7, 480.0], [64.8, 480.0], [64.9, 480.0], [65.0, 480.0], [65.1, 480.0], [65.2, 480.0], [65.3, 480.0], [65.4, 480.0], [65.5, 480.0], [65.6, 480.0], [65.7, 480.0], [65.8, 480.0], [65.9, 480.0], [66.0, 480.0], [66.1, 480.0], [66.2, 480.0], [66.3, 481.0], [66.4, 481.0], [66.5, 481.0], [66.6, 481.0], [66.7, 481.0], [66.8, 481.0], [66.9, 481.0], [67.0, 481.0], [67.1, 481.0], [67.2, 481.0], [67.3, 481.0], [67.4, 481.0], [67.5, 481.0], [67.6, 481.0], [67.7, 481.0], [67.8, 481.0], [67.9, 481.0], [68.0, 481.0], [68.1, 481.0], [68.2, 481.0], [68.3, 481.0], [68.4, 481.0], [68.5, 481.0], [68.6, 481.0], [68.7, 481.0], [68.8, 481.0], [68.9, 481.0], [69.0, 481.0], [69.1, 481.0], [69.2, 481.0], [69.3, 481.0], [69.4, 482.0], [69.5, 482.0], [69.6, 482.0], [69.7, 482.0], [69.8, 482.0], [69.9, 482.0], [70.0, 482.0], [70.1, 482.0], [70.2, 482.0], [70.3, 482.0], [70.4, 482.0], [70.5, 482.0], [70.6, 482.0], [70.7, 482.0], [70.8, 482.0], [70.9, 482.0], [71.0, 482.0], [71.1, 482.0], [71.2, 482.0], [71.3, 483.0], [71.4, 483.0], [71.5, 483.0], [71.6, 483.0], [71.7, 483.0], [71.8, 483.0], [71.9, 484.0], [72.0, 484.0], [72.1, 484.0], [72.2, 484.0], [72.3, 484.0], [72.4, 484.0], [72.5, 485.0], [72.6, 485.0], [72.7, 485.0], [72.8, 485.0], [72.9, 485.0], [73.0, 485.0], [73.1, 485.0], [73.2, 485.0], [73.3, 485.0], [73.4, 485.0], [73.5, 485.0], [73.6, 485.0], [73.7, 485.0], [73.8, 485.0], [73.9, 485.0], [74.0, 485.0], [74.1, 485.0], [74.2, 485.0], [74.3, 485.0], [74.4, 486.0], [74.5, 486.0], [74.6, 486.0], [74.7, 486.0], [74.8, 486.0], [74.9, 486.0], [75.0, 486.0], [75.1, 486.0], [75.2, 486.0], [75.3, 486.0], [75.4, 486.0], [75.5, 486.0], [75.6, 486.0], [75.7, 486.0], [75.8, 486.0], [75.9, 486.0], [76.0, 486.0], [76.1, 486.0], [76.2, 486.0], [76.3, 487.0], [76.4, 487.0], [76.5, 487.0], [76.6, 487.0], [76.7, 487.0], [76.8, 487.0], [76.9, 488.0], [77.0, 488.0], [77.1, 488.0], [77.2, 488.0], [77.3, 488.0], [77.4, 488.0], [77.5, 488.0], [77.6, 488.0], [77.7, 488.0], [77.8, 488.0], [77.9, 488.0], [78.0, 488.0], [78.1, 488.0], [78.2, 488.0], [78.3, 488.0], [78.4, 488.0], [78.5, 488.0], [78.6, 488.0], [78.7, 488.0], [78.8, 489.0], [78.9, 489.0], [79.0, 489.0], [79.1, 489.0], [79.2, 489.0], [79.3, 489.0], [79.4, 489.0], [79.5, 489.0], [79.6, 489.0], [79.7, 489.0], [79.8, 489.0], [79.9, 489.0], [80.0, 490.0], [80.1, 490.0], [80.2, 490.0], [80.3, 490.0], [80.4, 490.0], [80.5, 490.0], [80.6, 490.0], [80.7, 490.0], [80.8, 490.0], [80.9, 490.0], [81.0, 490.0], [81.1, 490.0], [81.2, 490.0], [81.3, 495.0], [81.4, 495.0], [81.5, 495.0], [81.6, 495.0], [81.7, 495.0], [81.8, 495.0], [81.9, 495.0], [82.0, 495.0], [82.1, 495.0], [82.2, 495.0], [82.3, 495.0], [82.4, 495.0], [82.5, 495.0], [82.6, 495.0], [82.7, 495.0], [82.8, 495.0], [82.9, 495.0], [83.0, 495.0], [83.1, 495.0], [83.2, 498.0], [83.3, 498.0], [83.4, 498.0], [83.5, 498.0], [83.6, 498.0], [83.7, 498.0], [83.8, 499.0], [83.9, 499.0], [84.0, 499.0], [84.1, 499.0], [84.2, 499.0], [84.3, 499.0], [84.4, 507.0], [84.5, 507.0], [84.6, 507.0], [84.7, 507.0], [84.8, 507.0], [84.9, 507.0], [85.0, 513.0], [85.1, 513.0], [85.2, 513.0], [85.3, 513.0], [85.4, 513.0], [85.5, 513.0], [85.6, 513.0], [85.7, 516.0], [85.8, 516.0], [85.9, 516.0], [86.0, 516.0], [86.1, 516.0], [86.2, 516.0], [86.3, 526.0], [86.4, 526.0], [86.5, 526.0], [86.6, 526.0], [86.7, 526.0], [86.8, 526.0], [86.9, 544.0], [87.0, 544.0], [87.1, 544.0], [87.2, 544.0], [87.3, 544.0], [87.4, 544.0], [87.5, 546.0], [87.6, 546.0], [87.7, 546.0], [87.8, 546.0], [87.9, 546.0], [88.0, 546.0], [88.1, 546.0], [88.2, 558.0], [88.3, 558.0], [88.4, 558.0], [88.5, 558.0], [88.6, 558.0], [88.7, 558.0], [88.8, 599.0], [88.9, 599.0], [89.0, 599.0], [89.1, 599.0], [89.2, 599.0], [89.3, 599.0], [89.4, 607.0], [89.5, 607.0], [89.6, 607.0], [89.7, 607.0], [89.8, 607.0], [89.9, 607.0], [90.0, 643.0], [90.1, 643.0], [90.2, 643.0], [90.3, 643.0], [90.4, 643.0], [90.5, 643.0], [90.6, 643.0], [90.7, 649.0], [90.8, 649.0], [90.9, 649.0], [91.0, 649.0], [91.1, 649.0], [91.2, 649.0], [91.3, 681.0], [91.4, 681.0], [91.5, 681.0], [91.6, 681.0], [91.7, 681.0], [91.8, 681.0], [91.9, 683.0], [92.0, 683.0], [92.1, 683.0], [92.2, 683.0], [92.3, 683.0], [92.4, 683.0], [92.5, 695.0], [92.6, 695.0], [92.7, 695.0], [92.8, 695.0], [92.9, 695.0], [93.0, 695.0], [93.1, 695.0], [93.2, 700.0], [93.3, 700.0], [93.4, 700.0], [93.5, 700.0], [93.6, 700.0], [93.7, 700.0], [93.8, 701.0], [93.9, 701.0], [94.0, 701.0], [94.1, 701.0], [94.2, 701.0], [94.3, 701.0], [94.4, 703.0], [94.5, 703.0], [94.6, 703.0], [94.7, 703.0], [94.8, 703.0], [94.9, 703.0], [95.0, 704.0], [95.1, 704.0], [95.2, 704.0], [95.3, 704.0], [95.4, 704.0], [95.5, 704.0], [95.6, 704.0], [95.7, 705.0], [95.8, 705.0], [95.9, 705.0], [96.0, 705.0], [96.1, 705.0], [96.2, 705.0], [96.3, 751.0], [96.4, 751.0], [96.5, 751.0], [96.6, 751.0], [96.7, 751.0], [96.8, 751.0], [96.9, 782.0], [97.0, 782.0], [97.1, 782.0], [97.2, 782.0], [97.3, 782.0], [97.4, 782.0], [97.5, 785.0], [97.6, 785.0], [97.7, 785.0], [97.8, 785.0], [97.9, 785.0], [98.0, 785.0], [98.1, 785.0], [98.2, 876.0], [98.3, 876.0], [98.4, 876.0], [98.5, 876.0], [98.6, 876.0], [98.7, 876.0], [98.8, 905.0], [98.9, 905.0], [99.0, 905.0], [99.1, 905.0], [99.2, 905.0], [99.3, 905.0], [99.4, 912.0], [99.5, 912.0], [99.6, 912.0], [99.7, 912.0], [99.8, 912.0], [99.9, 912.0]], "isOverall": false, "label": "Put Request", "isController": false}, {"data": [[0.0, 12.0], [0.1, 12.0], [0.2, 12.0], [0.3, 12.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 12.0], [0.8, 12.0], [0.9, 12.0], [1.0, 12.0], [1.1, 12.0], [1.2, 12.0], [1.3, 12.0], [1.4, 12.0], [1.5, 12.0], [1.6, 12.0], [1.7, 12.0], [1.8, 12.0], [1.9, 12.0], [2.0, 12.0], [2.1, 12.0], [2.2, 12.0], [2.3, 12.0], [2.4, 12.0], [2.5, 12.0], [2.6, 12.0], [2.7, 12.0], [2.8, 12.0], [2.9, 12.0], [3.0, 12.0], [3.1, 12.0], [3.2, 12.0], [3.3, 12.0], [3.4, 12.0], [3.5, 12.0], [3.6, 12.0], [3.7, 12.0], [3.8, 12.0], [3.9, 12.0], [4.0, 12.0], [4.1, 12.0], [4.2, 12.0], [4.3, 12.0], [4.4, 12.0], [4.5, 12.0], [4.6, 12.0], [4.7, 12.0], [4.8, 12.0], [4.9, 12.0], [5.0, 13.0], [5.1, 13.0], [5.2, 13.0], [5.3, 13.0], [5.4, 13.0], [5.5, 13.0], [5.6, 13.0], [5.7, 13.0], [5.8, 13.0], [5.9, 13.0], [6.0, 13.0], [6.1, 13.0], [6.2, 13.0], [6.3, 13.0], [6.4, 13.0], [6.5, 13.0], [6.6, 13.0], [6.7, 13.0], [6.8, 13.0], [6.9, 13.0], [7.0, 13.0], [7.1, 13.0], [7.2, 13.0], [7.3, 13.0], [7.4, 13.0], [7.5, 13.0], [7.6, 13.0], [7.7, 13.0], [7.8, 13.0], [7.9, 13.0], [8.0, 13.0], [8.1, 13.0], [8.2, 13.0], [8.3, 13.0], [8.4, 13.0], [8.5, 13.0], [8.6, 13.0], [8.7, 13.0], [8.8, 13.0], [8.9, 13.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 13.0], [9.5, 13.0], [9.6, 13.0], [9.7, 13.0], [9.8, 13.0], [9.9, 13.0], [10.0, 13.0], [10.1, 13.0], [10.2, 13.0], [10.3, 13.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 13.0], [11.5, 13.0], [11.6, 13.0], [11.7, 13.0], [11.8, 13.0], [11.9, 13.0], [12.0, 13.0], [12.1, 13.0], [12.2, 13.0], [12.3, 13.0], [12.4, 13.0], [12.5, 13.0], [12.6, 13.0], [12.7, 13.0], [12.8, 13.0], [12.9, 13.0], [13.0, 13.0], [13.1, 13.0], [13.2, 13.0], [13.3, 13.0], [13.4, 13.0], [13.5, 13.0], [13.6, 13.0], [13.7, 13.0], [13.8, 13.0], [13.9, 13.0], [14.0, 13.0], [14.1, 13.0], [14.2, 13.0], [14.3, 13.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 14.0], [14.9, 14.0], [15.0, 14.0], [15.1, 14.0], [15.2, 14.0], [15.3, 14.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 14.0], [16.2, 14.0], [16.3, 14.0], [16.4, 14.0], [16.5, 14.0], [16.6, 14.0], [16.7, 14.0], [16.8, 14.0], [16.9, 14.0], [17.0, 14.0], [17.1, 14.0], [17.2, 14.0], [17.3, 14.0], [17.4, 14.0], [17.5, 14.0], [17.6, 14.0], [17.7, 14.0], [17.8, 14.0], [17.9, 14.0], [18.0, 14.0], [18.1, 14.0], [18.2, 14.0], [18.3, 14.0], [18.4, 14.0], [18.5, 14.0], [18.6, 14.0], [18.7, 14.0], [18.8, 14.0], [18.9, 14.0], [19.0, 14.0], [19.1, 14.0], [19.2, 14.0], [19.3, 14.0], [19.4, 14.0], [19.5, 14.0], [19.6, 14.0], [19.7, 14.0], [19.8, 14.0], [19.9, 14.0], [20.0, 14.0], [20.1, 14.0], [20.2, 14.0], [20.3, 14.0], [20.4, 14.0], [20.5, 14.0], [20.6, 14.0], [20.7, 14.0], [20.8, 14.0], [20.9, 14.0], [21.0, 14.0], [21.1, 14.0], [21.2, 14.0], [21.3, 14.0], [21.4, 14.0], [21.5, 14.0], [21.6, 14.0], [21.7, 14.0], [21.8, 14.0], [21.9, 14.0], [22.0, 14.0], [22.1, 14.0], [22.2, 14.0], [22.3, 14.0], [22.4, 14.0], [22.5, 14.0], [22.6, 14.0], [22.7, 14.0], [22.8, 14.0], [22.9, 14.0], [23.0, 14.0], [23.1, 14.0], [23.2, 14.0], [23.3, 14.0], [23.4, 14.0], [23.5, 14.0], [23.6, 14.0], [23.7, 14.0], [23.8, 14.0], [23.9, 14.0], [24.0, 14.0], [24.1, 14.0], [24.2, 14.0], [24.3, 14.0], [24.4, 14.0], [24.5, 14.0], [24.6, 14.0], [24.7, 14.0], [24.8, 14.0], [24.9, 14.0], [25.0, 14.0], [25.1, 14.0], [25.2, 14.0], [25.3, 14.0], [25.4, 14.0], [25.5, 14.0], [25.6, 14.0], [25.7, 15.0], [25.8, 15.0], [25.9, 15.0], [26.0, 15.0], [26.1, 15.0], [26.2, 15.0], [26.3, 15.0], [26.4, 15.0], [26.5, 15.0], [26.6, 15.0], [26.7, 15.0], [26.8, 15.0], [26.9, 15.0], [27.0, 15.0], [27.1, 15.0], [27.2, 15.0], [27.3, 15.0], [27.4, 15.0], [27.5, 15.0], [27.6, 15.0], [27.7, 15.0], [27.8, 15.0], [27.9, 15.0], [28.0, 15.0], [28.1, 15.0], [28.2, 15.0], [28.3, 15.0], [28.4, 15.0], [28.5, 15.0], [28.6, 15.0], [28.7, 15.0], [28.8, 15.0], [28.9, 15.0], [29.0, 15.0], [29.1, 15.0], [29.2, 15.0], [29.3, 15.0], [29.4, 15.0], [29.5, 15.0], [29.6, 15.0], [29.7, 15.0], [29.8, 15.0], [29.9, 15.0], [30.0, 15.0], [30.1, 15.0], [30.2, 15.0], [30.3, 15.0], [30.4, 15.0], [30.5, 15.0], [30.6, 15.0], [30.7, 15.0], [30.8, 15.0], [30.9, 15.0], [31.0, 15.0], [31.1, 15.0], [31.2, 15.0], [31.3, 15.0], [31.4, 15.0], [31.5, 15.0], [31.6, 15.0], [31.7, 15.0], [31.8, 15.0], [31.9, 15.0], [32.0, 15.0], [32.1, 15.0], [32.2, 15.0], [32.3, 15.0], [32.4, 15.0], [32.5, 15.0], [32.6, 15.0], [32.7, 15.0], [32.8, 15.0], [32.9, 15.0], [33.0, 15.0], [33.1, 15.0], [33.2, 15.0], [33.3, 15.0], [33.4, 15.0], [33.5, 15.0], [33.6, 15.0], [33.7, 15.0], [33.8, 16.0], [33.9, 16.0], [34.0, 16.0], [34.1, 16.0], [34.2, 16.0], [34.3, 16.0], [34.4, 16.0], [34.5, 16.0], [34.6, 16.0], [34.7, 16.0], [34.8, 16.0], [34.9, 16.0], [35.0, 16.0], [35.1, 16.0], [35.2, 16.0], [35.3, 16.0], [35.4, 16.0], [35.5, 16.0], [35.6, 16.0], [35.7, 16.0], [35.8, 16.0], [35.9, 16.0], [36.0, 16.0], [36.1, 16.0], [36.2, 16.0], [36.3, 16.0], [36.4, 16.0], [36.5, 16.0], [36.6, 16.0], [36.7, 16.0], [36.8, 16.0], [36.9, 16.0], [37.0, 16.0], [37.1, 16.0], [37.2, 16.0], [37.3, 16.0], [37.4, 16.0], [37.5, 16.0], [37.6, 16.0], [37.7, 16.0], [37.8, 16.0], [37.9, 16.0], [38.0, 16.0], [38.1, 16.0], [38.2, 16.0], [38.3, 16.0], [38.4, 16.0], [38.5, 16.0], [38.6, 16.0], [38.7, 16.0], [38.8, 16.0], [38.9, 16.0], [39.0, 16.0], [39.1, 16.0], [39.2, 16.0], [39.3, 16.0], [39.4, 16.0], [39.5, 16.0], [39.6, 16.0], [39.7, 16.0], [39.8, 16.0], [39.9, 16.0], [40.0, 16.0], [40.1, 16.0], [40.2, 16.0], [40.3, 16.0], [40.4, 16.0], [40.5, 16.0], [40.6, 16.0], [40.7, 16.0], [40.8, 16.0], [40.9, 16.0], [41.0, 16.0], [41.1, 16.0], [41.2, 16.0], [41.3, 16.0], [41.4, 16.0], [41.5, 16.0], [41.6, 16.0], [41.7, 16.0], [41.8, 16.0], [41.9, 16.0], [42.0, 16.0], [42.1, 16.0], [42.2, 16.0], [42.3, 16.0], [42.4, 16.0], [42.5, 16.0], [42.6, 16.0], [42.7, 16.0], [42.8, 16.0], [42.9, 16.0], [43.0, 16.0], [43.1, 16.0], [43.2, 17.0], [43.3, 17.0], [43.4, 17.0], [43.5, 17.0], [43.6, 17.0], [43.7, 17.0], [43.8, 17.0], [43.9, 17.0], [44.0, 17.0], [44.1, 17.0], [44.2, 17.0], [44.3, 17.0], [44.4, 17.0], [44.5, 17.0], [44.6, 17.0], [44.7, 17.0], [44.8, 17.0], [44.9, 17.0], [45.0, 17.0], [45.1, 17.0], [45.2, 17.0], [45.3, 17.0], [45.4, 17.0], [45.5, 17.0], [45.6, 17.0], [45.7, 17.0], [45.8, 17.0], [45.9, 17.0], [46.0, 17.0], [46.1, 17.0], [46.2, 17.0], [46.3, 17.0], [46.4, 17.0], [46.5, 17.0], [46.6, 17.0], [46.7, 17.0], [46.8, 17.0], [46.9, 17.0], [47.0, 17.0], [47.1, 17.0], [47.2, 17.0], [47.3, 17.0], [47.4, 17.0], [47.5, 18.0], [47.6, 18.0], [47.7, 18.0], [47.8, 18.0], [47.9, 18.0], [48.0, 18.0], [48.1, 18.0], [48.2, 18.0], [48.3, 18.0], [48.4, 18.0], [48.5, 18.0], [48.6, 18.0], [48.7, 18.0], [48.8, 18.0], [48.9, 18.0], [49.0, 18.0], [49.1, 18.0], [49.2, 18.0], [49.3, 18.0], [49.4, 18.0], [49.5, 18.0], [49.6, 18.0], [49.7, 18.0], [49.8, 18.0], [49.9, 18.0], [50.0, 18.0], [50.1, 18.0], [50.2, 18.0], [50.3, 18.0], [50.4, 18.0], [50.5, 18.0], [50.6, 18.0], [50.7, 18.0], [50.8, 18.0], [50.9, 18.0], [51.0, 18.0], [51.1, 18.0], [51.2, 18.0], [51.3, 19.0], [51.4, 19.0], [51.5, 19.0], [51.6, 19.0], [51.7, 19.0], [51.8, 19.0], [51.9, 19.0], [52.0, 19.0], [52.1, 19.0], [52.2, 19.0], [52.3, 19.0], [52.4, 19.0], [52.5, 19.0], [52.6, 19.0], [52.7, 19.0], [52.8, 19.0], [52.9, 19.0], [53.0, 19.0], [53.1, 19.0], [53.2, 19.0], [53.3, 19.0], [53.4, 19.0], [53.5, 19.0], [53.6, 19.0], [53.7, 19.0], [53.8, 19.0], [53.9, 19.0], [54.0, 19.0], [54.1, 19.0], [54.2, 19.0], [54.3, 19.0], [54.4, 19.0], [54.5, 19.0], [54.6, 19.0], [54.7, 19.0], [54.8, 19.0], [54.9, 19.0], [55.0, 19.0], [55.1, 19.0], [55.2, 19.0], [55.3, 19.0], [55.4, 19.0], [55.5, 19.0], [55.6, 19.0], [55.7, 20.0], [55.8, 20.0], [55.9, 20.0], [56.0, 20.0], [56.1, 20.0], [56.2, 20.0], [56.3, 21.0], [56.4, 21.0], [56.5, 21.0], [56.6, 21.0], [56.7, 21.0], [56.8, 21.0], [56.9, 21.0], [57.0, 21.0], [57.1, 21.0], [57.2, 21.0], [57.3, 21.0], [57.4, 21.0], [57.5, 21.0], [57.6, 21.0], [57.7, 21.0], [57.8, 21.0], [57.9, 21.0], [58.0, 21.0], [58.1, 21.0], [58.2, 21.0], [58.3, 21.0], [58.4, 21.0], [58.5, 21.0], [58.6, 21.0], [58.7, 21.0], [58.8, 21.0], [58.9, 21.0], [59.0, 21.0], [59.1, 21.0], [59.2, 21.0], [59.3, 21.0], [59.4, 21.0], [59.5, 21.0], [59.6, 21.0], [59.7, 21.0], [59.8, 21.0], [59.9, 21.0], [60.0, 21.0], [60.1, 21.0], [60.2, 21.0], [60.3, 21.0], [60.4, 21.0], [60.5, 21.0], [60.6, 21.0], [60.7, 21.0], [60.8, 21.0], [60.9, 21.0], [61.0, 21.0], [61.1, 21.0], [61.2, 21.0], [61.3, 21.0], [61.4, 21.0], [61.5, 21.0], [61.6, 21.0], [61.7, 21.0], [61.8, 21.0], [61.9, 22.0], [62.0, 22.0], [62.1, 22.0], [62.2, 22.0], [62.3, 22.0], [62.4, 22.0], [62.5, 22.0], [62.6, 22.0], [62.7, 22.0], [62.8, 22.0], [62.9, 22.0], [63.0, 22.0], [63.1, 22.0], [63.2, 22.0], [63.3, 22.0], [63.4, 22.0], [63.5, 22.0], [63.6, 22.0], [63.7, 22.0], [63.8, 22.0], [63.9, 22.0], [64.0, 22.0], [64.1, 22.0], [64.2, 22.0], [64.3, 22.0], [64.4, 22.0], [64.5, 22.0], [64.6, 22.0], [64.7, 22.0], [64.8, 22.0], [64.9, 22.0], [65.0, 23.0], [65.1, 23.0], [65.2, 23.0], [65.3, 23.0], [65.4, 23.0], [65.5, 23.0], [65.6, 23.0], [65.7, 23.0], [65.8, 23.0], [65.9, 23.0], [66.0, 23.0], [66.1, 23.0], [66.2, 23.0], [66.3, 23.0], [66.4, 23.0], [66.5, 23.0], [66.6, 23.0], [66.7, 23.0], [66.8, 23.0], [66.9, 23.0], [67.0, 23.0], [67.1, 23.0], [67.2, 23.0], [67.3, 23.0], [67.4, 23.0], [67.5, 23.0], [67.6, 23.0], [67.7, 23.0], [67.8, 23.0], [67.9, 23.0], [68.0, 23.0], [68.1, 23.0], [68.2, 23.0], [68.3, 23.0], [68.4, 23.0], [68.5, 23.0], [68.6, 23.0], [68.7, 23.0], [68.8, 24.0], [68.9, 24.0], [69.0, 24.0], [69.1, 24.0], [69.2, 24.0], [69.3, 24.0], [69.4, 25.0], [69.5, 25.0], [69.6, 25.0], [69.7, 25.0], [69.8, 25.0], [69.9, 25.0], [70.0, 25.0], [70.1, 25.0], [70.2, 25.0], [70.3, 25.0], [70.4, 25.0], [70.5, 25.0], [70.6, 25.0], [70.7, 25.0], [70.8, 25.0], [70.9, 25.0], [71.0, 25.0], [71.1, 25.0], [71.2, 25.0], [71.3, 25.0], [71.4, 25.0], [71.5, 25.0], [71.6, 25.0], [71.7, 25.0], [71.8, 25.0], [71.9, 26.0], [72.0, 26.0], [72.1, 26.0], [72.2, 26.0], [72.3, 26.0], [72.4, 26.0], [72.5, 26.0], [72.6, 26.0], [72.7, 26.0], [72.8, 26.0], [72.9, 26.0], [73.0, 26.0], [73.1, 26.0], [73.2, 27.0], [73.3, 27.0], [73.4, 27.0], [73.5, 27.0], [73.6, 27.0], [73.7, 27.0], [73.8, 28.0], [73.9, 28.0], [74.0, 28.0], [74.1, 28.0], [74.2, 28.0], [74.3, 28.0], [74.4, 28.0], [74.5, 28.0], [74.6, 28.0], [74.7, 28.0], [74.8, 28.0], [74.9, 28.0], [75.0, 28.0], [75.1, 28.0], [75.2, 28.0], [75.3, 28.0], [75.4, 28.0], [75.5, 28.0], [75.6, 28.0], [75.7, 28.0], [75.8, 28.0], [75.9, 28.0], [76.0, 28.0], [76.1, 28.0], [76.2, 28.0], [76.3, 28.0], [76.4, 28.0], [76.5, 28.0], [76.6, 28.0], [76.7, 28.0], [76.8, 28.0], [76.9, 29.0], [77.0, 29.0], [77.1, 29.0], [77.2, 29.0], [77.3, 29.0], [77.4, 29.0], [77.5, 29.0], [77.6, 29.0], [77.7, 29.0], [77.8, 29.0], [77.9, 29.0], [78.0, 29.0], [78.1, 29.0], [78.2, 30.0], [78.3, 30.0], [78.4, 30.0], [78.5, 30.0], [78.6, 30.0], [78.7, 30.0], [78.8, 31.0], [78.9, 31.0], [79.0, 31.0], [79.1, 31.0], [79.2, 31.0], [79.3, 31.0], [79.4, 31.0], [79.5, 31.0], [79.6, 31.0], [79.7, 31.0], [79.8, 31.0], [79.9, 31.0], [80.0, 31.0], [80.1, 31.0], [80.2, 31.0], [80.3, 31.0], [80.4, 31.0], [80.5, 31.0], [80.6, 31.0], [80.7, 32.0], [80.8, 32.0], [80.9, 32.0], [81.0, 32.0], [81.1, 32.0], [81.2, 32.0], [81.3, 32.0], [81.4, 32.0], [81.5, 32.0], [81.6, 32.0], [81.7, 32.0], [81.8, 32.0], [81.9, 33.0], [82.0, 33.0], [82.1, 33.0], [82.2, 33.0], [82.3, 33.0], [82.4, 33.0], [82.5, 34.0], [82.6, 34.0], [82.7, 34.0], [82.8, 34.0], [82.9, 34.0], [83.0, 34.0], [83.1, 34.0], [83.2, 37.0], [83.3, 37.0], [83.4, 37.0], [83.5, 37.0], [83.6, 37.0], [83.7, 37.0], [83.8, 37.0], [83.9, 37.0], [84.0, 37.0], [84.1, 37.0], [84.2, 37.0], [84.3, 37.0], [84.4, 39.0], [84.5, 39.0], [84.6, 39.0], [84.7, 39.0], [84.8, 39.0], [84.9, 39.0], [85.0, 41.0], [85.1, 41.0], [85.2, 41.0], [85.3, 41.0], [85.4, 41.0], [85.5, 41.0], [85.6, 41.0], [85.7, 44.0], [85.8, 44.0], [85.9, 44.0], [86.0, 44.0], [86.1, 44.0], [86.2, 44.0], [86.3, 44.0], [86.4, 44.0], [86.5, 44.0], [86.6, 44.0], [86.7, 44.0], [86.8, 44.0], [86.9, 64.0], [87.0, 64.0], [87.1, 64.0], [87.2, 64.0], [87.3, 64.0], [87.4, 64.0], [87.5, 68.0], [87.6, 68.0], [87.7, 68.0], [87.8, 68.0], [87.9, 68.0], [88.0, 68.0], [88.1, 68.0], [88.2, 72.0], [88.3, 72.0], [88.4, 72.0], [88.5, 72.0], [88.6, 72.0], [88.7, 72.0], [88.8, 75.0], [88.9, 75.0], [89.0, 75.0], [89.1, 75.0], [89.2, 75.0], [89.3, 75.0], [89.4, 76.0], [89.5, 76.0], [89.6, 76.0], [89.7, 76.0], [89.8, 76.0], [89.9, 76.0], [90.0, 78.0], [90.1, 78.0], [90.2, 78.0], [90.3, 78.0], [90.4, 78.0], [90.5, 78.0], [90.6, 78.0], [90.7, 96.0], [90.8, 96.0], [90.9, 96.0], [91.0, 96.0], [91.1, 96.0], [91.2, 96.0], [91.3, 101.0], [91.4, 101.0], [91.5, 101.0], [91.6, 101.0], [91.7, 101.0], [91.8, 101.0], [91.9, 151.0], [92.0, 151.0], [92.1, 151.0], [92.2, 151.0], [92.3, 151.0], [92.4, 151.0], [92.5, 222.0], [92.6, 222.0], [92.7, 222.0], [92.8, 222.0], [92.9, 222.0], [93.0, 222.0], [93.1, 222.0], [93.2, 225.0], [93.3, 225.0], [93.4, 225.0], [93.5, 225.0], [93.6, 225.0], [93.7, 225.0], [93.8, 226.0], [93.9, 226.0], [94.0, 226.0], [94.1, 226.0], [94.2, 226.0], [94.3, 226.0], [94.4, 227.0], [94.5, 227.0], [94.6, 227.0], [94.7, 227.0], [94.8, 227.0], [94.9, 227.0], [95.0, 227.0], [95.1, 227.0], [95.2, 227.0], [95.3, 227.0], [95.4, 227.0], [95.5, 227.0], [95.6, 227.0], [95.7, 235.0], [95.8, 235.0], [95.9, 235.0], [96.0, 235.0], [96.1, 235.0], [96.2, 235.0], [96.3, 237.0], [96.4, 237.0], [96.5, 237.0], [96.6, 237.0], [96.7, 237.0], [96.8, 237.0], [96.9, 246.0], [97.0, 246.0], [97.1, 246.0], [97.2, 246.0], [97.3, 246.0], [97.4, 246.0], [97.5, 257.0], [97.6, 257.0], [97.7, 257.0], [97.8, 257.0], [97.9, 257.0], [98.0, 257.0], [98.1, 257.0], [98.2, 269.0], [98.3, 269.0], [98.4, 269.0], [98.5, 269.0], [98.6, 269.0], [98.7, 269.0], [98.8, 310.0], [98.9, 310.0], [99.0, 310.0], [99.1, 310.0], [99.2, 310.0], [99.3, 310.0], [99.4, 436.0], [99.5, 436.0], [99.6, 436.0], [99.7, 436.0], [99.8, 436.0], [99.9, 436.0]], "isOverall": false, "label": "AfterupdateGet Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 146.0, "series": [{"data": [[300.0, 43.0], [600.0, 15.0], [700.0, 2.0], [400.0, 82.0], [500.0, 18.0]], "isOverall": false, "label": "Delete Request", "isController": false}, {"data": [[0.0, 127.0], [1100.0, 1.0], [300.0, 5.0], [600.0, 2.0], [700.0, 3.0], [200.0, 11.0], [100.0, 4.0], [800.0, 1.0], [1600.0, 1.0], [400.0, 2.0], [1700.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "Get Request", "isController": false}, {"data": [[2200.0, 1.0], [2300.0, 2.0], [3100.0, 2.0], [3300.0, 2.0], [3500.0, 1.0], [3700.0, 1.0], [3800.0, 1.0], [4400.0, 1.0], [4600.0, 1.0], [5000.0, 2.0], [5100.0, 1.0], [5200.0, 2.0], [5500.0, 3.0], [5600.0, 1.0], [5800.0, 1.0], [5900.0, 1.0], [6600.0, 1.0], [6700.0, 1.0], [6800.0, 1.0], [6900.0, 2.0], [7000.0, 4.0], [7100.0, 1.0], [7200.0, 1.0], [7300.0, 2.0], [7800.0, 1.0], [7700.0, 2.0], [8100.0, 1.0], [8000.0, 1.0], [8400.0, 1.0], [9200.0, 1.0], [8800.0, 1.0], [8900.0, 1.0], [9500.0, 1.0], [9700.0, 1.0], [9600.0, 2.0], [9400.0, 1.0], [10200.0, 4.0], [9800.0, 1.0], [10300.0, 2.0], [10400.0, 1.0], [10700.0, 2.0], [11200.0, 2.0], [10800.0, 1.0], [11100.0, 1.0], [11300.0, 1.0], [11500.0, 3.0], [11600.0, 1.0], [12200.0, 2.0], [11800.0, 2.0], [12100.0, 2.0], [11900.0, 1.0], [12600.0, 2.0], [12700.0, 2.0], [12400.0, 1.0], [13000.0, 3.0], [13200.0, 4.0], [12800.0, 3.0], [12900.0, 2.0], [13100.0, 1.0], [13700.0, 2.0], [13500.0, 4.0], [13600.0, 2.0], [13400.0, 1.0], [13900.0, 1.0], [14100.0, 2.0], [14200.0, 3.0], [14800.0, 3.0], [14500.0, 2.0], [14600.0, 2.0], [14700.0, 1.0], [14900.0, 1.0], [15000.0, 4.0], [15300.0, 1.0], [15100.0, 2.0], [15200.0, 1.0], [15400.0, 3.0], [15700.0, 2.0], [15500.0, 3.0], [15800.0, 1.0], [15600.0, 3.0], [16100.0, 1.0], [16000.0, 1.0], [16300.0, 1.0], [16200.0, 1.0], [15900.0, 1.0], [17200.0, 1.0], [16400.0, 1.0], [16500.0, 1.0], [16700.0, 3.0], [16800.0, 1.0], [16900.0, 1.0], [17000.0, 1.0], [17100.0, 1.0], [17400.0, 1.0], [17300.0, 6.0]], "isOverall": false, "label": "Post Request", "isController": false}, {"data": [[300.0, 49.0], [600.0, 6.0], [700.0, 8.0], [400.0, 86.0], [800.0, 1.0], [900.0, 2.0], [500.0, 8.0]], "isOverall": false, "label": "Put Request", "isController": false}, {"data": [[0.0, 146.0], [300.0, 1.0], [200.0, 10.0], [400.0, 1.0], [100.0, 2.0]], "isOverall": false, "label": "AfterupdateGet Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 17400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 569.0, "series": [{"data": [[0.0, 569.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 69.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 140.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 22.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 103.29749999999994, "minX": 1.72857264E12, "maxY": 103.29749999999994, "series": [{"data": [[1.72857264E12, 103.29749999999994]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857264E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.0, "maxY": 16922.0, "series": [{"data": [[2.0, 599.0], [3.0, 475.0], [4.0, 480.0], [5.0, 475.0], [6.0, 475.0], [7.0, 476.0], [8.0, 481.0], [10.0, 387.0], [12.0, 468.0], [14.0, 397.0], [15.0, 401.0], [16.0, 420.0], [17.0, 485.0], [18.0, 680.0], [20.0, 590.0], [22.0, 497.5], [23.0, 481.0], [25.0, 481.5], [26.0, 401.0], [27.0, 390.0], [28.0, 385.0], [30.0, 394.5], [33.0, 476.0], [32.0, 383.0], [35.0, 434.5], [34.0, 394.0], [37.0, 384.0], [39.0, 617.0], [38.0, 457.0], [43.0, 479.0], [42.0, 424.3333333333333], [45.0, 605.0], [44.0, 395.0], [47.0, 489.0], [49.0, 602.5], [48.0, 407.0], [53.0, 517.5], [55.0, 529.75], [59.0, 531.0], [58.0, 485.3333333333333], [61.0, 463.0], [60.0, 557.0], [62.0, 523.0], [67.0, 402.0], [66.0, 493.0], [65.0, 408.0], [64.0, 473.5], [71.0, 391.0], [69.0, 474.0], [68.0, 396.0], [74.0, 478.0], [73.0, 390.0], [72.0, 391.0], [79.0, 602.0], [77.0, 479.0], [82.0, 472.0], [81.0, 478.0], [80.0, 393.0], [86.0, 478.0], [85.0, 598.0], [84.0, 632.0], [91.0, 538.0], [90.0, 432.71428571428567], [89.0, 411.0], [95.0, 482.0], [94.0, 401.0], [93.0, 474.0], [99.0, 397.0], [98.0, 474.0], [97.0, 394.0], [96.0, 386.0], [103.0, 385.0], [102.0, 479.0], [101.0, 600.0], [100.0, 475.0], [106.0, 475.0], [105.0, 471.0], [104.0, 470.0], [111.0, 388.0], [109.0, 389.5], [108.0, 395.0], [115.0, 392.0], [114.0, 474.0], [113.0, 742.0], [112.0, 521.5], [117.0, 692.0], [116.0, 386.0], [122.0, 403.0], [121.0, 414.0], [120.0, 510.0], [127.0, 623.5], [126.0, 542.0], [125.0, 476.0], [124.0, 478.0], [135.0, 477.0], [134.0, 476.5], [132.0, 487.0], [131.0, 491.6666666666667], [128.0, 527.5], [142.0, 400.0], [141.0, 389.0], [140.0, 398.0], [139.0, 474.0], [137.0, 475.0], [136.0, 686.0], [151.0, 394.0], [150.0, 482.0], [149.0, 394.0], [148.0, 389.0], [147.0, 492.0], [146.0, 392.0], [145.0, 418.0], [144.0, 488.5], [159.0, 479.0], [158.0, 494.0], [157.0, 619.0], [156.0, 399.0], [154.0, 476.0], [155.0, 443.0], [153.0, 480.0], [160.0, 408.0], [1.0, 383.0]], "isOverall": false, "label": "Delete Request", "isController": false}, {"data": [[81.28125000000004, 472.50625]], "isOverall": false, "label": "Delete Request-Aggregated", "isController": false}, {"data": [[71.0, 168.0], [75.0, 224.0], [73.0, 174.0], [72.0, 13.0], [79.0, 20.0], [78.0, 156.33333333333331], [77.0, 28.0], [76.0, 239.0], [81.0, 12.0], [80.0, 83.0], [86.0, 13.5], [85.0, 598.0], [84.0, 325.3333333333333], [91.0, 674.0], [90.0, 270.0], [89.0, 18.0], [88.0, 28.0], [95.0, 180.4], [94.0, 17.0], [99.0, 14.666666666666666], [98.0, 73.0], [103.0, 14.0], [102.0, 15.0], [100.0, 273.5], [110.0, 90.0], [115.0, 58.66666666666667], [113.0, 16.0], [118.0, 25.666666666666668], [116.0, 317.0], [123.0, 18.5], [125.0, 15.0], [124.0, 22.0], [134.0, 29.0], [128.0, 158.0], [140.0, 24.0], [139.0, 13.0], [136.0, 16.0], [150.0, 19.0], [148.0, 21.5], [147.0, 24.0], [145.0, 99.0], [159.0, 91.0], [156.0, 14.0], [160.0, 55.157894736842096]], "isOverall": false, "label": "Get Request", "isController": false}, {"data": [[113.55625000000002, 118.58125000000001]], "isOverall": false, "label": "Get Request-Aggregated", "isController": false}, {"data": [[72.0, 11266.0], [79.0, 15296.0], [83.0, 12877.0], [85.0, 13949.333333333334], [84.0, 12876.375], [91.0, 16922.0], [90.0, 12590.000000000002], [89.0, 14733.0], [95.0, 11492.666666666666], [94.0, 12902.0], [99.0, 13239.166666666668], [98.0, 12510.0], [97.0, 11019.5], [96.0, 13228.0], [103.0, 10975.0], [102.0, 16488.0], [101.0, 7128.0], [106.0, 16081.0], [110.0, 14733.5], [109.0, 16178.0], [115.0, 13137.2], [113.0, 15496.0], [112.0, 15494.0], [118.0, 13241.0], [116.0, 15726.0], [121.0, 15459.0], [125.0, 9168.5], [124.0, 10887.0], [132.0, 10218.0], [141.0, 12492.0], [139.0, 13026.0], [137.0, 12192.0], [136.0, 9691.0], [151.0, 11908.5], [148.0, 12101.333333333334], [147.0, 12867.0], [146.0, 11021.0], [159.0, 9285.0], [157.0, 8842.0], [160.0, 8572.23076923077]], "isOverall": false, "label": "Post Request", "isController": false}, {"data": [[117.25, 11604.581249999997]], "isOverall": false, "label": "Post Request-Aggregated", "isController": false}, {"data": [[43.0, 452.5], [45.0, 592.5], [44.0, 703.0], [57.0, 751.0], [58.0, 612.5], [61.0, 458.0], [60.0, 500.0], [67.0, 458.6], [66.0, 472.0], [65.0, 486.0], [64.0, 582.5], [71.0, 429.38461538461536], [69.0, 405.0], [68.0, 436.5], [74.0, 489.0], [73.0, 413.5], [72.0, 475.6666666666667], [79.0, 444.66666666666663], [78.0, 397.0], [77.0, 599.0], [76.0, 423.3333333333333], [83.0, 392.0], [84.0, 549.5], [91.0, 402.5], [90.0, 439.0454545454545], [95.0, 495.0], [99.0, 475.0], [98.0, 475.0], [106.0, 394.0], [104.0, 456.0], [111.0, 388.0], [109.0, 437.0], [115.0, 399.5], [113.0, 475.0], [112.0, 495.0], [117.0, 785.0], [116.0, 661.0], [123.0, 394.0], [122.0, 403.0], [126.0, 483.0], [135.0, 399.0], [134.0, 476.0], [131.0, 419.5], [128.0, 513.0], [140.0, 481.0], [136.0, 387.0], [151.0, 505.0], [149.0, 478.0], [148.0, 450.4], [145.0, 894.0], [159.0, 470.5], [158.0, 410.0], [156.0, 447.3333333333333], [155.0, 609.75], [154.0, 486.5], [153.0, 452.3333333333333], [160.0, 469.5]], "isOverall": false, "label": "Put Request", "isController": false}, {"data": [[103.36874999999995, 474.9374999999999]], "isOverall": false, "label": "Put Request-Aggregated", "isController": false}, {"data": [[25.0, 310.0], [39.0, 25.0], [38.0, 25.0], [45.0, 23.5], [44.0, 17.0], [47.0, 28.0], [49.0, 28.0], [51.0, 41.0], [55.0, 72.0], [57.0, 75.0], [59.0, 151.0], [60.0, 89.5], [67.0, 13.375000000000002], [66.0, 21.0], [64.0, 64.0], [71.0, 13.750000000000002], [69.0, 99.66666666666666], [68.0, 25.0], [75.0, 87.33333333333333], [74.0, 16.0], [73.0, 13.4], [72.0, 15.0], [79.0, 18.2], [78.0, 23.5], [77.0, 26.75], [76.0, 22.0], [83.0, 29.0], [85.0, 14.0], [84.0, 14.333333333333334], [90.0, 74.72727272727273], [89.0, 16.666666666666668], [95.0, 16.0], [98.0, 22.0], [103.0, 19.0], [106.0, 20.0], [105.0, 21.0], [104.0, 13.666666666666666], [111.0, 14.5], [109.0, 16.5], [115.0, 23.142857142857146], [112.0, 17.0], [116.0, 18.0], [123.0, 21.0], [121.0, 19.0], [127.0, 16.0], [125.0, 17.0], [134.0, 17.0], [128.0, 14.0], [142.0, 237.0], [139.0, 15.0], [150.0, 82.0], [149.0, 16.0], [148.0, 119.0], [147.0, 22.0], [146.0, 257.0], [145.0, 101.0], [144.0, 235.0], [159.0, 44.0], [156.0, 30.0], [155.0, 22.666666666666664], [153.0, 31.4], [160.0, 46.900000000000006]], "isOverall": false, "label": "AfterupdateGet Request", "isController": false}, {"data": [[101.03124999999999, 41.187499999999986]], "isOverall": false, "label": "AfterupdateGet Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 160.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3140.0333333333333, "minX": 1.72857264E12, "maxY": 17858.466666666667, "series": [{"data": [[1.72857264E12, 17858.466666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72857264E12, 3140.0333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857264E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 41.187499999999986, "minX": 1.72857264E12, "maxY": 11604.581249999997, "series": [{"data": [[1.72857264E12, 472.50625]], "isOverall": false, "label": "Delete Request", "isController": false}, {"data": [[1.72857264E12, 118.58125000000001]], "isOverall": false, "label": "Get Request", "isController": false}, {"data": [[1.72857264E12, 11604.581249999997]], "isOverall": false, "label": "Post Request", "isController": false}, {"data": [[1.72857264E12, 474.9374999999999]], "isOverall": false, "label": "Put Request", "isController": false}, {"data": [[1.72857264E12, 41.187499999999986]], "isOverall": false, "label": "AfterupdateGet Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857264E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72857264E12, "maxY": 9372.481250000003, "series": [{"data": [[1.72857264E12, 0.0]], "isOverall": false, "label": "Delete Request", "isController": false}, {"data": [[1.72857264E12, 107.78125]], "isOverall": false, "label": "Get Request", "isController": false}, {"data": [[1.72857264E12, 9372.481250000003]], "isOverall": false, "label": "Post Request", "isController": false}, {"data": [[1.72857264E12, 474.8062500000001]], "isOverall": false, "label": "Put Request", "isController": false}, {"data": [[1.72857264E12, 28.118750000000002]], "isOverall": false, "label": "AfterupdateGet Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857264E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72857264E12, "maxY": 10810.393750000007, "series": [{"data": [[1.72857264E12, 0.0]], "isOverall": false, "label": "Delete Request", "isController": false}, {"data": [[1.72857264E12, 72.37500000000001]], "isOverall": false, "label": "Get Request", "isController": false}, {"data": [[1.72857264E12, 10810.393750000007]], "isOverall": false, "label": "Post Request", "isController": false}, {"data": [[1.72857264E12, 0.0]], "isOverall": false, "label": "Put Request", "isController": false}, {"data": [[1.72857264E12, 0.0]], "isOverall": false, "label": "AfterupdateGet Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857264E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 12.0, "minX": 1.72857264E12, "maxY": 17372.0, "series": [{"data": [[1.72857264E12, 17372.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72857264E12, 10909.100000000006]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72857264E12, 16769.470000000005]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72857264E12, 13630.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72857264E12, 12.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72857264E12, 398.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857264E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 55.5, "minX": 1.0, "maxY": 16653.5, "series": [{"data": [[1.0, 7092.0], [131.0, 411.0], [151.0, 476.0], [147.0, 407.0], [153.0, 55.5], [6.0, 5809.5], [98.0, 378.0], [113.0, 394.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[151.0, 16653.5], [153.0, 15578.0], [113.0, 15667.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 153.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 6754.0, "series": [{"data": [[1.0, 6754.0], [131.0, 23.0], [151.0, 408.0], [147.0, 12.0], [153.0, 22.0], [6.0, 5809.5], [98.0, 299.0], [113.0, 20.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[151.0, 0.0], [153.0, 0.0], [113.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 153.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.72857264E12, "maxY": 13.333333333333334, "series": [{"data": [[1.72857264E12, 13.333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857264E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.72857264E12, "maxY": 8.0, "series": [{"data": [[1.72857264E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.72857264E12, 8.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72857264E12, 0.2833333333333333]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLHandshakeException", "isController": false}, {"data": [[1.72857264E12, 2.3]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.72857264E12, 2.6666666666666665]], "isOverall": false, "label": "204", "isController": false}, {"data": [[1.72857264E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.72857264E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857264E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.36666666666666664, "minX": 1.72857264E12, "maxY": 2.6666666666666665, "series": [{"data": [[1.72857264E12, 2.3]], "isOverall": false, "label": "Post Request-success", "isController": false}, {"data": [[1.72857264E12, 2.6666666666666665]], "isOverall": false, "label": "AfterupdateGet Request-success", "isController": false}, {"data": [[1.72857264E12, 2.6666666666666665]], "isOverall": false, "label": "Put Request-success", "isController": false}, {"data": [[1.72857264E12, 0.36666666666666664]], "isOverall": false, "label": "Post Request-failure", "isController": false}, {"data": [[1.72857264E12, 2.6666666666666665]], "isOverall": false, "label": "Get Request-success", "isController": false}, {"data": [[1.72857264E12, 2.6666666666666665]], "isOverall": false, "label": "Delete Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857264E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.36666666666666664, "minX": 1.72857264E12, "maxY": 12.966666666666667, "series": [{"data": [[1.72857264E12, 12.966666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.72857264E12, 0.36666666666666664]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857264E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

